2020-09-10 20:16:07,220 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 20:16:07,221 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 20:16:07,221 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:16:07,664 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:16:07,766 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:16:07,768 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:07,768 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:07,768 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:07,770 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:07,770 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:07,770 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:07,770 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:07,834 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:16:07,839 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:16:07,840 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:16:09,711 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:16:09,713 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:16:09,719 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:16:09,756 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:16:09,756 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:16:12,189 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 20:16:12,416 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0c4e2bd2-d845-3a57-a2ab-131b13e015ac
2020-09-10 20:16:12,626 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:16:12,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:16:12,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:16:12,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:16:12,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:16:12,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:16:12,637 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:12,637 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:12,637 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:12,637 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:12,637 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:12,637 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:12,638 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:12,638 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:12,638 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:12,638 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:12,690 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:16:12,693 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$a6f27a36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:12,696 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:12,729 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:12,733 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:12,734 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:16:12,734 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:16:12,734 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:12,735 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:16:12,778 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 20:16:12,784 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:12,967 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:13,132 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:16:14,414 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:16:14,414 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:16:14,443 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 20:16:14,444 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 20:16:14,469 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:16:14,470 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:16:14,470 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:16:14,765 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:14,769 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$46c6ecab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:14,777 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:14,790 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:14,826 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@19b887b3' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:14,838 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:14,849 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:14,855 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:14,965 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:15,085 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:15,438 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:16:15,477 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:16:15,478 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 5663 ms
2020-09-10 20:16:15,698 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 20:16:15,698 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 20:16:16,259 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:16:17,472 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:16:17,709 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1} inited
2020-09-10 20:16:17,750 [restartedMain] INFO  [i.s.s.a.datasource.SeataAutoDataSourceProxyCreator] SeataAutoDataSourceProxyCreator.java:45 - Auto proxy of [dataSource]
2020-09-10 20:16:17,780 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
2020-09-10 20:16:17,799 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 20:16:17,830 [restartedMain] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.whalex.pay.order.WhalePayApplication.main(WhalePayApplication.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1526)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1511)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 63 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1172)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:350)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:52)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 73 common frames omitted
Caused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:208)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:110)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:471)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:350)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.getEarlyBeanReference(AbstractAutoProxyCreator.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getEarlyBeanReference(AbstractAutowireCapableBeanFactory.java:965)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$doCreateBean$1(AbstractAutowireCapableBeanFactory.java:588)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:188)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:168)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:249)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfUnique(DefaultListableBeanFactory.java:1961)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.getDataSourceInitializer(DataSourceInitializerInvoker.java:98)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.afterPropertiesSet(DataSourceInitializerInvoker.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 87 common frames omitted
Caused by: org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:538)
	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:363)
	at org.springframework.cglib.proxy.Enhancer.generate(Enhancer.java:585)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:110)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:108)
	at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61)
	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:134)
	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:319)
	at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:572)
	at org.springframework.cglib.proxy.Enhancer.createClass(Enhancer.java:419)
	at org.springframework.aop.framework.ObjenesisCglibAopProxy.createProxyClassAndInstance(ObjenesisCglibAopProxy.java:57)
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:205)
	... 104 common frames omitted
Caused by: java.lang.IllegalAccessError: class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$17bc58f1 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:535)
	... 118 common frames omitted
2020-09-10 20:16:40,908 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 20:16:40,910 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 20:16:40,910 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:16:41,378 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:16:41,481 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:16:41,483 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:41,484 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:41,484 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:41,485 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:41,485 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:41,485 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:41,486 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:41,547 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:16:41,551 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:16:41,552 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:16:43,352 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:16:43,353 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:16:43,358 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:16:43,394 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:16:43,394 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:16:45,818 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 20:16:46,036 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0c4e2bd2-d845-3a57-a2ab-131b13e015ac
2020-09-10 20:16:46,139 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:16:46,152 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:16:46,153 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:16:46,153 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:16:46,153 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:16:46,153 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:16:46,154 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:46,154 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:46,154 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:46,154 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:46,154 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:46,154 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:46,155 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:46,155 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:46,155 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:16:46,155 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:16:46,215 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:16:46,220 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$84755eea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,223 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,259 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,263 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,264 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:16:46,264 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:16:46,265 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,266 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:16:46,311 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 20:16:46,317 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,327 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,505 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:16:46,640 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:16:46,640 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:16:46,654 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 20:16:46,655 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 20:16:46,663 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:16:46,663 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:16:46,663 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:16:46,979 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,983 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2449d15f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:46,990 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:47,003 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:47,038 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@719011dd' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:47,050 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:47,061 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:47,066 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:47,175 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:47,294 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:16:47,649 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:16:47,691 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:16:47,692 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4240 ms
2020-09-10 20:16:47,899 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 20:16:47,900 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 20:16:48,436 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:16:49,314 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:16:49,507 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1} inited
2020-09-10 20:16:49,543 [restartedMain] INFO  [i.s.s.a.datasource.SeataAutoDataSourceProxyCreator] SeataAutoDataSourceProxyCreator.java:45 - Auto proxy of [dataSource]
2020-09-10 20:16:49,571 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
2020-09-10 20:16:49,587 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 20:16:49,613 [restartedMain] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.whalex.pay.order.WhalePayApplication.main(WhalePayApplication.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1526)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1511)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 63 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1172)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:350)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:52)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 73 common frames omitted
Caused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:208)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:110)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:471)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:350)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.getEarlyBeanReference(AbstractAutoProxyCreator.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getEarlyBeanReference(AbstractAutowireCapableBeanFactory.java:965)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$doCreateBean$1(AbstractAutowireCapableBeanFactory.java:588)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:188)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:168)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:249)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfUnique(DefaultListableBeanFactory.java:1961)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.getDataSourceInitializer(DataSourceInitializerInvoker.java:98)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.afterPropertiesSet(DataSourceInitializerInvoker.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 87 common frames omitted
Caused by: org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:538)
	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:363)
	at org.springframework.cglib.proxy.Enhancer.generate(Enhancer.java:585)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:110)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:108)
	at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61)
	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:134)
	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:319)
	at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:572)
	at org.springframework.cglib.proxy.Enhancer.createClass(Enhancer.java:419)
	at org.springframework.aop.framework.ObjenesisCglibAopProxy.createProxyClassAndInstance(ObjenesisCglibAopProxy.java:57)
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:205)
	... 104 common frames omitted
Caused by: java.lang.IllegalAccessError: class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$52c610c9 cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:535)
	... 118 common frames omitted
2020-09-10 20:17:46,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:17:56,663 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:18:06,663 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:18:16,665 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:18:26,665 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:18:36,663 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:18:46,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:18:56,665 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:19:06,663 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:19:16,663 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:19:26,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:19:36,665 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:19:46,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:19:56,663 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:20:06,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:20:16,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:20:26,665 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:20:36,665 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:20:46,665 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:20:56,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:21:06,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:21:16,664 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:21:26,665 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72f0c5e2 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:21:38,221 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 20:21:38,223 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 20:21:38,223 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:21:38,807 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:21:38,943 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:21:38,946 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:38,946 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:38,946 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:38,948 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:21:38,948 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:38,948 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:38,948 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:39,021 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:21:39,026 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:21:39,028 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:21:41,238 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:21:41,241 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:21:41,249 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:21:41,306 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:21:41,306 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:21:45,146 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 20:21:45,395 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0c4e2bd2-d845-3a57-a2ab-131b13e015ac
2020-09-10 20:21:45,614 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:21:45,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:21:45,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:21:45,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:21:45,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:21:45,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:21:45,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:21:45,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:21:45,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:45,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:45,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:21:45,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:45,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:45,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:45,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:21:45,636 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:21:45,740 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:21:45,749 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$c894efbd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:45,755 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:45,818 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:45,828 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:45,830 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:21:45,830 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:21:45,831 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:45,833 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:21:45,898 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 20:21:45,907 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:45,922 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,153 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:21:46,331 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:21:46,331 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:21:46,348 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 20:21:46,349 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 20:21:46,359 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:21:46,359 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:21:46,360 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:21:46,673 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,677 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$68696232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,685 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,697 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,732 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@262c1dc1' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,745 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,756 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,761 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,873 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:46,997 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:21:47,342 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:21:47,435 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:21:47,435 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 6042 ms
2020-09-10 20:21:47,652 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 20:21:47,653 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 20:21:48,365 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:21:49,692 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:21:49,960 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1} inited
2020-09-10 20:21:50,006 [restartedMain] INFO  [i.s.s.a.datasource.SeataAutoDataSourceProxyCreator] SeataAutoDataSourceProxyCreator.java:45 - Auto proxy of [dataSource]
2020-09-10 20:21:50,061 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
2020-09-10 20:21:50,095 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 20:21:50,136 [restartedMain] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.whalex.pay.order.WhalePayApplication.main(WhalePayApplication.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1526)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1511)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 63 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1172)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:350)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:52)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 73 common frames omitted
Caused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:208)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:110)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:471)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:350)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.getEarlyBeanReference(AbstractAutoProxyCreator.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getEarlyBeanReference(AbstractAutowireCapableBeanFactory.java:965)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$doCreateBean$1(AbstractAutowireCapableBeanFactory.java:588)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:188)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:168)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:249)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfUnique(DefaultListableBeanFactory.java:1961)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.getDataSourceInitializer(DataSourceInitializerInvoker.java:98)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.afterPropertiesSet(DataSourceInitializerInvoker.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 87 common frames omitted
Caused by: org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:538)
	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:363)
	at org.springframework.cglib.proxy.Enhancer.generate(Enhancer.java:585)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:110)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:108)
	at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61)
	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:134)
	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:319)
	at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:572)
	at org.springframework.cglib.proxy.Enhancer.createClass(Enhancer.java:419)
	at org.springframework.aop.framework.ObjenesisCglibAopProxy.createProxyClassAndInstance(ObjenesisCglibAopProxy.java:57)
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:205)
	... 104 common frames omitted
Caused by: java.lang.IllegalAccessError: class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$69c8d2ce cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:535)
	... 118 common frames omitted
2020-09-10 20:22:46,360 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:22:56,359 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:23:06,360 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:23:16,360 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:23:26,361 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:23:36,360 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:23:46,361 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:23:56,361 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:24:06,361 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:24:16,360 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70f3b3ca has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:24:35,959 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 20:24:35,960 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 20:24:35,960 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:24:36,448 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:24:36,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:24:36,568 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:36,569 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:36,569 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:36,570 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:24:36,571 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:36,571 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:36,571 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:36,645 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:24:36,649 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:24:36,651 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:24:38,470 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:24:38,472 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:24:38,477 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:24:38,517 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:24:38,517 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:24:41,183 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 20:24:41,412 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=0c4e2bd2-d845-3a57-a2ab-131b13e015ac
2020-09-10 20:24:41,521 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:24:41,533 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:24:41,533 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:24:41,533 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:24:41,533 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:24:41,534 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:24:41,534 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:24:41,534 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:24:41,534 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:41,534 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:41,534 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:24:41,534 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:41,535 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:41,535 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:41,535 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:24:41,535 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:24:41,600 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:24:41,605 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$d8279abf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:41,609 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:41,647 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:41,652 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:41,653 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:24:41,653 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:24:41,654 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:41,655 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:24:41,705 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 20:24:41,713 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:41,724 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:41,921 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:24:42,130 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:24:42,130 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:24:42,154 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 20:24:42,155 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 20:24:42,171 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:24:42,171 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:24:42,171 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:24:42,682 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:42,689 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$77fc0d34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:42,701 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:42,724 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:42,788 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@65b2d7f1' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:42,803 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:42,821 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:42,830 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:42,988 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:43,142 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:24:43,597 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:24:43,661 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:24:43,662 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 5082 ms
2020-09-10 20:24:43,936 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 20:24:43,936 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 20:24:44,648 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:24:45,635 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:24:45,875 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1} inited
2020-09-10 20:24:45,930 [restartedMain] INFO  [i.s.s.a.datasource.SeataAutoDataSourceProxyCreator] SeataAutoDataSourceProxyCreator.java:45 - Auto proxy of [dataSource]
2020-09-10 20:24:45,972 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
2020-09-10 20:24:45,997 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 20:24:46,030 [restartedMain] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.whalex.pay.order.WhalePayApplication.main(WhalePayApplication.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1526)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 39 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1511)
	... 50 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 63 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker': Invocation of init method failed; nested exception is org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1172)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:350)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:52)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 73 common frames omitted
Caused by: org.springframework.aop.framework.AopConfigException: Could not generate CGLIB subclass of class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper: Common causes of this problem include using a final class or a non-visible class; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:208)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:110)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:471)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:350)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.getEarlyBeanReference(AbstractAutoProxyCreator.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getEarlyBeanReference(AbstractAutowireCapableBeanFactory.java:965)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$doCreateBean$1(AbstractAutowireCapableBeanFactory.java:588)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:188)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:168)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:249)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfUnique(DefaultListableBeanFactory.java:1961)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.getDataSourceInitializer(DataSourceInitializerInvoker.java:98)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.afterPropertiesSet(DataSourceInitializerInvoker.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 87 common frames omitted
Caused by: org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalAccessError-->class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:538)
	at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:363)
	at org.springframework.cglib.proxy.Enhancer.generate(Enhancer.java:585)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:110)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:108)
	at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61)
	at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)
	at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:134)
	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:319)
	at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:572)
	at org.springframework.cglib.proxy.Enhancer.createClass(Enhancer.java:419)
	at org.springframework.aop.framework.ObjenesisCglibAopProxy.createProxyClassAndInstance(ObjenesisCglibAopProxy.java:57)
	at org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:205)
	... 104 common frames omitted
Caused by: java.lang.IllegalAccessError: class com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper$$EnhancerBySpringCGLIB$$e2bebcbd cannot access its superclass com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:535)
	... 118 common frames omitted
2020-09-10 20:25:42,172 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:25:52,171 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:26:02,171 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:26:12,171 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:26:22,172 [timeoutChecker_2_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:164 - Failed to get available servers: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53fe2db9 has not been refreshed yet
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1096)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:93)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:43)
	at io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:56)
	at io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)
	at io.seata.discovery.registry.RegistryFactory.buildRegistryService(RegistryFactory.java:52)
	at io.seata.discovery.registry.RegistryFactory.getInstance(RegistryFactory.java:43)
	at io.seata.core.rpc.netty.NettyClientChannelManager.getAvailServerList(NettyClientChannelManager.java:216)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:162)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 20:26:35,495 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 20:26:35,496 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 20:26:35,497 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:26:36,157 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:26:36,263 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:26:36,266 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:36,266 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:36,266 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:36,267 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:26:36,267 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:36,267 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:36,268 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:36,329 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:26:36,333 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:26:36,335 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:26:38,161 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:26:38,163 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:26:38,168 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:26:38,205 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:26:38,205 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:26:40,518 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 20:26:40,719 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=2481c7f5-f975-3e5f-bcd5-8fa7a78c2b0a
2020-09-10 20:26:40,811 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:26:40,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:26:40,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:26:40,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:26:40,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:26:40,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:26:40,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:26:40,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:26:40,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:40,823 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:40,823 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:26:40,823 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:40,823 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:40,823 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:40,823 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:26:40,824 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:26:40,882 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:26:40,886 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$eb517ab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:40,889 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:40,922 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:40,926 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:40,927 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:26:40,927 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:26:40,928 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:40,929 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:26:40,971 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 20:26:40,978 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:40,988 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,159 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:26:41,291 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:26:41,292 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:26:41,305 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 20:26:41,306 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 20:26:41,314 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:26:41,315 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:26:41,315 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:26:41,620 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,624 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8b25ed2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,632 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,645 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,680 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5121b1f2' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,693 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,704 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,710 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,821 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:41,942 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:26:42,281 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:26:42,318 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:26:42,319 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4060 ms
2020-09-10 20:26:42,518 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 20:26:42,518 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 20:26:43,012 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:26:43,804 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:26:43,997 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1} inited
2020-09-10 20:26:45,303 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$83fdd67f] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 20:26:45,418 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 20:26:45,550 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 20:26:45,636 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:26:45,636 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:26:45,643 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:26:45,643 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:26:45,865 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 20:26:47,561 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:26:47,569 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:26:48,515 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: bebc528f-4cf5-4e03-8e61-95f6717e8c3c

2020-09-10 20:26:49,175 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c81bd5f, org.springframework.security.web.context.SecurityContextPersistenceFilter@4efa06cb, org.springframework.security.web.header.HeaderWriterFilter@3c802106, org.springframework.security.web.authentication.logout.LogoutFilter@3690ce20, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@42bd4c7c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8bbdc33, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f115a0d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5619b4cb, org.springframework.security.web.session.SessionManagementFilter@41ac3f29, org.springframework.security.web.access.ExceptionTranslationFilter@7c0f0a79, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ba23525]
2020-09-10 20:26:49,300 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 20:26:50,880 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:26:50,927 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 20:26:50,930 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 20:26:51,075 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 20:26:51,087 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 20:26:51,105 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 20:26:51,147 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 20:26:51,198 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 20:26:51,211 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 20:26:52,808 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:26:52,824 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 20.371 seconds (JVM running for 24.745)
2020-09-10 20:26:53,298 [RMI TCP Connection(9)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 20:26:53,298 [RMI TCP Connection(9)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 20:26:53,312 [RMI TCP Connection(9)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 20:27:41,411 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:27:41,431 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:27:41,521 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:27:41,522 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='null', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:27:42,704 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xfb84f522, L:/192.168.72.1:60018 - R:/192.168.72.1:8091]
2020-09-10 20:27:42,704 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x6dde1361, L:/192.168.72.1:60019 - R:/192.168.72.1:8091]
2020-09-10 20:27:42,710 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 358 ms, version:1.3.0,role:RMROLE,channel:[id: 0xfb84f522, L:/192.168.72.1:60018 - R:/192.168.72.1:8091]
2020-09-10 20:27:42,710 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 358 ms, version:1.3.0,role:TMROLE,channel:[id: 0x6dde1361, L:/192.168.72.1:60019 - R:/192.168.72.1:8091]
2020-09-10 20:28:32,707 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@3b8c224f
2020-09-10 20:28:32,945 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47419596092739584]
2020-09-10 20:28:33,170 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id = ?, status = ?, create_time = ?, update_time = ? WHERE tenant_code = 0 AND id = ? AND is_delete = 0 
2020-09-10 20:28:33,272 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, 2020-09-10T20:28:33.039(LocalDateTime), 1(Long)
2020-09-10 20:28:33,278 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 20:28:34,297 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 20:28:34,319 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 20:28:34,328 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 20:28:34,345 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 20:28:34,347 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[192.168.72.1:10010],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.72.1:10010;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@f857f4a
2020-09-10 20:28:35,322 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:143 - [192.168.72.1:8091:47419596092739584] commit status: Committed
2020-09-10 20:28:35,333 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 20:29:59,327 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47419959323660288]
2020-09-10 20:29:59,332 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id = ?, status = ?, create_time = ?, update_time = ? WHERE tenant_code = 0 AND id = ? AND is_delete = 0 
2020-09-10 20:29:59,333 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, 2020-09-10T20:29:59.331(LocalDateTime), 1(Long)
2020-09-10 20:29:59,334 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 20:29:59,360 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:143 - [192.168.72.1:8091:47419959323660288] commit status: Committed
2020-09-10 20:30:03,225 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47419975668862976]
2020-09-10 20:30:03,231 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id = ?, status = ?, create_time = ?, update_time = ? WHERE tenant_code = 0 AND id = ? AND is_delete = 0 
2020-09-10 20:30:03,232 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, 2020-09-10T20:30:03.228(LocalDateTime), 1(Long)
2020-09-10 20:30:03,233 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 20:30:03,251 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:143 - [192.168.72.1:8091:47419975668862976] commit status: Committed
2020-09-10 20:39:59,562 [Thread-3] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 20:39:59,569 [Thread-3] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 20:39:59,572 [Thread-3] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:39:59,574 [Thread-3] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 20:39:59,575 [Thread-3] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 20:39:59,576 [Thread-3] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 20:39:59,577 [Thread-3] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 20:39:59,583 [Thread-3] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 20:39:59,590 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x6dde1361, L:/192.168.72.1:60019 ! R:/192.168.72.1:8091]
2020-09-10 20:39:59,590 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x6dde1361, L:/192.168.72.1:60019 ! R:/192.168.72.1:8091]
2020-09-10 20:39:59,590 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x6dde1361, L:/192.168.72.1:60019 ! R:/192.168.72.1:8091]
2020-09-10 20:39:59,590 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x6dde1361, L:/192.168.72.1:60019 ! R:/192.168.72.1:8091]
2020-09-10 20:39:59,591 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x6dde1361, L:/192.168.72.1:60019 ! R:/192.168.72.1:8091]) will closed
2020-09-10 20:39:59,591 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x6dde1361, L:/192.168.72.1:60019 ! R:/192.168.72.1:8091]) will closed
2020-09-10 20:40:01,627 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:40:01,631 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:40:01,631 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:01,631 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:01,631 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:01,631 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:01,631 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:01,631 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:01,632 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:01,635 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:40:01,635 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:40:01,635 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:40:03,378 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:40:03,381 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:40:03,386 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:40:03,402 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:40:03,402 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:40:04,714 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=2481c7f5-f975-3e5f-bcd5-8fa7a78c2b0a
2020-09-10 20:40:04,729 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:40:04,737 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:04,738 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:04,739 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:04,739 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:04,739 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:04,752 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:40:04,754 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$eb517ab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,754 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,754 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,758 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,759 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:40:04,759 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:40:04,759 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,760 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:40:04,760 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:40:04,761 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:40:04,761 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:40:04,761 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:40:04,761 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:40:04,792 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,794 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8b25ed2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,797 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,798 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,804 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@760d4e6e' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,809 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,810 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,813 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,841 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:04,878 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:05,047 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:40:05,050 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:40:05,050 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1632 ms
2020-09-10 20:40:05,291 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:40:05,409 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:40:05,441 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-2} inited
2020-09-10 20:40:06,041 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 20:40:06,100 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 20:40:06,128 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:40:06,128 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:40:06,266 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 20:40:07,902 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:40:07,909 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:40:08,174 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 6fe9180c-d5d5-464b-95ea-d23df8611c3c

2020-09-10 20:40:08,261 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61e10aed, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d6cf88e, org.springframework.security.web.header.HeaderWriterFilter@189990c5, org.springframework.security.web.authentication.logout.LogoutFilter@1e071173, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@199a0261, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4efaa777, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ab119d5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7bb2b260, org.springframework.security.web.session.SessionManagementFilter@1b74bdc1, org.springframework.security.web.access.ExceptionTranslationFilter@58c96995, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b04491d]
2020-09-10 20:40:08,289 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 20:40:10,154 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:40:10,203 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 20:40:10,208 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 20:40:10,280 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 20:40:10,289 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 20:40:10,291 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 20:40:12,150 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:40:12,162 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 12.339 seconds (JVM running for 824.083)
2020-09-10 20:40:12,164 [restartedMain] INFO  [o.s.b.d.a.ConditionEvaluationDeltaLoggingListener] ConditionEvaluationDeltaLoggingListener.java:63 - Condition evaluation unchanged
2020-09-10 20:40:43,710 [Thread-685] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 20:40:43,718 [Thread-685] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:40:43,720 [Thread-685] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 20:40:43,723 [Thread-685] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 20:40:43,724 [Thread-685] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 20:40:43,725 [Thread-685] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-2} closing ...
2020-09-10 20:40:43,726 [Thread-685] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-2} closed
2020-09-10 20:40:47,072 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:40:47,079 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:40:47,079 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:47,080 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:47,080 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:47,080 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:47,080 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:47,080 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:47,080 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:47,084 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:40:47,085 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:40:47,086 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:40:50,106 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:40:50,108 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:40:50,111 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:40:50,124 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:40:50,124 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:40:52,623 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=2481c7f5-f975-3e5f-bcd5-8fa7a78c2b0a
2020-09-10 20:40:52,645 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:40:52,659 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:40:52,659 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:40:52,659 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:40:52,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:40:52,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:40:52,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:52,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:52,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:52,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:52,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:52,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:52,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:52,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:52,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:40:52,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:40:52,683 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:40:52,686 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$eb517ab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,686 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,687 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,694 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,696 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:40:52,697 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:40:52,698 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,700 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:40:52,701 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:40:52,702 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:40:52,703 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:40:52,703 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:40:52,703 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:40:52,759 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,764 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8b25ed2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,769 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,771 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,780 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6ae6909e' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,798 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,801 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,808 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:52,957 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:53,163 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:40:53,544 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:40:53,546 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:40:53,546 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 3406 ms
2020-09-10 20:40:53,987 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:40:54,250 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:40:54,315 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-3} inited
2020-09-10 20:40:55,314 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 20:40:55,390 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 20:40:55,433 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:40:55,434 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:40:55,630 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 20:40:58,578 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:40:58,591 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:40:59,315 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 3f0c888b-d656-4f45-ad8b-4db7fb75e0a3

2020-09-10 20:40:59,515 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39843341, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e809b58, org.springframework.security.web.header.HeaderWriterFilter@5490d4ec, org.springframework.security.web.authentication.logout.LogoutFilter@46070575, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@1231a7ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@338f6468, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@616af141, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57171ed4, org.springframework.security.web.session.SessionManagementFilter@46e37e70, org.springframework.security.web.access.ExceptionTranslationFilter@48d0b242, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7df6f2d5]
2020-09-10 20:40:59,598 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 20:41:02,189 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:41:02,221 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 20:41:02,225 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 20:41:02,276 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 20:41:02,286 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 20:41:02,288 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 20:41:04,323 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:41:04,337 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 19.965 seconds (JVM running for 876.258)
2020-09-10 20:41:04,339 [restartedMain] INFO  [o.s.b.d.a.ConditionEvaluationDeltaLoggingListener] ConditionEvaluationDeltaLoggingListener.java:63 - Condition evaluation unchanged
2020-09-10 20:41:04,762 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:41:04,763 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:41:04,766 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xfe199115, L:/192.168.72.1:64303 - R:/192.168.72.1:8091]
2020-09-10 20:41:04,766 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 2 ms, version:1.3.0,role:TMROLE,channel:[id: 0xfe199115, L:/192.168.72.1:64303 - R:/192.168.72.1:8091]
2020-09-10 20:41:09,481 [Thread-1248] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 20:41:09,491 [Thread-1248] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:41:09,492 [Thread-1248] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 20:41:09,494 [Thread-1248] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 20:41:09,496 [Thread-1248] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 20:41:09,497 [Thread-1248] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-3} closing ...
2020-09-10 20:41:09,497 [Thread-1248] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-3} closed
2020-09-10 20:41:13,815 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:41:13,821 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:41:13,821 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:13,821 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:13,821 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:13,821 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:13,821 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:13,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:13,822 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:13,826 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:41:13,827 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:41:13,828 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:41:16,470 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:41:16,473 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:41:16,477 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:41:16,496 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:41:16,496 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:41:19,305 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=7fc3ed21-04b5-3f92-b0d7-568b4402c0c8
2020-09-10 20:41:19,334 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:41:19,357 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:19,357 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:19,357 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:19,357 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:19,358 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:41:19,358 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:19,358 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:19,358 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:19,358 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:19,358 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:19,358 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:19,359 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:19,359 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:19,359 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:19,359 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:19,380 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:41:19,383 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$eb517ab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,383 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,384 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,391 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,392 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:41:19,393 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:41:19,394 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,395 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:41:19,396 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:41:19,397 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:41:19,398 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:41:19,398 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:41:19,398 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:41:19,467 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,473 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8b25ed2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,479 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,481 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,493 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4129cdfc' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,504 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,506 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,510 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,577 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:19,668 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:20,018 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:41:20,021 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:41:20,021 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 3498 ms
2020-09-10 20:41:20,221 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'aliPayConfigController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.whalex.pay.order.controller.AliPayConfigController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7be37088]
2020-09-10 20:41:20,242 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 20:41:20,286 [restartedMain] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'aliPayConfigController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.whalex.pay.order.controller.AliPayConfigController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7be37088]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors$original$8OhXBmDj(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors$original$8OhXBmDj$accessor$YKLHeGhP(AutowiredAnnotationBeanPostProcessor.java)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$auxiliary$6tPGjWFd.call(Unknown Source)
	at org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstMethodsInter.intercept(InstMethodsInter.java:86)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.whalex.pay.order.WhalePayApplication.main(WhalePayApplication.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.whalex.pay.order.controller.AliPayConfigController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7be37088]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors$original$8OhXBmDj(AutowiredAnnotationBeanPostProcessor.java:267)
	... 28 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/whalex/pay/api/entity/PayTest
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 30 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.whalex.pay.api.entity.PayTest
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 34 common frames omitted
2020-09-10 20:41:25,393 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:41:25,402 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:41:25,402 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:25,402 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:25,402 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:25,403 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:25,403 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:25,403 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:25,403 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:25,409 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:41:25,413 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:41:25,413 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:41:27,668 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:41:27,670 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:41:27,674 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:41:27,687 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:41:27,687 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:41:29,046 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=7fc3ed21-04b5-3f92-b0d7-568b4402c0c8
2020-09-10 20:41:29,072 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:41:29,088 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:29,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:29,090 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:29,090 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:29,090 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:29,090 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:29,090 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:29,104 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:41:29,106 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$eb517ab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,106 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,106 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,111 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,112 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:41:29,112 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:41:29,113 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,114 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:41:29,114 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:41:29,115 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:41:29,115 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:41:29,116 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:41:29,116 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:41:29,152 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,155 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8b25ed2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,158 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,159 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,163 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7a720e56' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,169 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,171 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,173 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,200 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,238 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:29,525 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:41:29,527 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:41:29,527 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1825 ms
2020-09-10 20:41:29,730 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'payTradeOrderController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.whalex.pay.order.controller.PayTradeOrderController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4fdfb531]
2020-09-10 20:41:29,742 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 20:41:29,743 [restartedMain] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'payTradeOrderController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.whalex.pay.order.controller.PayTradeOrderController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4fdfb531]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors$original$8OhXBmDj(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors$original$8OhXBmDj$accessor$YKLHeGhP(AutowiredAnnotationBeanPostProcessor.java)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$auxiliary$6tPGjWFd.call(Unknown Source)
	at org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstMethodsInter.intercept(InstMethodsInter.java:86)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.whalex.pay.order.WhalePayApplication.main(WhalePayApplication.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.whalex.pay.order.controller.PayTradeOrderController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4fdfb531]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors$original$8OhXBmDj(AutowiredAnnotationBeanPostProcessor.java:267)
	... 28 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/whalex/common/mybatisPlus/entity/TenantEntity
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.findClass(RestartClassLoader.java:159)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:141)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 30 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.whalex.common.mybatisPlus.entity.TenantEntity
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 46 common frames omitted
2020-09-10 20:41:52,504 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:41:52,558 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:41:52,558 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:52,558 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:52,558 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:52,559 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:52,559 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:52,559 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:52,559 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:52,586 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:41:52,588 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:41:52,588 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:41:55,774 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:41:55,777 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:41:55,789 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:41:55,833 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:41:55,834 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:41:57,806 [restartedMain] WARN  [org.mybatis.spring.mapper.ClassPathMapperScanner] Logger.java:44 - No MyBatis mapper was found in '[com.whalex.pay.order]' package. Please check your configuration.
2020-09-10 20:41:57,848 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=b0f73059-e257-3bd9-9d58-87442cc09c2f
2020-09-10 20:41:57,861 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:41:57,878 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:57,878 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:57,878 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:57,878 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:41:57,878 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:41:57,879 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:57,879 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:57,879 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:57,879 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:57,879 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:57,879 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:57,879 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:57,880 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:57,880 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:41:57,880 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:41:57,899 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:41:57,902 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$eb517ab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,902 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,902 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,907 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,908 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:41:57,908 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:41:57,909 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,910 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:41:57,911 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:41:57,912 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:41:57,912 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:41:57,912 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:41:57,913 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:41:57,965 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,970 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8b25ed2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,974 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,976 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,986 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5e080b5a' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,996 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:57,998 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:58,003 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:58,066 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:58,131 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:41:58,497 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:41:58,500 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:41:58,500 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2631 ms
2020-09-10 20:41:59,315 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:41:59,435 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.whalex.pay.order.mapper.PayTradeOrderMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-09-10 20:41:59,450 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 20:41:59,928 [restartedMain] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.whalex.pay.order.mapper.PayTradeOrderMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:893)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.whalex.pay.order.WhalePayApplication.main(WhalePayApplication.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.whalex.pay.order.mapper.PayTradeOrderMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.whalex.pay.order.mapper.PayTradeOrderMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1714)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1270)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1224)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 39 common frames omitted
2020-09-10 20:42:19,399 [timeoutChecker_5_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:42:19,400 [timeoutChecker_5_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:42:19,403 [timeoutChecker_5_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x0c3d6f72, L:/192.168.72.1:64710 - R:/192.168.72.1:8091]
2020-09-10 20:42:19,403 [timeoutChecker_5_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 1 ms, version:1.3.0,role:TMROLE,channel:[id: 0x0c3d6f72, L:/192.168.72.1:64710 - R:/192.168.72.1:8091]
2020-09-10 20:42:29,116 [timeoutChecker_6_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:42:29,116 [timeoutChecker_6_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:42:29,119 [timeoutChecker_6_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x5b680e3c, L:/192.168.72.1:64758 - R:/192.168.72.1:8091]
2020-09-10 20:42:29,119 [timeoutChecker_6_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 1 ms, version:1.3.0,role:TMROLE,channel:[id: 0x5b680e3c, L:/192.168.72.1:64758 - R:/192.168.72.1:8091]
2020-09-10 20:42:51,702 [Thread-654] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 20:43:04,011 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 20:43:04,012 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 20:43:04,013 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:43:04,484 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:43:04,618 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:43:04,621 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:04,621 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:04,621 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:04,623 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:43:04,623 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:04,623 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:04,623 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:04,703 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:43:04,708 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:43:04,710 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:43:06,563 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:43:06,565 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:43:06,571 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:43:06,615 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:43:06,615 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:43:09,103 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 20:43:09,310 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=7fc3ed21-04b5-3f92-b0d7-568b4402c0c8
2020-09-10 20:43:09,407 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:43:09,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:43:09,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:43:09,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:43:09,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:43:09,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:43:09,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:43:09,419 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:43:09,419 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:09,419 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:09,419 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:43:09,419 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:09,419 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:09,419 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:09,419 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:43:09,420 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:43:09,474 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:43:09,479 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$db810e05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:09,482 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:09,518 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:09,523 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:09,524 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:43:09,524 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:43:09,525 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:09,525 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:43:09,572 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 20:43:09,579 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:09,589 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:09,764 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:43:09,908 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:43:09,909 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:43:09,922 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 20:43:09,922 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 20:43:09,930 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:43:09,930 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:43:09,930 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:43:10,209 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,213 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7b55807a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,225 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,244 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,283 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@9e35fc5' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,295 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,306 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,314 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,446 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,580 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:43:10,982 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:43:11,030 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:43:11,030 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4351 ms
2020-09-10 20:43:11,238 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 20:43:11,238 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 20:43:11,771 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:43:12,578 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:43:12,771 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1} inited
2020-09-10 20:43:13,793 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$563bfe45] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 20:43:13,909 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 20:43:14,034 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 20:43:14,123 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:43:14,123 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:43:14,131 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:43:14,131 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:43:14,352 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 20:43:16,068 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:43:16,080 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:43:16,859 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 1c383a15-1907-4850-a3c1-73a58b3b5a09

2020-09-10 20:43:17,884 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14c39894, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f2640c4, org.springframework.security.web.header.HeaderWriterFilter@f3f1f38, org.springframework.security.web.authentication.logout.LogoutFilter@1c38df43, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@160364c5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@371842e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a1109a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12ab62ed, org.springframework.security.web.session.SessionManagementFilter@692841fd, org.springframework.security.web.access.ExceptionTranslationFilter@7a81c3bf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f9d6331]
2020-09-10 20:43:18,030 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 20:43:19,656 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:43:19,714 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 20:43:19,718 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 20:43:19,916 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 20:43:19,927 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 20:43:19,945 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 20:43:19,997 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 20:43:20,060 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 20:43:20,076 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 20:43:21,919 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:43:21,933 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 20.905 seconds (JVM running for 26.776)
2020-09-10 20:43:22,869 [RMI TCP Connection(6)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 20:43:22,869 [RMI TCP Connection(6)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 20:43:22,885 [RMI TCP Connection(6)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 15 ms
2020-09-10 20:44:09,998 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:44:09,998 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:44:10,002 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='null', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:44:10,002 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:44:10,827 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x219b11db, L:/192.168.72.1:65392 - R:/192.168.72.1:8091]
2020-09-10 20:44:10,827 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xa9ae7519, L:/192.168.72.1:65393 - R:/192.168.72.1:8091]
2020-09-10 20:44:10,836 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 132 ms, version:1.3.0,role:RMROLE,channel:[id: 0x219b11db, L:/192.168.72.1:65392 - R:/192.168.72.1:8091]
2020-09-10 20:44:10,836 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 132 ms, version:1.3.0,role:TMROLE,channel:[id: 0xa9ae7519, L:/192.168.72.1:65393 - R:/192.168.72.1:8091]
2020-09-10 20:44:53,576 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:44:53,626 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:44:53,648 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:44:53,653 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:44:53,653 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:44:53,654 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource refreshArgs [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:44:53,654 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:44:53,654 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:44:53,654 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:44:53,654 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:44:53,654 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:44:53,655 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:44:53,657 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:44:53,658 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:44:53,658 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:44:55,204 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:44:55,237 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:44:55,244 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:44:55,245 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:44:55,248 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:44:55,261 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:44:55,261 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.boot.SpringApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:44:55,275 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.boot.SpringApplication] StartupInfoLogger.java:61 - Started application in 3.206 seconds (JVM running for 120.118)
2020-09-10 20:44:55,382 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.caching.RefreshScopeRefreshedEventListener] RefreshScopeRefreshedEventListener.java:35 - Refreshing cached encryptable property sources
2020-09-10 20:44:55,382 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.caching.RefreshScopeRefreshedEventListener] RefreshScopeRefreshedEventListener.java:35 - Refreshing cached encryptable property sources
2020-09-10 20:44:55,382 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.cloud.endpoint.event.RefreshEventListener] RefreshEventListener.java:73 - Refresh keys changed: [seata.enable-auto-data-source-proxy]
2020-09-10 20:47:15,144 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:47:15,190 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:47:15,219 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource refreshArgs [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:15,223 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:15,225 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:47:15,225 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:47:15,226 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:47:16,718 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:47:16,743 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:47:16,748 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:47:16,749 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:47:16,752 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:47:16,764 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:47:16,764 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.boot.SpringApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:47:16,777 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.boot.SpringApplication] StartupInfoLogger.java:61 - Started application in 3.164 seconds (JVM running for 261.62)
2020-09-10 20:47:16,914 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.caching.RefreshScopeRefreshedEventListener] RefreshScopeRefreshedEventListener.java:35 - Refreshing cached encryptable property sources
2020-09-10 20:47:16,915 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.caching.RefreshScopeRefreshedEventListener] RefreshScopeRefreshedEventListener.java:35 - Refreshing cached encryptable property sources
2020-09-10 20:47:16,915 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.cloud.endpoint.event.RefreshEventListener] RefreshEventListener.java:73 - Refresh keys changed: [seata.enable-auto-data-source-proxy]
2020-09-10 20:47:41,180 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 20:47:41,198 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 20:47:41,201 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:47:41,203 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 20:47:41,205 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 20:47:41,206 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 20:47:41,207 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 20:47:41,226 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 20:47:41,232 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xa9ae7519, L:/192.168.72.1:65393 ! R:/192.168.72.1:8091]
2020-09-10 20:47:41,232 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xa9ae7519, L:/192.168.72.1:65393 ! R:/192.168.72.1:8091]
2020-09-10 20:47:41,233 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xa9ae7519, L:/192.168.72.1:65393 ! R:/192.168.72.1:8091]
2020-09-10 20:47:41,233 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xa9ae7519, L:/192.168.72.1:65393 ! R:/192.168.72.1:8091]
2020-09-10 20:47:41,233 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa9ae7519, L:/192.168.72.1:65393 ! R:/192.168.72.1:8091]) will closed
2020-09-10 20:47:41,233 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa9ae7519, L:/192.168.72.1:65393 ! R:/192.168.72.1:8091]) will closed
2020-09-10 20:47:53,007 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 20:47:53,009 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 20:47:53,009 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:47:53,475 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:47:53,591 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:47:53,593 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:53,593 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:53,593 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:53,595 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:47:53,595 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:53,595 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:53,595 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:53,670 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:47:53,675 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:47:53,677 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:47:55,543 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:47:55,545 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:47:55,550 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:47:55,588 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:47:55,588 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:47:58,144 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 20:47:58,360 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=7fc3ed21-04b5-3f92-b0d7-568b4402c0c8
2020-09-10 20:47:58,461 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:47:58,477 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:47:58,478 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:47:58,478 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:47:58,478 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:47:58,478 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:47:58,478 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:47:58,479 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:47:58,479 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:58,479 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:58,479 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:47:58,479 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:58,480 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:58,480 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:58,480 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:47:58,480 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:47:58,539 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:47:58,543 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$9dd015cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:58,547 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:58,587 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:58,592 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:58,593 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:47:58,594 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:47:58,595 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:58,596 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:47:58,667 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 20:47:58,674 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:58,686 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:58,871 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:47:59,006 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:47:59,006 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:47:59,019 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 20:47:59,020 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 20:47:59,028 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:47:59,028 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:47:59,028 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:47:59,333 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,337 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3da48844] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,346 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,360 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,397 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3f1b3028' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,411 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,423 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,430 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,555 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:47:59,697 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:48:00,079 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:48:00,119 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:48:00,120 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4467 ms
2020-09-10 20:48:00,355 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 20:48:00,355 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 20:48:00,885 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:48:01,754 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:48:01,974 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1} inited
2020-09-10 20:48:03,039 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$95af5f98] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 20:48:03,167 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 20:48:03,311 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 20:48:03,409 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:48:03,410 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:48:03,417 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:48:03,417 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:48:03,651 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 20:48:05,368 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:48:05,375 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:48:05,988 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 7154a3ba-bcf1-49d8-afdc-b2dcdaab9c67

2020-09-10 20:48:06,664 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5bb4e659, org.springframework.security.web.context.SecurityContextPersistenceFilter@6510df11, org.springframework.security.web.header.HeaderWriterFilter@841f37b, org.springframework.security.web.authentication.logout.LogoutFilter@45e3a07f, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@2756540e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3008d14c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6550c9d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c38efc6, org.springframework.security.web.session.SessionManagementFilter@3ef32de1, org.springframework.security.web.access.ExceptionTranslationFilter@5472970d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@33bf2ad5]
2020-09-10 20:48:06,792 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 20:48:08,607 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:48:08,656 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 20:48:08,660 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 20:48:08,801 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 20:48:08,812 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 20:48:08,827 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 20:48:08,870 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 20:48:08,921 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 20:48:08,934 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 20:48:10,425 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:48:10,438 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 20.418 seconds (JVM running for 25.603)
2020-09-10 20:48:11,339 [RMI TCP Connection(5)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 20:48:11,340 [RMI TCP Connection(5)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 20:48:11,355 [RMI TCP Connection(5)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 15 ms
2020-09-10 20:48:59,101 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:48:59,101 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:48:59,105 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='null', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:48:59,105 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:48:59,796 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x638b7568, L:/192.168.72.1:50732 - R:/192.168.72.1:8091]
2020-09-10 20:48:59,796 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xc8f52c13, L:/192.168.72.1:50733 - R:/192.168.72.1:8091]
2020-09-10 20:48:59,802 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 86 ms, version:1.3.0,role:RMROLE,channel:[id: 0xc8f52c13, L:/192.168.72.1:50733 - R:/192.168.72.1:8091]
2020-09-10 20:48:59,802 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 86 ms, version:1.3.0,role:TMROLE,channel:[id: 0x638b7568, L:/192.168.72.1:50732 - R:/192.168.72.1:8091]
2020-09-10 20:52:58,670 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@4ac15ee2
2020-09-10 20:52:58,686 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47425744762048512]
2020-09-10 20:52:58,793 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 20:52:58,906 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 20:52:58,912 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 20:52:59,244 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 20:52:59,267 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 20:52:59,274 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 20:52:59,290 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 20:52:59,291 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[192.168.72.1:10010],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.72.1:10010;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@61a3c768
2020-09-10 20:53:00,088 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:143 - [192.168.72.1:8091:47425744762048512] commit status: Committed
2020-09-10 20:53:00,279 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 20:53:11,846 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47425799980060672]
2020-09-10 20:53:11,848 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 20:53:11,849 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 20:53:11,850 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 20:53:11,873 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:143 - [192.168.72.1:8091:47425799980060672] commit status: Committed
2020-09-10 20:55:10,060 [Thread-667] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 20:55:10,065 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 20:55:10,071 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 20:55:10,073 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:55:10,075 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 20:55:10,078 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 20:55:10,079 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 20:55:10,080 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 20:55:10,085 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 20:55:10,092 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x638b7568, L:/192.168.72.1:50732 ! R:/192.168.72.1:8091]
2020-09-10 20:55:10,092 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x638b7568, L:/192.168.72.1:50732 ! R:/192.168.72.1:8091]
2020-09-10 20:55:10,092 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x638b7568, L:/192.168.72.1:50732 ! R:/192.168.72.1:8091]
2020-09-10 20:55:10,092 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x638b7568, L:/192.168.72.1:50732 ! R:/192.168.72.1:8091]
2020-09-10 20:55:10,093 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x638b7568, L:/192.168.72.1:50732 ! R:/192.168.72.1:8091]) will closed
2020-09-10 20:55:10,093 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x638b7568, L:/192.168.72.1:50732 ! R:/192.168.72.1:8091]) will closed
2020-09-10 20:55:20,980 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 20:55:20,981 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 20:55:20,981 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 20:55:21,411 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:55:21,516 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:55:21,518 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:21,518 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:21,518 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:21,520 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:55:21,520 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:21,520 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:21,520 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:21,586 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:55:21,590 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:55:21,592 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:55:23,361 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 20:55:23,363 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 20:55:23,368 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 20:55:23,405 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 20:55:23,405 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 20:55:25,756 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 20:55:25,962 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=7fc3ed21-04b5-3f92-b0d7-568b4402c0c8
2020-09-10 20:55:26,059 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 20:55:26,070 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:55:26,071 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:55:26,071 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:55:26,071 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 20:55:26,071 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 20:55:26,071 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:55:26,071 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:55:26,071 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:26,072 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:26,072 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:55:26,072 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:26,072 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:26,072 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:26,072 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 20:55:26,072 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 20:55:26,132 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 20:55:26,137 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$cad2464f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,140 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,176 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,181 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,182 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 20:55:26,182 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 20:55:26,183 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,184 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 20:55:26,234 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 20:55:26,241 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,251 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,442 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 20:55:26,564 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:55:26,565 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:55:26,578 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 20:55:26,578 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 20:55:26,586 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 20:55:26,586 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 20:55:26,586 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 20:55:26,868 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,872 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6aa6b8c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,880 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,892 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,926 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@e23fc6d' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,939 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,949 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:26,955 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:27,062 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:27,183 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 20:55:27,523 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 20:55:27,560 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 20:55:27,560 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4098 ms
2020-09-10 20:55:27,766 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 20:55:27,766 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 20:55:28,267 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 20:55:29,090 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 20:55:29,287 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1} inited
2020-09-10 20:55:30,289 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$1a4ed3f9] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 20:55:30,405 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 20:55:30,547 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 20:55:30,638 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:55:30,639 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:55:30,646 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 20:55:30,647 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 20:55:30,878 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 20:55:32,597 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:55:32,605 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 20:55:33,208 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 870f2359-ce90-47be-a751-172e68b16a9a

2020-09-10 20:55:33,873 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@189c4464, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f381f63, org.springframework.security.web.header.HeaderWriterFilter@6569191b, org.springframework.security.web.authentication.logout.LogoutFilter@4a1d742a, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@46c9fe3b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cdf9141, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24f57b16, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@472a33be, org.springframework.security.web.session.SessionManagementFilter@7a285c95, org.springframework.security.web.access.ExceptionTranslationFilter@109ed600, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@30bc1379]
2020-09-10 20:55:34,001 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 20:55:35,608 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:55:35,655 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 20:55:35,658 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 20:55:35,803 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 20:55:35,814 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 20:55:35,829 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 20:55:35,874 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 20:55:35,927 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 20:55:35,940 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 20:55:37,482 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 20:55:37,496 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 19.346 seconds (JVM running for 24.289)
2020-09-10 20:55:37,984 [RMI TCP Connection(1)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 20:55:37,985 [RMI TCP Connection(1)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 20:55:37,998 [RMI TCP Connection(1)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 20:56:26,662 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:56:26,662 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 20:56:26,666 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:56:26,666 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='null', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 20:56:27,361 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xc274362f, L:/192.168.72.1:52952 - R:/192.168.72.1:8091]
2020-09-10 20:56:27,361 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x5277d81f, L:/192.168.72.1:52951 - R:/192.168.72.1:8091]
2020-09-10 20:56:27,366 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 82 ms, version:1.3.0,role:TMROLE,channel:[id: 0x5277d81f, L:/192.168.72.1:52951 - R:/192.168.72.1:8091]
2020-09-10 20:56:27,366 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 82 ms, version:1.3.0,role:RMROLE,channel:[id: 0xc274362f, L:/192.168.72.1:52952 - R:/192.168.72.1:8091]
2020-09-10 20:56:44,565 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@686558f6
2020-09-10 20:56:44,580 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47426692234350592]
2020-09-10 20:56:44,771 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 20:56:44,890 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 20:56:44,896 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 20:56:45,370 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 20:56:45,423 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 20:56:45,436 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 20:56:45,458 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 20:56:45,462 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[192.168.72.1:10010],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.72.1:10010;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@342254c0
2020-09-10 20:56:45,761 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47426692234350592] rollback status: Rollbacked
2020-09-10 20:56:45,767 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 / by zero
2020-09-10 20:56:45,808 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.ArithmeticException: / by zero]
2020-09-10 20:56:46,441 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:04:00,876 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:04:00,924 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:04:00,946 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:04:00,950 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:04:00,950 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:00,950 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource refreshArgs [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:00,950 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:00,950 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:00,950 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:04:00,950 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:00,950 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:00,951 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:00,952 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:04:00,953 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:04:00,953 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:04:02,547 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:04:02,590 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:04:02,600 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:04:02,602 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:04:02,605 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:04:02,625 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:04:02,625 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.boot.SpringApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:04:02,640 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.boot.SpringApplication] StartupInfoLogger.java:61 - Started application in 3.287 seconds (JVM running for 529.434)
2020-09-10 21:04:02,763 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.caching.RefreshScopeRefreshedEventListener] RefreshScopeRefreshedEventListener.java:35 - Refreshing cached encryptable property sources
2020-09-10 21:04:02,764 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.caching.RefreshScopeRefreshedEventListener] RefreshScopeRefreshedEventListener.java:35 - Refreshing cached encryptable property sources
2020-09-10 21:04:02,764 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.cloud.endpoint.event.RefreshEventListener] RefreshEventListener.java:73 - Refresh keys changed: [spring.datasource.druid.url, spring.datasource.dynamic.druid.max-wait, spring.datasource.dynamic.datasource.master.username, spring.datasource.dynamic.druid.max-active, spring.datasource.dynamic.datasource.master.password, spring.datasource.dynamic.p6spy, spring.datasource.dynamic.primary, spring.datasource.druid.password, spring.datasource.dynamic.druid.validation-query, spring.datasource.druid.username, spring.datasource.druid.driver-class-name, spring.datasource.dynamic.druid.min-idle, spring.datasource.dynamic.druid.initial-size, spring.datasource.dynamic.strict, spring.datasource.dynamic.seata, spring.datasource.druid.stat-view-servlet.enabled, spring.datasource.dynamic.seata-mode, spring.datasource.type, spring.datasource.dynamic.datasource.master.driver-class-name, spring.datasource.dynamic.datasource.master.url]
2020-09-10 21:04:07,922 [Thread-646] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:04:07,927 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:04:07,934 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:04:07,936 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:04:07,938 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:04:07,939 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:04:07,940 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:04:07,941 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:04:07,947 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:04:07,954 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x5277d81f, L:/192.168.72.1:52951 ! R:/192.168.72.1:8091]
2020-09-10 21:04:07,954 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x5277d81f, L:/192.168.72.1:52951 ! R:/192.168.72.1:8091]
2020-09-10 21:04:07,954 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x5277d81f, L:/192.168.72.1:52951 ! R:/192.168.72.1:8091]
2020-09-10 21:04:07,954 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x5277d81f, L:/192.168.72.1:52951 ! R:/192.168.72.1:8091]
2020-09-10 21:04:07,955 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5277d81f, L:/192.168.72.1:52951 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:04:07,955 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5277d81f, L:/192.168.72.1:52951 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:04:17,314 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:04:17,315 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:04:17,315 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:04:17,750 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:04:17,854 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:04:17,857 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:17,857 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:17,857 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:17,859 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:04:17,859 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:17,859 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:17,859 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:17,922 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:04:17,926 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:04:17,928 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:04:19,699 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:04:19,701 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:04:19,706 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:04:19,744 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:04:19,745 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:04:22,181 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:04:22,520 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:04:22,647 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:04:22,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:04:22,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:04:22,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:04:22,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:04:22,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:04:22,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:04:22,660 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:04:22,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:22,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:22,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:04:22,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:22,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:22,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:22,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:04:22,661 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:04:22,720 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:04:22,724 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$21470363] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:22,728 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:22,764 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:22,769 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:22,770 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:04:22,770 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:04:22,771 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:22,772 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:04:22,818 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:04:22,825 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:22,835 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,018 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:04:23,139 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:04:23,139 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:04:23,152 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:04:23,152 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:04:23,160 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:04:23,160 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:04:23,160 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:04:23,458 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,463 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c11b75d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,471 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,484 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,520 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4ca00159' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,532 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,542 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,547 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,660 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:23,780 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:04:24,123 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:04:24,161 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:04:24,161 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4362 ms
2020-09-10 21:04:24,374 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:04:24,374 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:04:24,874 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:04:25,629 [restartedMain] INFO  [c.a.d.s.b.a.DruidDataSourceAutoConfigure] DruidDataSourceAutoConfigure.java:56 - Init DruidDataSource
2020-09-10 21:04:25,726 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderController' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\controller\PayTradeOrderController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'payTradeOrderMapper' defined in file [E:\code\whaleX\whale-service\whale-pay-order\target\classes\com\whalex\pay\order\mapper\PayTradeOrderMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Invocation of init method failed; nested exception is org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
2020-09-10 21:04:25,744 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 21:04:25,748 [restartedMain] ERROR [o.s.b.diagnostics.LoggingFailureAnalysisReporter] LoggingFailureAnalysisReporter.java:40 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2020-09-10 21:05:21,800 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:05:21,801 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:05:21,801 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:05:22,267 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:05:22,412 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:05:22,415 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:22,415 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:22,416 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:22,417 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:05:22,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:22,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:22,418 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:22,501 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:05:22,507 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:05:22,509 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:05:24,603 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:05:24,605 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:05:24,611 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:05:24,657 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:05:24,658 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:05:27,104 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:05:27,310 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:05:27,397 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:05:27,407 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:27,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:05:27,409 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:27,409 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:27,409 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:27,409 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:05:27,409 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:05:27,459 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:05:27,463 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$cccb3699] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:27,466 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:27,500 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:27,504 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:27,505 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:05:27,505 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:05:27,506 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:27,507 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:05:27,555 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:05:27,562 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:27,572 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:27,746 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:05:27,926 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:05:27,927 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:05:27,946 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:05:27,947 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:05:27,959 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:05:27,959 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:05:27,959 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:05:28,438 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@14f48f8e' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,456 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,501 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,511 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6c9fa90e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,520 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,533 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,534 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,537 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,656 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:28,809 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:05:29,232 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:05:29,276 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:05:29,276 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4536 ms
2020-09-10 21:05:29,736 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:05:29,736 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:05:30,261 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:05:31,416 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:05:31,849 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:05:32,068 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:05:32,068 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:05:32,072 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:05:32,906 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xa35e9a7d, L:/192.168.72.1:55964 - R:/192.168.72.1:8091]
2020-09-10 21:05:32,912 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 98 ms, version:1.3.0,role:RMROLE,channel:[id: 0xa35e9a7d, L:/192.168.72.1:55964 - R:/192.168.72.1:8091]
2020-09-10 21:05:32,913 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:05:32,914 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:05:32,914 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:05:34,184 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$1a126526] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:05:34,328 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:05:34,502 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:05:34,611 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:05:34,611 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:05:34,620 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:05:34,621 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:05:34,867 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:05:36,602 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:05:36,610 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:05:37,287 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 457f3770-8bd0-460a-b082-856373cdbb05

2020-09-10 21:05:38,068 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@531a3a63, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c8ee899, org.springframework.security.web.header.HeaderWriterFilter@6c571d6d, org.springframework.security.web.authentication.logout.LogoutFilter@3b915c53, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@7dfed641, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e8b2d80, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3bcd0f98, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@149e467, org.springframework.security.web.session.SessionManagementFilter@4859f544, org.springframework.security.web.access.ExceptionTranslationFilter@70826fce, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@60801de9]
2020-09-10 21:05:38,333 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:05:40,137 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:05:40,202 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:05:40,206 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:05:40,374 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:05:40,385 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:05:40,403 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:05:40,458 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:05:40,572 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:05:40,584 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:05:42,193 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:05:42,207 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 23.2 seconds (JVM running for 28.575)
2020-09-10 21:05:42,963 [RMI TCP Connection(3)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:05:42,963 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:05:42,976 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 12 ms
2020-09-10 21:05:53,903 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@f9fe599
2020-09-10 21:05:53,909 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:05:53,911 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:05:53,919 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x50b4b2be, L:/192.168.72.1:56129 - R:/192.168.72.1:8091]
2020-09-10 21:05:53,919 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 5 ms, version:1.3.0,role:TMROLE,channel:[id: 0x50b4b2be, L:/192.168.72.1:56129 - R:/192.168.72.1:8091]
2020-09-10 21:05:53,930 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47428996371058688]
2020-09-10 21:05:54,047 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:05:55,049 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:05:55,351 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:05:55,763 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:05:55,795 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:05:55,808 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:05:55,831 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:05:55,834 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[192.168.72.1:10010],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.72.1:10010;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@9686c75
2020-09-10 21:05:56,815 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:05:57,752 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47428996371058688] rollback status: Rollbacked
2020-09-10 21:05:57,758 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 / by zero
2020-09-10 21:05:57,806 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.ArithmeticException: / by zero]
2020-09-10 21:06:53,725 [Thread-3] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:06:53,736 [Thread-3] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:06:53,740 [Thread-3] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:06:53,742 [Thread-3] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:06:53,745 [Thread-3] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:06:53,746 [Thread-3] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:06:53,747 [Thread-3] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:06:53,751 [Thread-3] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:06:53,760 [Thread-3] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:06:53,760 [Thread-3] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:06:53,768 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x50b4b2be, L:/192.168.72.1:56129 ! R:/192.168.72.1:8091]
2020-09-10 21:06:53,769 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x50b4b2be, L:/192.168.72.1:56129 ! R:/192.168.72.1:8091]
2020-09-10 21:06:53,769 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x50b4b2be, L:/192.168.72.1:56129 ! R:/192.168.72.1:8091]
2020-09-10 21:06:53,769 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x50b4b2be, L:/192.168.72.1:56129 ! R:/192.168.72.1:8091]
2020-09-10 21:06:53,769 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x50b4b2be, L:/192.168.72.1:56129 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:06:53,769 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x50b4b2be, L:/192.168.72.1:56129 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:06:55,890 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:06:55,894 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:06:55,894 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:55,895 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:55,895 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:55,895 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:06:55,895 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:55,895 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:55,895 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:55,899 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:06:55,900 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:06:55,900 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:06:57,664 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:06:57,666 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:06:57,669 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:06:57,681 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:06:57,682 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:06:58,949 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:06:58,962 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:06:58,969 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:06:58,970 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:58,971 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:58,971 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:58,971 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:06:58,971 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:06:58,982 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:06:58,983 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$cccb3699] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:58,983 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:58,984 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:58,987 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:58,987 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:06:58,988 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:06:58,988 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:58,988 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:06:58,989 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:06:58,989 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:06:58,989 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:06:58,990 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:06:58,990 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:06:59,009 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1c54a22b' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,013 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,033 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,036 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6c9fa90e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,038 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,039 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,040 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,042 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,069 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,100 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:06:59,246 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:06:59,247 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:06:59,247 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1559 ms
2020-09-10 21:06:59,462 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:06:59,564 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:06:59,579 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-2,master} inited
2020-09-10 21:06:59,580 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:189 - will register resourceId:jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:06:59,580 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:06:59,580 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:06:59,581 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:06:59,582 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.rm.AbstractRMHandler] AbstractRMHandler.java:155 - the rm client received response msg [version=1.3.0,extraData=null,identified=true,resultCode=null,msg=null] from tc server.
2020-09-10 21:07:00,100 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:07:00,172 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:07:00,211 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:07:00,211 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:07:00,354 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:07:02,178 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:07:02,185 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:07:02,420 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 8782720a-4e89-4b22-bfda-b2f28fe94913

2020-09-10 21:07:02,486 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28f5ede1, org.springframework.security.web.context.SecurityContextPersistenceFilter@7aaf2fa3, org.springframework.security.web.header.HeaderWriterFilter@3cae89b8, org.springframework.security.web.authentication.logout.LogoutFilter@a9b7d5a, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@127a4a2b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a88cfdc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5223667c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@76035b, org.springframework.security.web.session.SessionManagementFilter@2b0e1788, org.springframework.security.web.access.ExceptionTranslationFilter@7d83b882, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56ae79f8]
2020-09-10 21:07:02,513 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:07:04,235 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:07:04,270 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:07:04,275 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:07:04,321 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:07:04,329 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:07:04,333 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:07:05,977 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:07:05,995 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 11.962 seconds (JVM running for 112.363)
2020-09-10 21:07:06,001 [restartedMain] INFO  [o.s.b.d.a.ConditionEvaluationDeltaLoggingListener] ConditionEvaluationDeltaLoggingListener.java:63 - Condition evaluation unchanged
2020-09-10 21:07:10,773 [XNIO-2 task-1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:07:10,773 [XNIO-2 task-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:07:10,780 [XNIO-2 task-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 6 ms
2020-09-10 21:07:10,812 [XNIO-2 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:07:10,813 [XNIO-2 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:07:10,815 [XNIO-2 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:07:10,874 [XNIO-2 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:07:10,876 [XNIO-2 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:07:10,877 [XNIO-2 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:07:10,878 [XNIO-2 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:07:10,878 [XNIO-2 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[192.168.72.1:10010],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.72.1:10010;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@37d22d1a
2020-09-10 21:07:10,900 [XNIO-2 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 / by zero
2020-09-10 21:07:10,905 [XNIO-2 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.ArithmeticException: / by zero]
2020-09-10 21:07:11,878 [PollingServerListUpdater-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:07:58,990 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:07:58,990 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:07:58,994 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xb11402f4, L:/192.168.72.1:56791 - R:/192.168.72.1:8091]
2020-09-10 21:07:58,994 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 2 ms, version:1.3.0,role:TMROLE,channel:[id: 0xb11402f4, L:/192.168.72.1:56791 - R:/192.168.72.1:8091]
2020-09-10 21:08:07,947 [Thread-646] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:08:07,949 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:08:07,952 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:08:07,953 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:08:07,954 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:08:07,955 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:08:07,956 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:08:07,956 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:08:07,956 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-2} closing ...
2020-09-10 21:08:07,959 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-2} closed
2020-09-10 21:08:07,959 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:08:20,876 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:08:20,878 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:08:20,878 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:08:21,460 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:08:21,617 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:08:21,619 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:21,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:21,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:21,622 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:08:21,622 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:21,622 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:21,622 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:21,718 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:08:21,723 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:08:21,725 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:08:23,681 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:08:23,683 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:08:23,689 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:08:23,735 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:08:23,735 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:08:26,711 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:08:26,912 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:08:27,001 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:08:27,013 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:08:27,013 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:08:27,013 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:08:27,013 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:08:27,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:08:27,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:08:27,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:08:27,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:27,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:27,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:08:27,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:27,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:27,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:27,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:08:27,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:08:27,068 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:08:27,073 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$1f2779d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:27,076 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:27,112 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:27,116 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:27,117 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:08:27,118 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:08:27,118 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:27,119 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:08:27,165 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:08:27,172 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:27,182 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:27,363 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:08:27,531 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:08:27,531 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:08:27,549 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:08:27,550 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:08:27,561 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:08:27,561 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:08:27,561 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:08:27,981 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@12a7638d' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:27,995 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,040 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,047 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$befbec4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,058 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,073 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,073 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,077 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,211 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,365 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:08:28,792 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:08:28,839 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:08:28,839 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 5031 ms
2020-09-10 21:08:29,241 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:08:29,242 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:08:29,833 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:08:30,752 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:08:31,127 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:08:31,298 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:08:31,298 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:08:31,301 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:08:32,014 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xd12a6b67, L:/192.168.72.1:57018 - R:/192.168.72.1:8091]
2020-09-10 21:08:32,020 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 84 ms, version:1.3.0,role:RMROLE,channel:[id: 0xd12a6b67, L:/192.168.72.1:57018 - R:/192.168.72.1:8091]
2020-09-10 21:08:32,021 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:08:32,021 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:08:32,021 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:08:32,982 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$71e04462] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:08:33,096 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:08:33,222 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:08:33,310 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:08:33,310 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:08:33,317 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:08:33,318 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:08:33,552 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:08:35,280 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:08:35,290 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:08:35,823 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: ea035839-8f91-4375-8b0f-59a4faa25a14

2020-09-10 21:08:36,539 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38a3c8af, org.springframework.security.web.context.SecurityContextPersistenceFilter@182f11a3, org.springframework.security.web.header.HeaderWriterFilter@5ac636b8, org.springframework.security.web.authentication.logout.LogoutFilter@2d93776f, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@7597534, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e3c679c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3215baed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@703b9e01, org.springframework.security.web.session.SessionManagementFilter@3ed99f99, org.springframework.security.web.access.ExceptionTranslationFilter@5740f611, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@445e71e6]
2020-09-10 21:08:36,677 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:08:38,267 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:08:38,314 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:08:38,317 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:08:38,458 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:08:38,468 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:08:38,483 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:08:38,525 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:08:38,577 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:08:38,582 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:08:40,076 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:08:40,090 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 22.211 seconds (JVM running for 27.202)
2020-09-10 21:08:40,550 [RMI TCP Connection(3)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:08:40,551 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:08:40,568 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 15 ms
2020-09-10 21:09:27,518 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:09:27,519 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:09:27,525 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x3e0d8585, L:/192.168.72.1:57321 - R:/192.168.72.1:8091]
2020-09-10 21:09:27,525 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 3 ms, version:1.3.0,role:TMROLE,channel:[id: 0x3e0d8585, L:/192.168.72.1:57321 - R:/192.168.72.1:8091]
2020-09-10 21:11:54,290 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@4f35b895
2020-09-10 21:11:54,306 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47430507901751296]
2020-09-10 21:11:54,420 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:11:54,759 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:11:54,935 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:11:55,310 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:11:55,332 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:11:55,340 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:11:55,345 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@2703959b
2020-09-10 21:11:55,569 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47430507901751296] rollback status: Rollbacked
2020-09-10 21:11:55,575 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:11:55,619 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:12:19,352 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47430612969066496]
2020-09-10 21:12:19,354 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:12:19,356 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:12:19,363 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:16:20,055 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:396 - channel [id: 0xd12a6b67, L:/192.168.72.1:57018 - R:/192.168.72.1:8091] read idle.
2020-09-10 21:16:20,056 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xd12a6b67, L:/192.168.72.1:57018 - R:/192.168.72.1:8091]
2020-09-10 21:16:20,057 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd12a6b67, L:/192.168.72.1:57018 - R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:20,059 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,059 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,059 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:20,059 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:16:20,060 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:20,060 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:20,060 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,060 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:16:20,061 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,061 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,061 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,061 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:20,062 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:20,062 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,062 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,062 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]
2020-09-10 21:16:20,062 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:20,063 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xd12a6b67, L:/192.168.72.1:57018 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:23,340 [timeoutChecker_1_1] WARN  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:244 - channel null is not active after long wait, close it.
2020-09-10 21:16:23,340 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:16:27,561 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:16:27,561 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:16:27,561 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:16:27,565 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x23c21d86, L:/192.168.72.1:59212 - R:/192.168.72.1:8091]
2020-09-10 21:16:27,565 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 3 ms, version:1.3.0,role:RMROLE,channel:[id: 0x23c21d86, L:/192.168.72.1:59212 - R:/192.168.72.1:8091]
2020-09-10 21:16:30,068 [XNIO-1 task-1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:209 - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient.sendSyncRequest(AbstractNettyRemotingClient.java:177)
	at io.seata.tm.DefaultTransactionManager.syncCall(DefaultTransactionManager.java:95)
	at io.seata.tm.DefaultTransactionManager.rollback(DefaultTransactionManager.java:72)
	at io.seata.tm.api.DefaultGlobalTransaction.rollback(DefaultGlobalTransaction.java:163)
	at io.seata.tm.api.TransactionalTemplate.rollbackTransaction(TransactionalTemplate.java:165)
	at io.seata.tm.api.TransactionalTemplate.completeTransactionAfterThrowing(TransactionalTemplate.java:139)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:109)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:147)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:122)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$71e04462.updatePayTradeOrderById(<generated>)
	at com.whalex.pay.order.controller.PayTradeOrderController.updatePayTradeOrderById$original$5hwtZUDe(PayTradeOrderController.java:26)
	at com.whalex.pay.order.controller.PayTradeOrderController.updatePayTradeOrderById$original$5hwtZUDe$accessor$PYd06Hir(PayTradeOrderController.java)
	at com.whalex.pay.order.controller.PayTradeOrderController$auxiliary$YismtKGG.call(Unknown Source)
	at org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstMethodsInter.intercept(InstMethodsInter.java:86)
	at com.whalex.pay.order.controller.PayTradeOrderController.updatePayTradeOrderById(PayTradeOrderController.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:523)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:830)
	at org.apache.skywalking.apm.plugin.undertow.v2x.SWRunnable.run(SWRunnable.java:45)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 124 common frames omitted
2020-09-10 21:16:30,069 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:16:30,069 [XNIO-1 task-1] ERROR [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:166 - Failed to report global rollback [192.168.72.1:8091:47430612969066496],Retry Countdown: 5, reason: can not register RM,err:can not connect to services-server.
2020-09-10 21:16:30,069 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:16:40,071 [timeoutChecker_1_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:209 - 0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:182)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientBootstrap.getNewChannel(NettyClientBootstrap.java:177)
	... 15 common frames omitted
2020-09-10 21:16:40,071 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]
2020-09-10 21:16:40,071 [timeoutChecker_1_1] ERROR [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:177 - 0101 can not connect to 192.168.72.1:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractNettyRemotingClient$1.run(AbstractNettyRemotingClient.java:106)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 21:16:40,071 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]
2020-09-10 21:16:40,071 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:16:40,071 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:40,071 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x3e0d8585, L:/192.168.72.1:57321 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:40,072 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:16:40,075 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xc0be761b, L:/192.168.72.1:59280 - R:/192.168.72.1:8091]
2020-09-10 21:16:40,075 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 2 ms, version:1.3.0,role:TMROLE,channel:[id: 0xc0be761b, L:/192.168.72.1:59280 - R:/192.168.72.1:8091]
2020-09-10 21:16:40,077 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47430612969066496] rollback status: Finished
2020-09-10 21:16:40,078 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:16:40,079 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:16:41,595 [Thread-665] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:16:41,600 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:16:41,607 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:16:41,610 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:16:41,612 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:16:41,613 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:16:41,614 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:16:41,615 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:16:41,618 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:16:41,627 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:16:41,627 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:16:41,635 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xc0be761b, L:/192.168.72.1:59280 ! R:/192.168.72.1:8091]
2020-09-10 21:16:41,635 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xc0be761b, L:/192.168.72.1:59280 ! R:/192.168.72.1:8091]
2020-09-10 21:16:41,636 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xc0be761b, L:/192.168.72.1:59280 ! R:/192.168.72.1:8091]
2020-09-10 21:16:41,636 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xc0be761b, L:/192.168.72.1:59280 ! R:/192.168.72.1:8091]
2020-09-10 21:16:41,636 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc0be761b, L:/192.168.72.1:59280 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:41,636 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc0be761b, L:/192.168.72.1:59280 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:41,636 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xc1380d7e, L:0.0.0.0/0.0.0.0:59279 ! R:/192.168.72.1:8091]
2020-09-10 21:16:41,636 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xc1380d7e, L:0.0.0.0/0.0.0.0:59279 ! R:/192.168.72.1:8091]
2020-09-10 21:16:41,636 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xc1380d7e, L:0.0.0.0/0.0.0.0:59279 ! R:/192.168.72.1:8091]
2020-09-10 21:16:41,636 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc1380d7e, L:0.0.0.0/0.0.0.0:59279 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:41,637 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xc1380d7e, L:0.0.0.0/0.0.0.0:59279 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:16:51,962 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:16:51,964 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:16:51,964 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:16:52,613 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:16:52,737 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:16:52,741 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:52,742 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:52,742 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:52,744 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:16:52,744 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:52,744 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:52,744 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:52,824 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:16:52,828 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:16:52,830 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:16:54,749 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:16:54,750 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:16:54,755 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:16:54,793 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:16:54,793 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:16:57,767 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:16:58,079 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:16:58,197 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:16:58,209 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:16:58,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:16:58,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:16:58,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:16:58,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:16:58,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:16:58,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:16:58,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:58,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:58,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:16:58,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:58,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:58,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:58,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:16:58,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:16:58,279 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:16:58,285 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$d1c74873] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:58,289 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:58,335 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:58,341 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:58,342 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:16:58,342 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:16:58,343 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:58,345 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:16:58,401 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:16:58,411 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:58,439 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:58,744 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:16:58,918 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:16:58,918 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:16:58,934 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:16:58,934 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:16:58,944 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:16:58,944 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:16:58,944 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:16:59,338 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@676fa9e4' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,360 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,471 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,482 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$719bbae8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,495 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,517 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,517 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,522 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,719 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:16:59,914 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:17:00,364 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:17:00,411 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:17:00,412 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 5555 ms
2020-09-10 21:17:00,860 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:17:00,860 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:17:01,335 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:17:02,391 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:17:02,771 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:17:02,966 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:17:02,967 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:17:02,970 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:17:04,061 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x43d54c6f, L:/192.168.72.1:59453 - R:/192.168.72.1:8091]
2020-09-10 21:17:04,068 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 113 ms, version:1.3.0,role:RMROLE,channel:[id: 0x43d54c6f, L:/192.168.72.1:59453 - R:/192.168.72.1:8091]
2020-09-10 21:17:04,068 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:17:04,069 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:17:04,069 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:17:05,245 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$7f38472c] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:17:05,380 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:17:05,537 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:17:05,764 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:17:05,764 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:17:05,777 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:17:05,778 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:17:06,134 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:17:08,085 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:17:08,100 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:17:08,805 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: f787ed4a-9d12-431f-988b-03d0fc2954ba

2020-09-10 21:17:09,662 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28bdb712, org.springframework.security.web.context.SecurityContextPersistenceFilter@7209394d, org.springframework.security.web.header.HeaderWriterFilter@18a57904, org.springframework.security.web.authentication.logout.LogoutFilter@1182c764, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@7f672430, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f903f51, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10f884dd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c93779f, org.springframework.security.web.session.SessionManagementFilter@342dd381, org.springframework.security.web.access.ExceptionTranslationFilter@169e0f79, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c937591]
2020-09-10 21:17:09,809 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:17:11,685 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:17:11,749 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:17:11,753 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:17:11,918 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:17:11,929 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:17:11,945 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:17:11,990 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:17:12,052 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:17:12,061 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:17:13,846 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:17:13,860 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 25.174 seconds (JVM running for 30.422)
2020-09-10 21:17:14,378 [RMI TCP Connection(5)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:17:14,379 [RMI TCP Connection(5)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:17:14,399 [RMI TCP Connection(5)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 19 ms
2020-09-10 21:17:41,766 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@7ce41923
2020-09-10 21:17:41,775 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:17:41,776 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:17:41,786 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xb4c690d9, L:/192.168.72.1:59674 - R:/192.168.72.1:8091]
2020-09-10 21:17:41,786 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 6 ms, version:1.3.0,role:TMROLE,channel:[id: 0xb4c690d9, L:/192.168.72.1:59674 - R:/192.168.72.1:8091]
2020-09-10 21:17:41,798 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47431965380448256]
2020-09-10 21:17:41,917 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:17:42,289 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:17:42,479 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:17:45,725 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:17:45,746 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:17:45,755 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:17:45,760 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@4eae3d0c
2020-09-10 21:17:45,878 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47431965380448256] rollback status: Rollbacked
2020-09-10 21:17:45,883 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:17:45,923 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:17:49,589 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47431998083436544]
2020-09-10 21:17:49,590 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:17:49,591 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:17:49,599 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:17:51,151 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47431998083436544] rollback status: Rollbacked
2020-09-10 21:17:51,151 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:17:51,152 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:18:35,126 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47432189054291968]
2020-09-10 21:18:35,130 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:18:35,133 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:18:35,140 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:18:37,035 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47432189054291968] rollback status: Rollbacked
2020-09-10 21:18:37,036 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:18:37,037 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:18:37,055 [Thread-656] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:18:37,061 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:18:37,071 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:18:37,074 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:18:37,076 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:18:37,078 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:18:37,079 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:18:37,080 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:18:37,083 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:18:37,092 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:18:37,092 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:18:37,100 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xb4c690d9, L:/192.168.72.1:59674 ! R:/192.168.72.1:8091]
2020-09-10 21:18:37,101 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xb4c690d9, L:/192.168.72.1:59674 ! R:/192.168.72.1:8091]
2020-09-10 21:18:37,101 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xb4c690d9, L:/192.168.72.1:59674 ! R:/192.168.72.1:8091]
2020-09-10 21:18:37,101 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xb4c690d9, L:/192.168.72.1:59674 ! R:/192.168.72.1:8091]
2020-09-10 21:18:37,101 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb4c690d9, L:/192.168.72.1:59674 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:18:37,101 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb4c690d9, L:/192.168.72.1:59674 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:18:50,010 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:18:50,011 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:18:50,012 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:18:50,437 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:18:50,542 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:18:50,544 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:50,544 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:50,544 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:50,546 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:18:50,546 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:50,546 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:50,546 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:50,612 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:18:50,616 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:18:50,616 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:18:52,391 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:18:52,393 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:18:52,398 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:18:52,435 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:18:52,435 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:18:54,803 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:18:54,999 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:18:55,101 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:18:55,111 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:18:55,111 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:18:55,111 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:18:55,112 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:18:55,112 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:18:55,112 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:18:55,112 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:18:55,112 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:55,112 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:55,112 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:18:55,112 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:55,113 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:55,113 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:55,113 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:18:55,113 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:18:55,170 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:18:55,174 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$c58c44e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,177 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,214 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,218 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,219 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:18:55,220 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:18:55,220 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,221 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:18:55,267 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:18:55,274 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,285 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,462 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:18:55,589 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:18:55,589 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:18:55,603 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:18:55,603 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:18:55,611 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:18:55,611 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:18:55,612 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:18:55,925 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@55d90416' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,936 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,980 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,987 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6560b75b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:55,995 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:56,007 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:56,008 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:56,010 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:56,119 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:56,242 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:18:56,582 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:18:56,619 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:18:56,619 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4120 ms
2020-09-10 21:18:56,961 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:18:56,961 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:18:57,323 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:18:58,105 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:18:58,400 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:18:58,576 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:18:58,576 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:18:58,580 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:18:59,358 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x77994249, L:/192.168.72.1:60065 - R:/192.168.72.1:8091]
2020-09-10 21:18:59,364 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 87 ms, version:1.3.0,role:RMROLE,channel:[id: 0x77994249, L:/192.168.72.1:60065 - R:/192.168.72.1:8091]
2020-09-10 21:18:59,364 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:18:59,365 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:18:59,365 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:19:00,320 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$79d529dd] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:19:00,434 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:19:00,562 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:19:00,650 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:19:00,650 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:19:00,658 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:19:00,658 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:19:00,896 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:19:02,628 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:19:02,636 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:19:03,146 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 627214ce-0ffe-4319-8871-8d7a4463c485

2020-09-10 21:19:03,811 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8461b1f, org.springframework.security.web.context.SecurityContextPersistenceFilter@afaae7c, org.springframework.security.web.header.HeaderWriterFilter@486251e6, org.springframework.security.web.authentication.logout.LogoutFilter@674d309d, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@59263d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e4a2f97, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@471efd24, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f8137ed, org.springframework.security.web.session.SessionManagementFilter@765c8b81, org.springframework.security.web.access.ExceptionTranslationFilter@79de7018, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@436fedad]
2020-09-10 21:19:03,935 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:19:05,618 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:19:05,667 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:19:05,671 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:19:05,809 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:19:05,820 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:19:05,835 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:19:05,876 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:19:05,929 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:19:05,934 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:19:07,421 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:19:07,435 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 20.231 seconds (JVM running for 24.657)
2020-09-10 21:19:08,488 [RMI TCP Connection(3)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:19:08,489 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:19:08,501 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 12 ms
2020-09-10 21:19:52,240 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@2cd13b34
2020-09-10 21:19:52,245 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:19:52,246 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:19:52,252 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xe4518b06, L:/192.168.72.1:60338 - R:/192.168.72.1:8091]
2020-09-10 21:19:52,252 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 4 ms, version:1.3.0,role:TMROLE,channel:[id: 0xe4518b06, L:/192.168.72.1:60338 - R:/192.168.72.1:8091]
2020-09-10 21:19:52,261 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47432512590319616]
2020-09-10 21:19:52,365 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:19:52,732 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:19:52,979 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:19:56,574 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:19:56,595 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:19:56,604 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:19:56,610 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@5aeca6a5
2020-09-10 21:19:56,734 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47432512590319616] rollback status: Rollbacked
2020-09-10 21:19:56,740 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:19:56,781 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:20:24,293 [Thread-651] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:20:24,298 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:20:24,305 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:20:24,307 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:20:24,309 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:20:24,311 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:20:24,311 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:20:24,313 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:20:24,315 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:20:24,323 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:20:24,323 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:20:24,331 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xe4518b06, L:/192.168.72.1:60338 ! R:/192.168.72.1:8091]
2020-09-10 21:20:24,331 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xe4518b06, L:/192.168.72.1:60338 ! R:/192.168.72.1:8091]
2020-09-10 21:20:24,331 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xe4518b06, L:/192.168.72.1:60338 ! R:/192.168.72.1:8091]
2020-09-10 21:20:24,332 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xe4518b06, L:/192.168.72.1:60338 ! R:/192.168.72.1:8091]
2020-09-10 21:20:24,332 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe4518b06, L:/192.168.72.1:60338 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:20:24,332 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xe4518b06, L:/192.168.72.1:60338 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:20:33,839 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:20:33,840 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:20:33,841 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:20:34,266 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:20:34,367 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:20:34,370 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:34,370 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:34,370 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:34,371 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:20:34,372 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:34,372 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:34,372 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:34,437 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:20:34,440 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:20:34,442 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:20:36,231 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:20:36,232 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:20:36,238 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:20:36,273 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:20:36,273 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:20:38,835 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:20:39,098 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:20:39,198 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:20:39,212 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:20:39,212 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:20:39,212 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:20:39,213 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:20:39,213 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:20:39,213 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:20:39,213 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:20:39,213 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:39,214 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:39,214 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:20:39,214 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:39,214 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:39,214 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:39,214 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:20:39,215 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:20:39,274 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:20:39,279 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$22b10e0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:39,282 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:39,317 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:39,322 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:39,323 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:20:39,323 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:20:39,324 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:39,324 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:20:39,369 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:20:39,375 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:39,385 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:39,646 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:20:39,789 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:20:39,789 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:20:39,802 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:20:39,803 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:20:39,811 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:20:39,811 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:20:39,811 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:20:40,119 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@733f53e8' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,134 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,175 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,181 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c2858080] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,189 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,201 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,201 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,204 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,311 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,428 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:20:40,762 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:20:40,800 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:20:40,800 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4469 ms
2020-09-10 21:20:41,145 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:20:41,146 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:20:47,642 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:20:48,428 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:20:48,737 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:20:48,909 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:20:48,909 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:20:48,912 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:20:49,694 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xe8f6e64c, L:/192.168.72.1:60643 - R:/192.168.72.1:8091]
2020-09-10 21:20:49,700 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 88 ms, version:1.3.0,role:RMROLE,channel:[id: 0xe8f6e64c, L:/192.168.72.1:60643 - R:/192.168.72.1:8091]
2020-09-10 21:20:49,700 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:20:49,700 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:20:49,701 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:20:50,695 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$f4a1d4b5] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:20:50,809 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:20:50,933 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:20:51,022 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:20:51,022 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:20:51,030 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:20:51,030 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:20:51,259 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:20:52,970 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:20:52,977 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:20:53,459 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 36c1967f-c626-49c1-b6d1-e2fe5ab06df4

2020-09-10 21:20:54,176 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e7f654a, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a36d984, org.springframework.security.web.header.HeaderWriterFilter@2f061057, org.springframework.security.web.authentication.logout.LogoutFilter@435551a6, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@63e4a8b3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67f3bf77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60906f2e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2762e615, org.springframework.security.web.session.SessionManagementFilter@235bded, org.springframework.security.web.access.ExceptionTranslationFilter@3a4db9f9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31cce275]
2020-09-10 21:20:54,334 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:20:56,107 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:20:56,179 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:20:56,183 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:20:56,363 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:20:56,377 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:20:56,396 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:20:56,446 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:20:56,511 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:20:56,517 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:20:58,041 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:20:58,055 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 26.932 seconds (JVM running for 31.935)
2020-09-10 21:20:58,385 [RMI TCP Connection(3)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:20:58,385 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:20:58,403 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 18 ms
2020-09-10 21:21:39,778 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:21:39,780 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:21:39,786 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xf00a4278, L:/192.168.72.1:60905 - R:/192.168.72.1:8091]
2020-09-10 21:21:39,786 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 4 ms, version:1.3.0,role:TMROLE,channel:[id: 0xf00a4278, L:/192.168.72.1:60905 - R:/192.168.72.1:8091]
2020-09-10 21:22:06,436 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:22:06,483 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:22:06,502 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:22:06,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:22:06,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:06,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource refreshArgs [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:06,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:06,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:06,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:06,506 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:06,507 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:06,507 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:06,508 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:22:06,509 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:22:06,509 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:22:07,867 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:22:07,883 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:22:07,886 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:22:07,887 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:22:07,888 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:22:07,889 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:22:07,891 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:22:07,896 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:22:07,910 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:22:07,910 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:22:07,914 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xf00a4278, L:/192.168.72.1:60905 ! R:/192.168.72.1:8091]
2020-09-10 21:22:07,914 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xf00a4278, L:/192.168.72.1:60905 ! R:/192.168.72.1:8091]
2020-09-10 21:22:07,914 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xf00a4278, L:/192.168.72.1:60905 ! R:/192.168.72.1:8091]
2020-09-10 21:22:07,914 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xf00a4278, L:/192.168.72.1:60905 ! R:/192.168.72.1:8091]
2020-09-10 21:22:07,915 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf00a4278, L:/192.168.72.1:60905 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:22:07,915 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf00a4278, L:/192.168.72.1:60905 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:22:17,592 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:22:17,593 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:22:17,593 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:22:18,036 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:22:18,147 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:22:18,149 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:18,150 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:18,150 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:18,151 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:18,151 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:18,152 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:18,152 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:18,217 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:22:18,221 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:22:18,223 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:22:20,189 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:22:20,190 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:22:20,196 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:22:20,234 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:22:20,234 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:22:22,651 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:22:22,865 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:22:22,966 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:22:22,978 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:22:22,978 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:22:22,978 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:22:22,978 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:22:22,978 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:22:22,978 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:22,979 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:22,979 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:22,979 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:22,979 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:22,979 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:22,979 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:22,980 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:22,980 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:22,980 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:23,036 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:22:23,041 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$1aec17e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,044 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,079 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,084 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,085 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:22:23,085 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:22:23,086 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,087 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:22:23,146 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:22:23,153 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,163 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,330 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:22:23,453 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:22:23,454 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:22:23,467 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:22:23,467 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:22:23,475 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:22:23,475 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:22:23,475 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:22:23,772 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@f7c99c3' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,784 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,822 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,828 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bac08a5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,836 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,848 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,849 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,851 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:23,963 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:24,081 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:24,428 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:22:24,469 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:22:24,469 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4169 ms
2020-09-10 21:22:24,813 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:22:24,813 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:22:25,184 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:22:25,977 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:22:26,275 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:22:26,450 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:22:26,450 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:22:26,453 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:22:27,171 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xda26823a, L:/192.168.72.1:61176 - R:/192.168.72.1:8091]
2020-09-10 21:22:27,176 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 86 ms, version:1.3.0,role:RMROLE,channel:[id: 0xda26823a, L:/192.168.72.1:61176 - R:/192.168.72.1:8091]
2020-09-10 21:22:27,176 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:22:27,176 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:22:27,176 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:22:28,144 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$21e8e641] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:22:28,259 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:22:28,392 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:22:28,491 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:22:28,492 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:22:28,501 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:22:28,501 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:22:28,747 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:22:30,513 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:22:30,523 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:22:30,996 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: bc7223af-8be4-475c-8bf4-2ab4c0e506bf

2020-09-10 21:22:31,680 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14327dfa, org.springframework.security.web.context.SecurityContextPersistenceFilter@3017e643, org.springframework.security.web.header.HeaderWriterFilter@56f999fa, org.springframework.security.web.authentication.logout.LogoutFilter@7455b705, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@4158ecab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72d7d3f3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ee14552, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39648b97, org.springframework.security.web.session.SessionManagementFilter@3e864ade, org.springframework.security.web.access.ExceptionTranslationFilter@3021c95e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@fedbcb6]
2020-09-10 21:22:31,811 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:22:33,422 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:22:33,472 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:22:33,475 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:22:33,620 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:22:33,630 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:22:33,646 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:22:33,689 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:22:33,742 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:22:33,748 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:22:35,246 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:22:35,260 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 20.675 seconds (JVM running for 25.529)
2020-09-10 21:22:35,580 [RMI TCP Connection(4)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:22:35,580 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:22:35,593 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:22:40,011 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:22:40,025 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:22:40,027 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:22:40,029 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:22:40,030 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:22:40,031 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:22:40,032 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:22:40,037 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:22:40,057 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:22:40,057 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:22:52,023 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:22:52,024 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:22:52,025 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:22:52,452 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:22:52,556 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:22:52,558 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:52,558 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:52,558 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:52,560 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:52,560 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:52,560 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:52,560 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:52,624 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:22:52,628 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:22:52,630 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:22:54,416 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:22:54,418 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:22:54,423 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:22:54,460 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:22:54,460 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:22:56,865 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:22:57,095 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:22:57,237 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:22:57,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:22:57,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:22:57,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:22:57,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:22:57,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:22:57,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:57,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:57,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:57,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:57,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:57,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:57,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:57,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:57,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:22:57,251 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:22:57,307 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:22:57,312 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$3f2723ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:57,315 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:57,354 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:57,359 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:57,360 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:22:57,360 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:22:57,361 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:57,362 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:22:57,410 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:22:57,418 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:57,429 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:57,612 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:22:57,735 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:22:57,735 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:22:57,749 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:22:57,749 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:22:57,758 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:22:57,758 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:22:57,758 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:22:58,083 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@192f091d' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,097 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,136 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,142 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$defb9662] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,149 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,163 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,163 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,166 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,278 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,408 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:22:58,744 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:22:58,781 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:22:58,781 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4259 ms
2020-09-10 21:22:59,138 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:22:59,139 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:23:02,995 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:23:03,792 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:23:04,090 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:23:04,259 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:23:04,259 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:23:04,262 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:23:04,981 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xb68d1c12, L:/192.168.72.1:61439 - R:/192.168.72.1:8091]
2020-09-10 21:23:04,987 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 84 ms, version:1.3.0,role:RMROLE,channel:[id: 0xb68d1c12, L:/192.168.72.1:61439 - R:/192.168.72.1:8091]
2020-09-10 21:23:04,988 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:23:04,988 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:23:04,988 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:23:05,979 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$b8bc900a] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:23:06,110 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:23:06,259 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:23:06,370 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:23:06,370 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:23:06,379 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:23:06,379 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:23:06,631 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:23:08,480 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:23:08,490 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:23:08,955 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 47ed3743-0e37-450a-93a1-422a87ca1f48

2020-09-10 21:23:09,623 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15d1b4b1, org.springframework.security.web.context.SecurityContextPersistenceFilter@76135f00, org.springframework.security.web.header.HeaderWriterFilter@3f6b7cb7, org.springframework.security.web.authentication.logout.LogoutFilter@4c476513, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@52c7fccc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b010f1f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@676355ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66c46c3c, org.springframework.security.web.session.SessionManagementFilter@45fb2b12, org.springframework.security.web.access.ExceptionTranslationFilter@2b577ad7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28dc9d29]
2020-09-10 21:23:09,748 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:23:11,330 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:23:11,378 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:23:11,381 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:23:11,530 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:23:11,542 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:23:11,557 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:23:11,600 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:23:11,651 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:23:11,656 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:23:13,346 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:23:13,361 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 24.108 seconds (JVM running for 29.393)
2020-09-10 21:23:14,134 [RMI TCP Connection(3)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:23:14,134 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:23:14,149 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 15 ms
2020-09-10 21:23:26,618 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@728064bd
2020-09-10 21:23:26,624 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:23:26,625 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:23:26,631 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xfbe22a3d, L:/192.168.72.1:61586 - R:/192.168.72.1:8091]
2020-09-10 21:23:26,631 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 3 ms, version:1.3.0,role:TMROLE,channel:[id: 0xfbe22a3d, L:/192.168.72.1:61586 - R:/192.168.72.1:8091]
2020-09-10 21:23:26,641 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47433411761016832]
2020-09-10 21:23:26,742 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:23:27,162 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:23:27,404 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:23:29,534 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:23:29,559 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:23:29,569 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:23:29,574 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@2f16e7eb
2020-09-10 21:23:29,718 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47433411761016832] rollback status: Rollbacked
2020-09-10 21:23:29,724 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:23:29,774 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:23:40,995 [Thread-642] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:23:40,999 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:23:41,005 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:23:41,008 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:23:41,009 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:23:41,010 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:23:41,011 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:23:41,013 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:23:41,015 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:23:41,023 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:23:41,023 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:23:41,031 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xfbe22a3d, L:/192.168.72.1:61586 ! R:/192.168.72.1:8091]
2020-09-10 21:23:41,031 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xfbe22a3d, L:/192.168.72.1:61586 ! R:/192.168.72.1:8091]
2020-09-10 21:23:41,031 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xfbe22a3d, L:/192.168.72.1:61586 ! R:/192.168.72.1:8091]
2020-09-10 21:23:41,031 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xfbe22a3d, L:/192.168.72.1:61586 ! R:/192.168.72.1:8091]
2020-09-10 21:23:41,032 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xfbe22a3d, L:/192.168.72.1:61586 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:23:41,032 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xfbe22a3d, L:/192.168.72.1:61586 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:23:55,067 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:23:55,069 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:23:55,069 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:23:55,604 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:23:55,720 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:23:55,723 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:23:55,723 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:23:55,723 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:23:55,725 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:23:55,725 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:23:55,725 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:23:55,725 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:23:55,795 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:23:55,800 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:23:55,802 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:23:58,101 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:23:58,103 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:23:58,111 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:23:58,164 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:23:58,165 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:24:00,448 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'feignSentinelBuilder' defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=prototype; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.whalex.common.sentinel.configuration.SentinelAutoConfiguration; factoryMethodName=feignSentinelBuilder; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class]] for bean 'feignSentinelBuilder': There is already [Root bean: class [null]; scope=prototype; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration; factoryMethodName=feignSentinelBuilder; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/cloud/seata/feign/SeataFeignClientAutoConfiguration.class]] bound.
2020-09-10 21:24:00,458 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 21:24:00,476 [restartedMain] ERROR [o.s.b.diagnostics.LoggingFailureAnalysisReporter] LoggingFailureAnalysisReporter.java:40 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'feignSentinelBuilder', defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [com/alibaba/cloud/seata/feign/SeataFeignClientAutoConfiguration.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2020-09-10 21:25:10,190 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:25:10,192 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:25:10,192 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:25:10,783 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:25:10,916 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:25:10,920 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:10,921 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:10,921 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:10,924 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:25:10,924 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:10,925 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:10,925 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:11,019 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:25:11,026 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:25:11,028 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:25:13,086 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:25:13,088 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:25:13,096 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:25:13,140 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:25:13,140 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:25:16,767 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:25:17,022 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:25:17,147 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:25:17,161 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:25:17,161 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:25:17,161 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:25:17,161 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:25:17,162 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:25:17,162 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:25:17,162 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:25:17,162 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:17,162 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:17,162 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:25:17,162 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:17,163 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:17,163 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:17,163 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:25:17,163 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:25:17,229 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:25:17,234 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$28f104e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:17,237 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:17,276 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:17,281 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:17,282 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:25:17,282 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:25:17,283 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:17,284 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:25:17,334 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:25:17,341 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:17,352 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:17,627 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:25:17,863 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:25:17,864 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:25:17,881 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:25:17,882 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:25:17,892 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:25:17,893 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:25:17,893 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:25:18,325 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5a53500a' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,345 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,406 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,414 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c8c5775a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,428 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,446 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,447 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,450 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,605 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:18,737 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:25:19,169 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:25:19,218 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:25:19,219 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 6004 ms
2020-09-10 21:25:19,627 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:25:19,628 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:25:20,086 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:25:21,204 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:25:21,578 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:25:21,779 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:25:21,779 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:25:21,783 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:25:22,714 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xd607f643, L:/192.168.72.1:62414 - R:/192.168.72.1:8091]
2020-09-10 21:25:22,722 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 167 ms, version:1.3.0,role:RMROLE,channel:[id: 0xd607f643, L:/192.168.72.1:62414 - R:/192.168.72.1:8091]
2020-09-10 21:25:22,723 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:25:22,723 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:25:22,724 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:25:23,896 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$df6966f3] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:25:24,073 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:25:24,266 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:25:24,368 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:25:24,368 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:25:24,376 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:25:24,376 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:25:24,618 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:25:26,345 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:25:26,353 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:25:26,876 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: e6f28cda-1942-42ce-8b1d-781defd0dacc

2020-09-10 21:25:27,586 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@49ff26ee, org.springframework.security.web.context.SecurityContextPersistenceFilter@6d6aaf43, org.springframework.security.web.header.HeaderWriterFilter@ff35e06, org.springframework.security.web.authentication.logout.LogoutFilter@4e2573b7, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@76616466, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c88b114, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@568cb766, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19efbd44, org.springframework.security.web.session.SessionManagementFilter@4f5c91f7, org.springframework.security.web.access.ExceptionTranslationFilter@3dd9c2d8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f433603]
2020-09-10 21:25:27,727 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:25:29,436 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:25:29,488 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:25:29,491 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:25:29,641 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:25:29,651 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:25:29,666 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:25:29,710 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:25:29,766 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:25:29,771 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:25:31,419 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:25:31,433 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 25.208 seconds (JVM running for 31.531)
2020-09-10 21:25:31,799 [RMI TCP Connection(6)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:25:31,800 [RMI TCP Connection(6)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:25:31,814 [RMI TCP Connection(6)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 14 ms
2020-09-10 21:26:11,742 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:26:11,755 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:26:11,757 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:26:11,759 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:26:11,761 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:26:11,761 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:26:11,763 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:26:11,768 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:26:11,783 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:26:11,783 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:26:22,385 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:26:22,386 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:26:22,387 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:26:22,814 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:26:22,915 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:26:22,917 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:22,917 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:22,917 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:22,919 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:26:22,919 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:22,919 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:22,919 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:22,982 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:26:22,986 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:26:22,988 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:26:24,750 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:26:24,751 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:26:24,757 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:26:24,794 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:26:24,794 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:26:27,174 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:26:27,403 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:26:27,553 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:26:27,565 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:26:27,565 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:26:27,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:26:27,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:26:27,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:26:27,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:26:27,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:26:27,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:27,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:27,566 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:26:27,567 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:27,567 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:27,567 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:27,567 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:26:27,567 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:26:27,679 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:26:27,687 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$7d4267a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:27,695 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:27,786 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:27,794 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:27,797 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:26:27,797 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:26:27,799 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:27,801 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:26:27,867 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:26:27,877 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:27,894 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,135 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:26:28,302 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:26:28,302 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:26:28,317 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:26:28,318 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:26:28,326 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:26:28,327 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:26:28,327 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:26:28,673 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@35a58c05' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,688 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,739 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,746 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1d16da16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,757 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,773 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,773 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,777 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:28,920 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:29,068 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:26:29,513 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:26:29,588 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:26:29,588 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4731 ms
2020-09-10 21:26:30,090 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:26:30,090 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:26:30,554 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:26:31,628 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:26:32,080 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:26:32,284 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:26:32,285 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:26:32,288 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:26:33,125 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xa1998a6c, L:/192.168.72.1:62814 - R:/192.168.72.1:8091]
2020-09-10 21:26:33,136 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 105 ms, version:1.3.0,role:RMROLE,channel:[id: 0xa1998a6c, L:/192.168.72.1:62814 - R:/192.168.72.1:8091]
2020-09-10 21:26:33,137 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:26:33,137 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:26:33,137 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:26:34,402 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$97168270] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:26:34,557 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:26:34,741 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:26:34,863 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:26:34,863 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:26:34,873 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:26:34,874 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:26:35,179 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:26:37,090 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:26:37,098 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:26:37,768 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: c3d9e265-0468-4afd-8263-09f04c21fea3

2020-09-10 21:26:38,486 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d3c0edc, org.springframework.security.web.context.SecurityContextPersistenceFilter@797dedaa, org.springframework.security.web.header.HeaderWriterFilter@796da421, org.springframework.security.web.authentication.logout.LogoutFilter@79d7953, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@33f2c4b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53291aa2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69f6bc9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@303dc4f3, org.springframework.security.web.session.SessionManagementFilter@5fcb4925, org.springframework.security.web.access.ExceptionTranslationFilter@2708d719, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3daca666]
2020-09-10 21:26:38,618 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:26:40,201 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:26:40,254 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:26:40,259 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:26:40,410 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:26:40,421 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:26:40,436 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:26:40,478 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:26:40,532 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:26:40,537 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:26:42,024 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:26:42,038 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 22.753 seconds (JVM running for 28.353)
2020-09-10 21:26:42,576 [RMI TCP Connection(4)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:26:42,577 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:26:42,593 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 16 ms
2020-09-10 21:27:28,291 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:27:28,292 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:27:28,298 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x70444559, L:/192.168.72.1:63079 - R:/192.168.72.1:8091]
2020-09-10 21:27:28,298 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 3 ms, version:1.3.0,role:TMROLE,channel:[id: 0x70444559, L:/192.168.72.1:63079 - R:/192.168.72.1:8091]
2020-09-10 21:28:29,531 [Thread-3] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:28:29,554 [Thread-3] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:28:29,557 [Thread-3] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:28:29,560 [Thread-3] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:28:29,562 [Thread-3] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:28:29,563 [Thread-3] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:28:29,565 [Thread-3] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:28:29,572 [Thread-3] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:28:29,598 [Thread-3] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:28:29,599 [Thread-3] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:28:29,606 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x70444559, L:/192.168.72.1:63079 ! R:/192.168.72.1:8091]
2020-09-10 21:28:29,606 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x70444559, L:/192.168.72.1:63079 ! R:/192.168.72.1:8091]
2020-09-10 21:28:29,606 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x70444559, L:/192.168.72.1:63079 ! R:/192.168.72.1:8091]
2020-09-10 21:28:29,607 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x70444559, L:/192.168.72.1:63079 ! R:/192.168.72.1:8091]
2020-09-10 21:28:29,607 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x70444559, L:/192.168.72.1:63079 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:28:29,608 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x70444559, L:/192.168.72.1:63079 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:28:31,634 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:28:31,639 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:28:31,639 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:31,639 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:31,639 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:31,639 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:28:31,639 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:31,639 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:31,640 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:31,643 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:28:31,644 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:28:31,644 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:28:33,378 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:28:33,380 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:28:33,383 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:28:33,393 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:28:33,393 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:28:34,446 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:28:34,487 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:28:34,495 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:34,496 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:34,497 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:34,497 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:28:34,497 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:28:34,509 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:28:34,511 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$7d4267a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,511 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,511 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,515 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,516 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:28:34,516 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:28:34,516 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,517 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:28:34,517 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:28:34,518 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:28:34,518 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:28:34,518 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:28:34,518 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:28:34,538 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3bc21784' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,543 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,568 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,570 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1d16da16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,573 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,574 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,574 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,576 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,605 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,639 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:28:34,803 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:28:34,805 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:28:34,805 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1394 ms
2020-09-10 21:28:35,036 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:28:35,143 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:28:35,161 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-2,master} inited
2020-09-10 21:28:35,162 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:189 - will register resourceId:jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:28:35,162 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:28:35,162 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:28:35,162 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:28:35,163 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.rm.AbstractRMHandler] AbstractRMHandler.java:155 - the rm client received response msg [version=1.3.0,extraData=null,identified=true,resultCode=null,msg=null] from tc server.
2020-09-10 21:28:35,649 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:28:35,699 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:28:35,726 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:28:35,727 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:28:35,842 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:28:37,489 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:28:37,497 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:28:37,703 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: a0af87ca-5b47-499d-b4ab-12be5d2a0892

2020-09-10 21:28:37,773 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13f0e4f7, org.springframework.security.web.context.SecurityContextPersistenceFilter@29f37aca, org.springframework.security.web.header.HeaderWriterFilter@63c24c51, org.springframework.security.web.authentication.logout.LogoutFilter@150a9e77, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@7d5ae3c7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a924114, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1bc328d3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6374b46b, org.springframework.security.web.session.SessionManagementFilter@4d99e1d2, org.springframework.security.web.access.ExceptionTranslationFilter@6cc5fcfc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3e2caa64]
2020-09-10 21:28:37,800 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:28:39,573 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:28:39,604 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:28:39,608 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:28:39,656 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:28:39,666 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:28:39,669 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:28:41,181 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:28:41,191 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 11.208 seconds (JVM running for 147.506)
2020-09-10 21:28:41,194 [restartedMain] INFO  [o.s.b.d.a.ConditionEvaluationDeltaLoggingListener] ConditionEvaluationDeltaLoggingListener.java:63 - Condition evaluation unchanged
2020-09-10 21:29:34,518 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:29:34,518 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:29:34,521 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xd0484526, L:/192.168.72.1:63736 - R:/192.168.72.1:8091]
2020-09-10 21:29:34,522 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 2 ms, version:1.3.0,role:TMROLE,channel:[id: 0xd0484526, L:/192.168.72.1:63736 - R:/192.168.72.1:8091]
2020-09-10 21:30:23,644 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:30:23,649 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:30:23,650 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:30:23,651 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:30:23,652 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:30:23,652 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:30:23,652 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-2} closing ...
2020-09-10 21:30:23,654 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-2} closed
2020-09-10 21:30:23,654 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:30:33,520 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:30:33,521 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:30:33,521 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:30:33,951 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:30:34,053 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:30:34,056 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:34,056 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:34,056 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:34,057 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:30:34,058 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:34,058 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:34,058 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:34,120 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:30:34,124 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:30:34,125 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:30:35,877 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:30:35,878 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:30:35,884 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:30:35,921 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:30:35,921 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:30:38,256 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:30:38,457 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:30:38,608 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:30:38,619 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:30:38,619 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:30:38,619 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:30:38,619 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:30:38,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:30:38,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:30:38,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:30:38,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:38,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:38,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:30:38,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:38,620 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:38,621 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:38,621 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:30:38,621 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:30:38,676 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:30:38,680 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$29e7da2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:38,683 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:38,719 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:38,723 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:38,724 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:30:38,724 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:30:38,725 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:38,726 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:30:38,771 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:30:38,778 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:38,788 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:38,960 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:30:39,092 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:30:39,092 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:30:39,105 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:30:39,105 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:30:39,113 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:30:39,114 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:30:39,114 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:30:39,401 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@245eb5d0' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,412 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,449 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,455 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a272f017] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,462 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,475 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,475 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,478 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,583 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:39,699 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:30:40,034 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:30:40,072 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:30:40,072 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4087 ms
2020-09-10 21:30:40,417 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:30:40,418 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:30:40,770 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:30:41,556 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:30:41,846 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:30:42,014 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:30:42,014 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:30:42,017 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:30:42,767 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x9132992d, L:/192.168.72.1:64053 - R:/192.168.72.1:8091]
2020-09-10 21:30:42,773 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 87 ms, version:1.3.0,role:RMROLE,channel:[id: 0x9132992d, L:/192.168.72.1:64053 - R:/192.168.72.1:8091]
2020-09-10 21:30:42,773 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:30:42,774 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:30:42,774 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:30:43,731 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$edb79bce] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:30:43,843 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:30:43,969 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:30:44,061 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:30:44,061 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:30:44,070 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:30:44,070 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:30:44,304 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:30:46,027 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:30:46,035 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:30:46,546 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 6b5d4272-69f3-4e75-aa55-7e318e280639

2020-09-10 21:30:47,213 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@534fcb67, org.springframework.security.web.context.SecurityContextPersistenceFilter@360ef5c4, org.springframework.security.web.header.HeaderWriterFilter@2e9d48e2, org.springframework.security.web.authentication.logout.LogoutFilter@2dcd3341, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@3c71b523, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@776456c8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79b76288, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b0c5e57, org.springframework.security.web.session.SessionManagementFilter@2d69aca5, org.springframework.security.web.access.ExceptionTranslationFilter@11369ebd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2a55272a]
2020-09-10 21:30:47,339 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:30:48,994 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:30:49,041 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:30:49,044 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:30:49,183 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:30:49,194 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:30:49,211 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:30:49,253 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:30:49,305 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:30:49,310 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:30:50,809 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:30:50,822 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 20.052 seconds (JVM running for 25.191)
2020-09-10 21:30:51,183 [RMI TCP Connection(2)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:30:51,183 [RMI TCP Connection(2)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:30:51,196 [RMI TCP Connection(2)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 12 ms
2020-09-10 21:31:15,534 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:31:15,547 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:31:15,549 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:31:15,550 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:31:15,552 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:31:15,553 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:31:15,554 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:31:15,559 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:31:15,573 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:31:15,573 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:31:25,297 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:31:25,298 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:31:25,299 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:31:25,726 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:31:25,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:31:25,833 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:25,833 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:25,833 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:25,835 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:31:25,835 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:25,835 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:25,835 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:25,897 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:31:25,901 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:31:25,902 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:31:27,667 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:31:27,668 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:31:27,675 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:31:27,719 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:31:27,720 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:31:30,762 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:31:30,969 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:31:31,114 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:31:31,125 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:31:31,125 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:31:31,125 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:31:31,125 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:31:31,125 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:31:31,126 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:31:31,126 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:31:31,126 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:31,126 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:31,126 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:31:31,126 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:31,126 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:31,126 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:31,127 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:31:31,127 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:31:31,180 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:31:31,184 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$d376d7f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,187 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,224 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,228 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,229 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:31:31,229 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:31:31,230 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,231 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:31:31,280 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:31:31,287 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,297 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,466 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:31:31,590 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:31:31,590 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:31:31,603 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:31:31,604 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:31:31,611 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:31:31,611 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:31:31,611 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:31:31,902 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@23ede6d4' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,915 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,955 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,961 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$734b4a68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,969 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,982 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,982 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:31,985 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:32,094 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:32,212 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:31:32,555 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:31:32,593 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:31:32,594 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4800 ms
2020-09-10 21:31:32,954 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:31:32,955 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:31:34,943 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:31:35,800 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:31:36,104 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:31:36,272 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:31:36,272 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:31:36,275 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:31:36,988 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xe34d72ba, L:/192.168.72.1:64374 - R:/192.168.72.1:8091]
2020-09-10 21:31:36,994 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 85 ms, version:1.3.0,role:RMROLE,channel:[id: 0xe34d72ba, L:/192.168.72.1:64374 - R:/192.168.72.1:8091]
2020-09-10 21:31:36,995 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:31:36,995 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:31:36,995 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:31:37,959 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$32edfaf0] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:31:38,079 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:31:38,215 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:31:38,312 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:31:38,313 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:31:38,321 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:31:38,321 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:31:38,576 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:31:40,286 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:31:40,293 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:31:40,780 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 48aa306a-ee4a-436f-92ba-1cc720729fa2

2020-09-10 21:31:41,442 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19913922, org.springframework.security.web.context.SecurityContextPersistenceFilter@689ff18e, org.springframework.security.web.header.HeaderWriterFilter@66d74844, org.springframework.security.web.authentication.logout.LogoutFilter@788508f7, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@1667c80e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77b264fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@350ed723, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@31638479, org.springframework.security.web.session.SessionManagementFilter@29f6f4ee, org.springframework.security.web.access.ExceptionTranslationFilter@39886cf3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5346bed6]
2020-09-10 21:31:41,570 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:31:43,179 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:31:43,227 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:31:43,231 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:31:43,373 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:31:43,384 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:31:43,399 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:31:43,441 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:31:43,495 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:31:43,500 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:31:45,039 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:31:45,053 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 22.908 seconds (JVM running for 27.778)
2020-09-10 21:31:46,132 [RMI TCP Connection(6)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:31:46,132 [RMI TCP Connection(6)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:31:46,144 [RMI TCP Connection(6)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 12 ms
2020-09-10 21:31:49,194 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@3642a957
2020-09-10 21:31:49,201 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:31:49,203 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:31:49,210 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x5e13f5bb, L:/192.168.72.1:64481 - R:/192.168.72.1:8091]
2020-09-10 21:31:49,210 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 5 ms, version:1.3.0,role:TMROLE,channel:[id: 0x5e13f5bb, L:/192.168.72.1:64481 - R:/192.168.72.1:8091]
2020-09-10 21:31:49,221 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47435519734321152]
2020-09-10 21:31:49,363 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:31:49,806 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:31:50,043 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:31:52,305 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:31:52,331 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:31:52,341 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:31:52,347 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@1eabf2ec
2020-09-10 21:31:52,493 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47435519734321152] rollback status: Rollbacked
2020-09-10 21:31:52,499 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:31:52,543 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:32:47,697 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47435765021413376]
2020-09-10 21:32:47,700 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:32:47,703 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:32:47,722 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:32:53,613 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47435765021413376] rollback status: Rollbacked
2020-09-10 21:32:53,614 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:32:53,615 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:33:02,137 [Thread-639] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:33:02,142 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:33:02,148 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:33:02,150 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:33:02,151 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:33:02,153 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:33:02,154 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:33:02,155 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:33:02,158 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:33:02,165 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:33:02,165 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:33:02,173 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x5e13f5bb, L:/192.168.72.1:64481 ! R:/192.168.72.1:8091]
2020-09-10 21:33:02,173 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x5e13f5bb, L:/192.168.72.1:64481 ! R:/192.168.72.1:8091]
2020-09-10 21:33:02,173 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x5e13f5bb, L:/192.168.72.1:64481 ! R:/192.168.72.1:8091]
2020-09-10 21:33:02,173 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x5e13f5bb, L:/192.168.72.1:64481 ! R:/192.168.72.1:8091]
2020-09-10 21:33:02,173 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5e13f5bb, L:/192.168.72.1:64481 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:33:02,174 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x5e13f5bb, L:/192.168.72.1:64481 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:33:11,277 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:33:11,279 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:33:11,279 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:33:11,708 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:33:11,813 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:33:11,815 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:11,815 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:11,815 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:11,817 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:33:11,817 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:11,817 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:11,817 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:11,879 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:33:11,883 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:33:11,884 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:33:13,648 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:33:13,650 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:33:13,655 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:33:13,692 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:33:13,692 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:33:16,068 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:33:16,259 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:33:16,393 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:33:16,403 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:33:16,403 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:33:16,403 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:33:16,403 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:16,404 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:16,405 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:16,405 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:33:16,455 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:33:16,459 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$4c0343ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:16,462 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:16,495 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:16,499 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:16,500 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:33:16,500 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:33:16,501 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:16,501 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:33:16,543 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:33:16,550 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:16,559 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:16,723 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:33:16,839 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:33:16,840 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:33:16,852 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:33:16,853 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:33:16,860 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:33:16,861 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:33:16,861 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:33:17,154 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3097fed4' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,166 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,205 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,211 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ebd7b621] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,219 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,231 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,231 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,234 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,339 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,459 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:33:17,822 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:33:17,859 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:33:17,859 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4104 ms
2020-09-10 21:33:18,235 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:33:18,235 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:33:20,925 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:33:29,259 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:33:29,556 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:33:29,727 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:33:29,728 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:33:29,731 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:33:30,421 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xf608b594, L:/192.168.72.1:64941 - R:/192.168.72.1:8091]
2020-09-10 21:33:30,427 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 85 ms, version:1.3.0,role:RMROLE,channel:[id: 0xf608b594, L:/192.168.72.1:64941 - R:/192.168.72.1:8091]
2020-09-10 21:33:30,428 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:33:30,428 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:33:30,428 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:33:31,434 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$28a8f319] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:33:31,565 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:33:31,704 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:33:31,823 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:33:31,823 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:33:31,830 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:33:31,830 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:33:32,052 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:33:33,765 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:33:33,773 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:33:34,245 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: e5094b32-47c2-4197-b376-0edfb0fd8576

2020-09-10 21:33:34,966 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@590f04bc, org.springframework.security.web.context.SecurityContextPersistenceFilter@554e02ce, org.springframework.security.web.header.HeaderWriterFilter@77928dbc, org.springframework.security.web.authentication.logout.LogoutFilter@503c4f97, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@395ae42f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@263f9bb5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c9b5615, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68001a17, org.springframework.security.web.session.SessionManagementFilter@1494faa7, org.springframework.security.web.access.ExceptionTranslationFilter@554148e4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c2d5630]
2020-09-10 21:33:35,099 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:33:36,695 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:33:36,760 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:33:36,764 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:33:36,940 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:33:36,954 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:33:36,970 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:33:37,013 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:33:37,066 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:33:37,071 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:33:38,591 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:33:38,605 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 30.238 seconds (JVM running for 34.837)
2020-09-10 21:33:38,607 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:33:38,622 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:33:38,623 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:33:38,624 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:33:38,625 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:33:38,626 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:33:38,631 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:33:38,672 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:33:38,672 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:33:49,391 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:33:49,392 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:33:49,392 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:33:49,824 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:33:49,929 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:33:49,931 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:49,931 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:49,932 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:49,933 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:33:49,933 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:49,933 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:49,933 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:33:49,997 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:33:50,000 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:33:50,002 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:33:51,934 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:33:51,936 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:33:51,944 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:33:51,996 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:33:51,996 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:33:54,564 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'feignSentinelBuilder' defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=prototype; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.whalex.common.sentinel.configuration.SentinelAutoConfiguration; factoryMethodName=feignSentinelBuilder; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class]] for bean 'feignSentinelBuilder': There is already [Root bean: class [null]; scope=prototype; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration; factoryMethodName=feignSentinelBuilder; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/cloud/seata/feign/SeataFeignClientAutoConfiguration.class]] bound.
2020-09-10 21:33:54,581 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 21:33:54,610 [restartedMain] ERROR [o.s.b.diagnostics.LoggingFailureAnalysisReporter] LoggingFailureAnalysisReporter.java:40 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'feignSentinelBuilder', defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [com/alibaba/cloud/seata/feign/SeataFeignClientAutoConfiguration.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2020-09-10 21:35:25,789 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:35:25,790 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:35:25,791 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:35:26,242 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:35:26,342 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:35:26,345 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:26,345 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:26,345 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:26,346 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:35:26,346 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:26,346 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:26,347 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:26,409 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:35:26,414 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:35:26,415 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:35:28,285 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:35:28,286 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:35:28,292 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:35:28,329 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:35:28,329 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:35:30,813 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:35:31,029 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:35:31,157 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:35:31,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:35:31,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:35:31,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:35:31,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:35:31,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:35:31,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:35:31,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:35:31,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:31,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:31,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:35:31,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:31,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:31,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:31,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:35:31,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:35:31,222 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:35:31,226 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$63c30c94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,229 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,263 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,268 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,269 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:35:31,269 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:35:31,270 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,270 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:35:31,314 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:35:31,321 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,330 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,497 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:35:31,613 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:35:31,613 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:35:31,626 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:35:31,626 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:35:31,634 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:35:31,634 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:35:31,635 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:35:31,930 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@37550675' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,941 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,979 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,986 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3977f09] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:31,994 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:32,007 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:32,008 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:32,011 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:32,115 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:32,237 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:35:32,586 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:35:32,624 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:35:32,624 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4230 ms
2020-09-10 21:35:33,005 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:35:33,006 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:35:36,303 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:35:38,618 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:35:38,929 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:35:39,097 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:35:39,098 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:35:39,101 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:35:39,795 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xb968fd0d, L:/192.168.72.1:49506 - R:/192.168.72.1:8091]
2020-09-10 21:35:39,801 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 85 ms, version:1.3.0,role:RMROLE,channel:[id: 0xb968fd0d, L:/192.168.72.1:49506 - R:/192.168.72.1:8091]
2020-09-10 21:35:39,801 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:35:39,801 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:35:39,802 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:35:40,748 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$b33b83bc] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:35:40,869 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:35:41,001 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:35:41,095 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:35:41,096 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:35:41,104 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:35:41,104 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:35:41,350 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:35:43,037 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:35:43,044 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:35:43,512 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 1fe4ee10-1e33-41d6-87ac-f9cfcc1c6c12

2020-09-10 21:35:44,168 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ae81cb7, org.springframework.security.web.context.SecurityContextPersistenceFilter@511b82a4, org.springframework.security.web.header.HeaderWriterFilter@61bd0761, org.springframework.security.web.authentication.logout.LogoutFilter@1ee931b, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@642cb889, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@753ce56b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64168cb9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10e667b0, org.springframework.security.web.session.SessionManagementFilter@4eb978a3, org.springframework.security.web.access.ExceptionTranslationFilter@61ad9f8a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5cf3cd04]
2020-09-10 21:35:44,295 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:35:45,882 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:35:45,932 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:35:45,935 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:35:46,078 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:35:46,088 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:35:46,103 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:35:46,146 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:35:46,197 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:35:46,203 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:35:47,694 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:35:47,710 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 24.999 seconds (JVM running for 30.451)
2020-09-10 21:35:48,061 [RMI TCP Connection(4)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:35:48,062 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:35:48,075 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:36:31,603 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:36:31,604 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:36:31,610 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x1003210c, L:/192.168.72.1:49787 - R:/192.168.72.1:8091]
2020-09-10 21:36:31,611 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 4 ms, version:1.3.0,role:TMROLE,channel:[id: 0x1003210c, L:/192.168.72.1:49787 - R:/192.168.72.1:8091]
2020-09-10 21:36:51,531 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@7d4134cf
2020-09-10 21:36:51,545 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47436787777277952]
2020-09-10 21:36:51,652 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:36:52,117 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:36:52,325 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:37:02,455 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:37:02,476 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:37:02,485 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:37:02,490 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@31631ae8
2020-09-10 21:37:02,601 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47436787777277952] rollback status: Rollbacked
2020-09-10 21:37:02,606 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:37:02,645 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:37:04,794 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:396 - channel [id: 0xb968fd0d, L:/192.168.72.1:49506 - R:/192.168.72.1:8091] read idle.
2020-09-10 21:37:04,794 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xb968fd0d, L:/192.168.72.1:49506 - R:/192.168.72.1:8091]
2020-09-10 21:37:04,794 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb968fd0d, L:/192.168.72.1:49506 - R:/192.168.72.1:8091]) will closed
2020-09-10 21:37:04,795 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:37:04,795 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]
2020-09-10 21:37:04,795 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]
2020-09-10 21:37:04,795 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]
2020-09-10 21:37:04,796 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:37:04,796 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:37:04,796 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]
2020-09-10 21:37:04,796 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]
2020-09-10 21:37:04,796 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]
2020-09-10 21:37:04,796 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:37:04,796 [NettyClientSelector_RMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb968fd0d, L:/192.168.72.1:49506 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:37:11,636 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:37:11,636 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:37:11,636 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:37:11,639 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x9ea404e0, L:/192.168.72.1:50040 - R:/192.168.72.1:8091]
2020-09-10 21:37:11,639 [timeoutChecker_2_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 2 ms, version:1.3.0,role:RMROLE,channel:[id: 0x9ea404e0, L:/192.168.72.1:50040 - R:/192.168.72.1:8091]
2020-09-10 21:37:25,278 [Thread-654] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:37:25,282 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:37:25,288 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:37:25,290 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:37:25,292 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:37:25,293 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:37:25,294 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:37:25,295 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:37:25,298 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:37:25,305 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:37:25,306 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:37:25,313 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x1003210c, L:/192.168.72.1:49787 ! R:/192.168.72.1:8091]
2020-09-10 21:37:25,313 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x1003210c, L:/192.168.72.1:49787 ! R:/192.168.72.1:8091]
2020-09-10 21:37:25,313 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x1003210c, L:/192.168.72.1:49787 ! R:/192.168.72.1:8091]
2020-09-10 21:37:25,314 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x1003210c, L:/192.168.72.1:49787 ! R:/192.168.72.1:8091]
2020-09-10 21:37:25,314 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1003210c, L:/192.168.72.1:49787 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:37:25,314 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x1003210c, L:/192.168.72.1:49787 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:37:36,606 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:37:36,607 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:37:36,607 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:37:37,037 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:37:37,141 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:37:37,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:37,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:37,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:37,145 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:37:37,146 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:37,146 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:37,146 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:37,209 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:37:37,213 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:37:37,215 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:37:39,075 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:37:39,077 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:37:39,087 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:37:39,151 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:37:39,152 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:37:41,591 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:37:41,819 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:37:41,980 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:37:41,991 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:37:41,991 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:37:41,991 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:37:41,992 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:37:41,992 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:37:41,992 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:37:41,992 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:37:41,992 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:41,992 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:41,992 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:37:41,993 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:41,993 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:41,993 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:41,993 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:37:41,993 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:37:42,052 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:37:42,057 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$2afc4a8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,060 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,099 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,103 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,104 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:37:42,104 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:37:42,105 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,106 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:37:42,152 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:37:42,159 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,169 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,345 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:37:42,483 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:37:42,483 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:37:42,496 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:37:42,496 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:37:42,504 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:37:42,504 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:37:42,504 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:37:42,795 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@92805d6' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,807 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,845 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,851 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$cad0bd02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,859 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,871 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,872 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,874 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:42,979 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:43,094 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:37:43,426 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:37:43,464 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:37:43,465 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4227 ms
2020-09-10 21:37:43,811 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:37:43,812 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:37:44,201 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:37:49,310 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:37:49,618 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:37:49,786 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:37:49,787 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:37:49,790 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:37:50,496 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xf1df6707, L:/192.168.72.1:50338 - R:/192.168.72.1:8091]
2020-09-10 21:37:50,501 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 87 ms, version:1.3.0,role:RMROLE,channel:[id: 0xf1df6707, L:/192.168.72.1:50338 - R:/192.168.72.1:8091]
2020-09-10 21:37:50,502 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:37:50,502 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:37:50,502 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:37:51,554 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$a9a4eadc] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:37:51,694 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:37:51,858 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:37:51,963 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:37:51,963 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:37:51,973 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:37:51,973 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:37:52,250 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:37:54,184 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:37:54,192 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:37:54,710 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: e062d5e0-4374-4efe-a906-1bc46d0a0eda

2020-09-10 21:37:55,370 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@736b2d3e, org.springframework.security.web.context.SecurityContextPersistenceFilter@45f98899, org.springframework.security.web.header.HeaderWriterFilter@75741e80, org.springframework.security.web.authentication.logout.LogoutFilter@21fc789b, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@43d782fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cbf5fab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@441696f0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b13d9df, org.springframework.security.web.session.SessionManagementFilter@54171ece, org.springframework.security.web.access.ExceptionTranslationFilter@8305b36, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b9dc466]
2020-09-10 21:37:55,496 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:37:57,206 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:37:57,254 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:37:57,258 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:37:57,398 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:37:57,413 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:37:57,429 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:37:57,476 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:37:57,528 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:37:57,534 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:37:59,056 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:37:59,079 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 25.327 seconds (JVM running for 30.995)
2020-09-10 21:37:59,976 [RMI TCP Connection(8)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:37:59,977 [RMI TCP Connection(8)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:37:59,993 [RMI TCP Connection(8)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 16 ms
2020-09-10 21:38:07,137 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@67565e88
2020-09-10 21:38:07,143 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:38:07,145 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:38:07,157 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xa97942b6, L:/192.168.72.1:50464 - R:/192.168.72.1:8091]
2020-09-10 21:38:07,158 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 11 ms, version:1.3.0,role:TMROLE,channel:[id: 0xa97942b6, L:/192.168.72.1:50464 - R:/192.168.72.1:8091]
2020-09-10 21:38:07,169 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47437104963129344]
2020-09-10 21:38:07,268 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:38:07,684 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:38:08,093 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:38:16,657 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:38:16,678 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:38:16,687 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:38:16,692 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@7cf8e54f
2020-09-10 21:38:16,802 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47437104963129344] rollback status: Rollbacked
2020-09-10 21:38:16,807 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:38:16,847 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:38:18,574 [Thread-641] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:38:18,579 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:38:18,586 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:38:18,589 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:38:18,591 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:38:18,592 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:38:18,593 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:38:18,594 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:38:18,598 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:38:18,605 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:38:18,606 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:38:18,613 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xa97942b6, L:/192.168.72.1:50464 ! R:/192.168.72.1:8091]
2020-09-10 21:38:18,613 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xa97942b6, L:/192.168.72.1:50464 ! R:/192.168.72.1:8091]
2020-09-10 21:38:18,613 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xa97942b6, L:/192.168.72.1:50464 ! R:/192.168.72.1:8091]
2020-09-10 21:38:18,613 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xa97942b6, L:/192.168.72.1:50464 ! R:/192.168.72.1:8091]
2020-09-10 21:38:18,613 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa97942b6, L:/192.168.72.1:50464 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:38:18,614 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xa97942b6, L:/192.168.72.1:50464 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:38:28,101 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:38:28,102 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:38:28,102 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:38:28,522 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:38:28,624 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:38:28,626 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:28,626 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:28,626 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:28,628 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:38:28,628 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:28,628 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:28,628 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:28,690 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:38:28,694 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:38:28,695 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:38:30,442 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:38:30,443 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:38:30,449 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:38:30,487 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:38:30,487 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:38:32,825 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:38:33,048 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:38:33,199 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:38:33,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:38:33,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:38:33,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:38:33,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:38:33,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:38:33,210 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:38:33,211 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:38:33,261 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:38:33,265 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$f9d32e30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:33,268 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:33,302 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:33,306 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:33,307 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:38:33,307 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:38:33,308 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:33,309 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:38:33,351 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:38:33,358 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:33,367 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:33,534 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:38:33,653 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:38:33,653 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:38:33,666 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:38:33,666 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:38:33,674 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:38:33,674 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:38:33,674 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:38:33,968 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@345f6ae5' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:33,979 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,016 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,022 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$99a7a0a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,030 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,042 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,043 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,045 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,150 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,267 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:38:34,599 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:38:34,636 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:38:34,636 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4087 ms
2020-09-10 21:38:34,974 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:38:34,974 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:38:35,325 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:38:40,048 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:38:40,363 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:38:40,531 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:38:40,531 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:38:40,534 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:38:41,226 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xf67ef532, L:/192.168.72.1:50667 - R:/192.168.72.1:8091]
2020-09-10 21:38:41,231 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 85 ms, version:1.3.0,role:RMROLE,channel:[id: 0xf67ef532, L:/192.168.72.1:50667 - R:/192.168.72.1:8091]
2020-09-10 21:38:41,232 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:38:41,232 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:38:41,232 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:38:42,208 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$8aaf6907] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:38:42,326 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:38:42,461 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:38:42,558 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:38:42,559 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:38:42,567 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:38:42,567 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:38:42,809 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:38:44,624 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:38:44,632 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:38:45,104 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 8d04e808-51e2-48cc-a46f-de36ca1c6081

2020-09-10 21:38:45,773 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7763951d, org.springframework.security.web.context.SecurityContextPersistenceFilter@30502fe7, org.springframework.security.web.header.HeaderWriterFilter@5d77adbb, org.springframework.security.web.authentication.logout.LogoutFilter@6444afb8, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@293fc0a9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@576af43c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5db27bc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70b147c7, org.springframework.security.web.session.SessionManagementFilter@6e275a8c, org.springframework.security.web.access.ExceptionTranslationFilter@403e95a4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1657e169]
2020-09-10 21:38:45,902 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:38:47,510 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:38:47,557 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:38:47,560 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:38:47,700 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:38:47,711 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:38:47,726 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:38:47,769 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:38:47,822 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:38:47,827 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:38:49,315 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:38:49,328 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 24.047 seconds (JVM running for 28.95)
2020-09-10 21:38:49,510 [RMI TCP Connection(2)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:38:49,511 [RMI TCP Connection(2)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:38:49,524 [RMI TCP Connection(2)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:39:33,643 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:39:33,644 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:39:33,651 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xce01e6ba, L:/192.168.72.1:50940 - R:/192.168.72.1:8091]
2020-09-10 21:39:33,651 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 4 ms, version:1.3.0,role:TMROLE,channel:[id: 0xce01e6ba, L:/192.168.72.1:50940 - R:/192.168.72.1:8091]
2020-09-10 21:41:06,203 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:41:06,216 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:41:06,218 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:41:06,220 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:41:06,221 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:41:06,222 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:41:06,223 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:41:06,244 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:41:06,266 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:41:06,266 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:41:06,270 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xce01e6ba, L:/192.168.72.1:50940 ! R:/192.168.72.1:8091]
2020-09-10 21:41:06,270 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xce01e6ba, L:/192.168.72.1:50940 ! R:/192.168.72.1:8091]
2020-09-10 21:41:06,270 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xce01e6ba, L:/192.168.72.1:50940 ! R:/192.168.72.1:8091]
2020-09-10 21:41:06,270 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xce01e6ba, L:/192.168.72.1:50940 ! R:/192.168.72.1:8091]
2020-09-10 21:41:06,270 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xce01e6ba, L:/192.168.72.1:50940 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:41:06,271 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xce01e6ba, L:/192.168.72.1:50940 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:41:17,004 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:41:17,005 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:41:17,005 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:41:17,440 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:41:17,543 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:41:17,546 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:17,546 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:17,546 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:17,547 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:41:17,547 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:17,548 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:17,548 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:17,610 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:41:17,614 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:41:17,615 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:41:19,480 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:41:19,481 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:41:19,487 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:41:19,523 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:41:19,523 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:41:21,941 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:41:22,146 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:41:22,298 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:41:22,309 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:41:22,310 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:41:22,310 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:41:22,310 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:41:22,310 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:41:22,310 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:41:22,310 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:41:22,310 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:22,311 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:22,311 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:41:22,311 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:22,311 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:22,311 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:22,311 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:41:22,311 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:41:22,367 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:41:22,371 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$c8d64dec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:22,374 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:22,413 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:22,420 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:22,421 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:41:22,421 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:41:22,422 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:22,423 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:41:22,470 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:41:22,478 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:22,488 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:22,663 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:41:22,803 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:41:22,803 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:41:22,817 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:41:22,817 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:41:22,825 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:41:22,825 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:41:22,826 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:41:23,139 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@54292ace' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,151 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,191 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,197 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$68aac061] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,206 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,220 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,220 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,223 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,337 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,458 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:41:23,791 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:41:23,830 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:41:23,830 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4243 ms
2020-09-10 21:41:24,160 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:41:24,160 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:41:24,515 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:41:36,374 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:41:36,669 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:41:36,837 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:41:36,838 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:41:36,841 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:41:37,517 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xf2637531, L:/192.168.72.1:51785 - R:/192.168.72.1:8091]
2020-09-10 21:41:37,523 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 83 ms, version:1.3.0,role:RMROLE,channel:[id: 0xf2637531, L:/192.168.72.1:51785 - R:/192.168.72.1:8091]
2020-09-10 21:41:37,524 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:41:37,524 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:41:37,524 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:41:38,667 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$dec5ec79] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:41:38,794 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:41:38,938 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:41:39,090 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:41:39,091 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:41:39,100 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:41:39,100 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:41:39,373 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:41:41,863 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:41:41,876 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:41:42,509 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 98a14b5a-b586-4055-a22b-41496cf1e98b

2020-09-10 21:41:43,511 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72755e0c, org.springframework.security.web.context.SecurityContextPersistenceFilter@4cba5dc0, org.springframework.security.web.header.HeaderWriterFilter@4ec6db6e, org.springframework.security.web.authentication.logout.LogoutFilter@26feeac8, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@3239e6d7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7625ab87, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3978e1a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35ba256b, org.springframework.security.web.session.SessionManagementFilter@1f8895fa, org.springframework.security.web.access.ExceptionTranslationFilter@4b97874, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@10140341]
2020-09-10 21:41:43,738 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:41:45,527 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:41:45,601 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:41:45,605 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:41:45,875 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:41:45,890 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:41:45,915 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:41:45,971 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:41:46,039 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:41:46,045 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:41:47,553 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:41:47,567 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 33.258 seconds (JVM running for 38.272)
2020-09-10 21:41:47,766 [RMI TCP Connection(4)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:41:47,767 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:41:47,780 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:42:02,373 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@6869408f
2020-09-10 21:42:02,381 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:42:02,383 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:42:02,392 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xb3f47624, L:/192.168.72.1:51949 - R:/192.168.72.1:8091]
2020-09-10 21:42:02,392 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 6 ms, version:1.3.0,role:TMROLE,channel:[id: 0xb3f47624, L:/192.168.72.1:51949 - R:/192.168.72.1:8091]
2020-09-10 21:42:02,404 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47438091606036480]
2020-09-10 21:42:02,566 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:42:02,983 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:42:03,230 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:42:10,997 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:42:11,019 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:42:11,028 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:42:11,033 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@18592c99
2020-09-10 21:42:11,154 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47438091606036480] rollback status: Rollbacked
2020-09-10 21:42:11,160 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:42:11,201 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:42:21,573 [Thread-648] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:42:21,578 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:42:21,584 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:42:21,586 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:42:21,588 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:42:21,590 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:42:21,591 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:42:21,592 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:42:21,594 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:42:21,602 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:42:21,602 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:42:21,610 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xb3f47624, L:/192.168.72.1:51949 ! R:/192.168.72.1:8091]
2020-09-10 21:42:21,610 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xb3f47624, L:/192.168.72.1:51949 ! R:/192.168.72.1:8091]
2020-09-10 21:42:21,611 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xb3f47624, L:/192.168.72.1:51949 ! R:/192.168.72.1:8091]
2020-09-10 21:42:21,611 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xb3f47624, L:/192.168.72.1:51949 ! R:/192.168.72.1:8091]
2020-09-10 21:42:21,611 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb3f47624, L:/192.168.72.1:51949 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:42:21,611 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xb3f47624, L:/192.168.72.1:51949 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:42:31,041 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:42:31,043 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:42:31,043 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:42:31,471 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:42:31,571 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:42:31,573 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:31,573 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:31,573 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:31,575 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:42:31,575 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:31,575 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:31,575 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:31,638 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:42:31,641 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:42:31,643 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:42:33,432 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:42:33,433 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:42:33,439 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:42:33,476 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:42:33,476 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:42:37,011 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:42:37,254 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:42:37,425 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:42:37,439 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:42:37,439 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:42:37,439 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:42:37,439 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:42:37,439 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:42:37,440 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:42:37,440 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:42:37,440 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:37,440 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:37,440 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:42:37,440 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:37,441 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:37,441 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:37,441 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:42:37,441 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:42:37,529 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:42:37,535 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$894e41ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:37,539 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:37,587 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:37,595 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:37,596 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:42:37,597 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:42:37,598 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:37,599 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:42:37,658 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:42:37,666 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:37,679 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:37,888 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:42:38,065 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:42:38,065 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:42:38,084 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:42:38,085 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:42:38,097 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:42:38,097 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:42:38,097 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:42:38,503 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@52679162' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,517 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,560 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,567 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2922b421] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,577 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,593 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,594 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,599 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,738 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:38,887 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:42:39,280 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:42:39,320 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:42:39,320 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 5779 ms
2020-09-10 21:42:39,703 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:42:39,703 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:42:40,212 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:43:12,051 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:43:12,348 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:43:12,517 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:43:12,517 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:43:12,520 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:43:13,213 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xd2512a52, L:/192.168.72.1:52294 - R:/192.168.72.1:8091]
2020-09-10 21:43:13,219 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 84 ms, version:1.3.0,role:RMROLE,channel:[id: 0xd2512a52, L:/192.168.72.1:52294 - R:/192.168.72.1:8091]
2020-09-10 21:43:13,219 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:43:13,220 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:43:13,220 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:43:14,202 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$78405bb5] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:43:14,315 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:43:14,442 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:43:14,534 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:43:14,535 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:43:14,543 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:43:14,543 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:43:14,791 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:43:16,500 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:43:16,508 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:43:17,008 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 470d5fb1-cc11-4ca1-9e7c-1a0a0bf69bbe

2020-09-10 21:43:17,660 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3dc0c1f, org.springframework.security.web.context.SecurityContextPersistenceFilter@5be55ba2, org.springframework.security.web.header.HeaderWriterFilter@d73248b, org.springframework.security.web.authentication.logout.LogoutFilter@184ea901, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@6a3ef534, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33f2a647, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@110286d6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66667aa5, org.springframework.security.web.session.SessionManagementFilter@59eaea49, org.springframework.security.web.access.ExceptionTranslationFilter@2d083ddf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70095125]
2020-09-10 21:43:17,785 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:43:19,428 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:43:19,478 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:43:19,481 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:43:19,629 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:43:19,639 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:43:19,655 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:43:19,699 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:43:19,752 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:43:19,757 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:43:21,335 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:43:21,348 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 52.972 seconds (JVM running for 57.907)
2020-09-10 21:43:22,293 [RMI TCP Connection(9)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:43:22,294 [RMI TCP Connection(9)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:43:22,307 [RMI TCP Connection(9)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:43:32,735 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@2e3e3a66
2020-09-10 21:43:32,748 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:43:32,751 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:43:32,763 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xbdc17dcb, L:/192.168.72.1:52432 - R:/192.168.72.1:8091]
2020-09-10 21:43:32,764 [XNIO-1 task-1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 9 ms, version:1.3.0,role:TMROLE,channel:[id: 0xbdc17dcb, L:/192.168.72.1:52432 - R:/192.168.72.1:8091]
2020-09-10 21:43:32,781 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47438470662066176]
2020-09-10 21:43:32,925 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:43:33,371 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:43:33,572 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:43:41,360 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:43:41,382 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:43:41,390 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:43:41,395 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@d314e3e
2020-09-10 21:43:41,507 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47438470662066176] rollback status: Rollbacked
2020-09-10 21:43:41,512 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:43:41,551 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:45:28,124 [Thread-642] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:45:28,129 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:45:28,135 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:45:28,138 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:45:28,140 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:45:28,142 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:45:28,143 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:45:28,144 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:45:28,147 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:45:28,155 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:45:28,156 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:45:28,167 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xbdc17dcb, L:/192.168.72.1:52432 ! R:/192.168.72.1:8091]
2020-09-10 21:45:28,167 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xbdc17dcb, L:/192.168.72.1:52432 ! R:/192.168.72.1:8091]
2020-09-10 21:45:28,167 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xbdc17dcb, L:/192.168.72.1:52432 ! R:/192.168.72.1:8091]
2020-09-10 21:45:28,167 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xbdc17dcb, L:/192.168.72.1:52432 ! R:/192.168.72.1:8091]
2020-09-10 21:45:28,168 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbdc17dcb, L:/192.168.72.1:52432 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:45:28,168 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xbdc17dcb, L:/192.168.72.1:52432 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:45:40,058 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:45:40,059 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:45:40,060 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:45:40,489 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:45:40,590 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:45:40,593 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:40,593 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:40,593 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:40,594 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:45:40,595 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:40,595 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:40,595 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:40,659 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:45:40,663 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:45:40,664 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:45:42,436 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:45:42,437 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:45:42,443 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:45:42,483 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:45:42,484 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:45:44,878 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:45:45,094 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:45:45,236 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:45:45,248 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:45:45,248 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:45:45,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:45:45,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:45:45,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:45:45,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:45:45,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:45:45,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:45,249 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:45,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:45:45,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:45,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:45,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:45,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:45:45,250 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:45:45,307 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:45:45,311 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$316af4f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:45,315 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:45,362 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:45,366 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:45,367 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:45:45,367 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:45:45,368 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:45,369 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:45:45,412 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:45:45,418 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:45,428 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:45,596 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:45:45,716 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:45:45,716 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:45:45,729 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:45:45,730 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:45:45,738 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:45:45,738 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:45:45,738 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:45:46,033 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@72a6a60e' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,047 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,087 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,093 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d13f6767] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,101 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,114 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,114 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,117 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,233 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,360 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:45:46,719 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:45:46,757 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:45:46,757 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4210 ms
2020-09-10 21:45:47,119 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:45:47,119 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:45:47,479 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:45:57,697 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:45:57,992 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:45:58,164 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:45:58,164 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:45:58,167 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:45:58,951 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xd4be1223, L:/192.168.72.1:53124 - R:/192.168.72.1:8091]
2020-09-10 21:45:58,957 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 84 ms, version:1.3.0,role:RMROLE,channel:[id: 0xd4be1223, L:/192.168.72.1:53124 - R:/192.168.72.1:8091]
2020-09-10 21:45:58,958 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:45:58,958 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:45:58,958 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:45:59,936 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$50582b1f] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:46:00,059 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:46:00,197 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:46:00,296 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:46:00,297 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:46:00,305 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:46:00,305 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:46:00,560 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:46:02,324 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:46:02,331 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:46:02,805 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: abc43fc5-4ea5-4a3d-8818-d79f70ec87d9

2020-09-10 21:46:03,462 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4bbec459, org.springframework.security.web.context.SecurityContextPersistenceFilter@261ff476, org.springframework.security.web.header.HeaderWriterFilter@259f5884, org.springframework.security.web.authentication.logout.LogoutFilter@5390b4bc, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@f8dd3cd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@318c58a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@686e6f9d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@76ab55fb, org.springframework.security.web.session.SessionManagementFilter@531ae94d, org.springframework.security.web.access.ExceptionTranslationFilter@7fc1df3f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@cd615c0]
2020-09-10 21:46:03,595 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:46:05,194 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:46:05,242 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:46:05,246 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:46:05,435 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:46:05,446 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:46:05,463 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:46:05,509 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:46:05,560 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:46:05,566 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:46:07,068 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:46:07,082 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 29.804 seconds (JVM running for 34.633)
2020-09-10 21:46:07,084 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:46:07,098 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:46:07,099 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:46:07,100 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:46:07,101 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:46:07,102 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:46:07,108 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:46:07,128 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:46:07,128 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:46:16,587 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:46:16,589 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:46:16,589 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:46:17,110 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:46:17,225 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:46:17,227 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:17,227 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:17,228 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:17,229 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:17,229 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:17,229 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:17,230 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:17,303 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:46:17,307 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:46:17,309 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:46:19,193 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:46:19,195 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:46:19,200 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:46:19,237 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:46:19,237 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:46:21,612 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:46:21,836 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:46:22,001 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:46:22,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:46:22,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:46:22,014 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:46:22,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:46:22,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:46:22,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:22,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:22,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:22,015 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:22,016 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:22,016 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:22,016 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:22,016 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:22,016 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:22,016 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:22,079 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:46:22,084 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$3805613f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,088 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,131 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,136 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,137 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:46:22,137 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:46:22,138 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,139 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:46:22,202 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:46:22,209 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,219 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,390 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:46:22,507 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:46:22,507 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:46:22,520 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:46:22,521 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:46:22,529 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:46:22,529 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:46:22,529 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:46:22,825 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@75068c05' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,838 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,876 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,882 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d7d9d3b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,891 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,903 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,904 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:22,906 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:23,012 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:23,129 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:23,546 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:46:23,588 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:46:23,588 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4284 ms
2020-09-10 21:46:24,028 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:46:24,028 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:46:24,410 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:46:28,667 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:46:29,024 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:46:29,201 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:46:29,202 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:46:29,205 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:46:30,117 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xec77f33e, L:/192.168.72.1:53447 - R:/192.168.72.1:8091]
2020-09-10 21:46:30,123 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 91 ms, version:1.3.0,role:RMROLE,channel:[id: 0xec77f33e, L:/192.168.72.1:53447 - R:/192.168.72.1:8091]
2020-09-10 21:46:30,124 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:46:30,124 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:46:30,124 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:46:31,084 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$a3b94fd7] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:46:31,200 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:46:31,339 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:46:31,435 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:46:31,435 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:46:31,443 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:46:31,443 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:46:31,684 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:46:33,436 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:46:33,443 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:46:34,016 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: ef06b5cc-68d3-4af9-a488-508affc7113b

2020-09-10 21:46:34,750 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7188ffca, org.springframework.security.web.context.SecurityContextPersistenceFilter@56a9ea10, org.springframework.security.web.header.HeaderWriterFilter@2729bd06, org.springframework.security.web.authentication.logout.LogoutFilter@6c9088a3, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@55bbce8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36f15724, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1eb77131, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@320f39d1, org.springframework.security.web.session.SessionManagementFilter@24a3b7b2, org.springframework.security.web.access.ExceptionTranslationFilter@54b3cc7c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@312bcc5a]
2020-09-10 21:46:34,882 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:46:36,555 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:46:36,605 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:46:36,609 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:46:36,751 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:46:36,763 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:46:36,779 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:46:36,824 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:46:36,876 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:46:36,881 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:46:38,380 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:46:38,394 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 24.72 seconds (JVM running for 29.603)
2020-09-10 21:46:38,396 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:46:38,412 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:46:38,414 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:46:38,415 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:46:38,416 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:46:38,417 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:46:38,422 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:46:38,442 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:46:38,442 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:46:48,423 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:46:48,931 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:46:48,931 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:46:49,359 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:46:49,461 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:46:49,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:49,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:49,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:49,465 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:49,465 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:49,465 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:49,465 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:49,527 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:46:49,531 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:46:49,533 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:46:51,289 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:46:51,291 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:46:51,296 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:46:51,333 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:46:51,333 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:46:53,660 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:46:53,860 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:46:54,090 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:46:54,105 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:46:54,105 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:46:54,105 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:46:54,105 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:46:54,106 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:46:54,106 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:54,106 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:54,106 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:54,106 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:54,106 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:54,106 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:54,107 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:54,107 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:54,107 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:46:54,107 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:46:54,185 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:46:54,190 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$c9e27f64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:54,194 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:54,238 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:54,244 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:54,245 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:46:54,246 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:46:54,247 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:54,248 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:46:54,301 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:46:54,311 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:54,323 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:54,504 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:46:54,667 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:46:54,668 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:46:54,683 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:46:54,684 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:46:54,697 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:46:54,698 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:46:54,698 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:46:55,035 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2a35186c' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,048 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,091 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,098 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$69b6f1d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,108 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,122 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,123 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,126 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,297 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:55,503 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:46:56,114 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:46:56,198 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:46:56,199 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4803 ms
2020-09-10 21:46:56,836 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:46:56,836 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:46:57,333 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:47:01,981 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:47:02,288 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:47:02,455 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:47:02,455 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:47:02,458 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:47:03,162 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xfa997f11, L:/192.168.72.1:53732 - R:/192.168.72.1:8091]
2020-09-10 21:47:03,167 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 85 ms, version:1.3.0,role:RMROLE,channel:[id: 0xfa997f11, L:/192.168.72.1:53732 - R:/192.168.72.1:8091]
2020-09-10 21:47:03,168 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:47:03,168 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:47:03,168 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:47:04,175 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$806bd52b] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:47:04,289 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:47:04,416 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:47:04,509 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:47:04,509 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:47:04,517 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:47:04,517 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:47:04,755 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:47:06,469 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:47:06,477 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:47:06,994 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 51804eee-bded-4151-936b-463614cbf7a8

2020-09-10 21:47:07,744 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51e0ebd6, org.springframework.security.web.context.SecurityContextPersistenceFilter@1eaf7190, org.springframework.security.web.header.HeaderWriterFilter@62ffb923, org.springframework.security.web.authentication.logout.LogoutFilter@55044dfd, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@718c4887, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1468186a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@317a3599, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7306dc8d, org.springframework.security.web.session.SessionManagementFilter@1db1c0d2, org.springframework.security.web.access.ExceptionTranslationFilter@2eec8b96, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1a83e07c]
2020-09-10 21:47:07,936 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:47:09,692 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:47:09,746 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:47:09,749 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:47:09,891 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:47:09,902 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:47:09,916 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:47:09,958 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:47:10,010 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:47:10,016 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:47:11,494 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:47:11,508 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 25.982 seconds (JVM running for 31.177)
2020-09-10 21:47:11,867 [RMI TCP Connection(7)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:47:11,867 [RMI TCP Connection(7)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:47:11,881 [RMI TCP Connection(7)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:47:20,121 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:47:20,133 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:47:20,136 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:47:20,137 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:47:20,139 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:47:20,140 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:47:20,141 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:47:20,146 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:47:20,160 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:47:20,160 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:47:30,675 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:47:30,676 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:47:30,676 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:47:31,160 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:47:31,266 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:47:31,268 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:31,268 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:31,269 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:31,270 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:47:31,270 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:31,270 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:31,270 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:31,334 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:47:31,338 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:47:31,339 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:47:33,161 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:47:33,162 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:47:33,169 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:47:33,206 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:47:33,206 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:47:35,545 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:47:35,759 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:47:35,911 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:47:35,922 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:47:35,922 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:47:35,922 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:47:35,923 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:47:35,923 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:47:35,923 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:47:35,923 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:47:35,923 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:35,923 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:35,923 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:47:35,923 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:35,924 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:35,924 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:35,924 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:47:35,924 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:47:35,981 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:47:35,985 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$b1f8afee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:35,988 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,024 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,029 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,030 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:47:36,030 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:47:36,031 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,032 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:47:36,087 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:47:36,094 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,103 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,270 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:47:36,389 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:47:36,389 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:47:36,402 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:47:36,402 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:47:36,410 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:47:36,410 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:47:36,410 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:47:36,700 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4b7ea03a' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,711 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,749 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,755 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$51cd2263] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,763 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,775 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,776 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,778 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:36,885 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:37,002 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:47:37,335 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:47:37,373 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:47:37,373 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4104 ms
2020-09-10 21:47:37,698 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:47:37,698 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:47:38,050 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:48:13,244 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:48:13,536 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:48:13,703 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:48:13,703 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:48:13,706 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:48:14,389 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x40d27e03, L:/192.168.72.1:54105 - R:/192.168.72.1:8091]
2020-09-10 21:48:14,395 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 84 ms, version:1.3.0,role:RMROLE,channel:[id: 0x40d27e03, L:/192.168.72.1:54105 - R:/192.168.72.1:8091]
2020-09-10 21:48:14,395 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:48:14,395 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:48:14,396 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:48:15,351 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$48bdb971] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:48:15,472 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:48:15,613 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:48:15,711 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:48:15,711 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:48:15,719 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:48:15,719 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:48:15,962 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:48:17,676 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:48:17,683 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:48:18,148 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: c011e6a1-18e1-47bb-8188-477bef1ebe75

2020-09-10 21:48:18,838 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e986760, org.springframework.security.web.context.SecurityContextPersistenceFilter@1aa89675, org.springframework.security.web.header.HeaderWriterFilter@18d0dc62, org.springframework.security.web.authentication.logout.LogoutFilter@2b7f529e, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@2f541e6d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1510a3e8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f2f0aa4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b43ba38, org.springframework.security.web.session.SessionManagementFilter@2b12f094, org.springframework.security.web.access.ExceptionTranslationFilter@266a5360, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@40ede797]
2020-09-10 21:48:18,972 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:48:20,567 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:48:20,615 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:48:20,618 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:48:20,768 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:48:20,779 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:48:20,796 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:48:20,841 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:48:20,894 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:48:20,899 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:48:22,389 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:48:22,403 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 54.812 seconds (JVM running for 59.451)
2020-09-10 21:48:22,944 [RMI TCP Connection(3)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:48:22,945 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:48:22,958 [RMI TCP Connection(3)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:48:24,714 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:48:24,727 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:48:24,729 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:48:24,731 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:48:24,732 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:48:24,733 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:48:24,734 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:48:24,740 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:48:24,753 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:48:24,754 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:48:33,955 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:48:33,956 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:48:33,956 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:48:34,385 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:48:34,486 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:48:34,489 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:34,489 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:34,489 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:34,490 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:48:34,490 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:34,491 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:34,491 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:34,554 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:48:34,558 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:48:34,559 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:48:36,309 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:48:36,310 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:48:36,316 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:48:36,353 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:48:36,354 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:48:38,695 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:48:38,902 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:48:39,069 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:48:39,080 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:48:39,080 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:48:39,081 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:48:39,081 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:48:39,081 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:48:39,081 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:48:39,081 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:48:39,081 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:39,081 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:39,082 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:48:39,082 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:39,082 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:39,082 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:39,082 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:48:39,082 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:48:39,136 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:48:39,141 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$74101646] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,144 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,190 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,195 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,195 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:48:39,196 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:48:39,196 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,197 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:48:39,240 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:48:39,246 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,255 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,419 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:48:39,536 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:48:39,536 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:48:39,549 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:48:39,549 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:48:39,557 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:48:39,557 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:48:39,557 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:48:39,844 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@31bcde7c' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,856 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,894 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,900 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$13e488bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,908 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,920 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,921 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:39,923 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:40,028 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:40,142 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:48:40,475 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:48:40,512 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:48:40,513 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4096 ms
2020-09-10 21:48:40,855 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:48:40,856 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:48:54,103 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:48:59,554 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:48:59,864 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:49:00,034 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:49:00,034 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:49:00,037 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:49:00,738 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x8910b557, L:/192.168.72.1:54374 - R:/192.168.72.1:8091]
2020-09-10 21:49:00,744 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 85 ms, version:1.3.0,role:RMROLE,channel:[id: 0x8910b557, L:/192.168.72.1:54374 - R:/192.168.72.1:8091]
2020-09-10 21:49:00,744 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:49:00,744 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:49:00,745 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:49:01,684 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$9523a5d1] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:49:01,807 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:49:01,945 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:49:02,041 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:49:02,041 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:49:02,049 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:49:02,049 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:49:02,290 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:49:04,048 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:49:04,056 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:49:04,527 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 53a3d2a8-0c3a-4a56-829e-8020f44d6978

2020-09-10 21:49:05,241 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2cef69ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f385ee2, org.springframework.security.web.header.HeaderWriterFilter@517185ea, org.springframework.security.web.authentication.logout.LogoutFilter@6ea7b808, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@10aeb496, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b4b20b4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62891ca7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@513efdb5, org.springframework.security.web.session.SessionManagementFilter@51c823b3, org.springframework.security.web.access.ExceptionTranslationFilter@1de18d47, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54ecc5b8]
2020-09-10 21:49:05,374 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:49:06,958 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:49:07,006 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:49:07,009 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:49:07,156 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:49:07,166 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:49:07,181 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:49:07,225 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:49:07,276 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:49:07,282 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:49:08,762 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:49:08,776 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 37.613 seconds (JVM running for 42.275)
2020-09-10 21:49:08,778 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:49:08,793 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:49:08,794 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:49:08,796 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:49:08,796 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:49:08,798 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:49:08,803 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:49:08,815 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:49:08,815 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:49:19,357 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:49:19,358 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:49:19,359 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:49:19,783 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:49:19,887 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:49:19,889 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:19,889 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:19,889 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:19,891 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:49:19,891 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:19,891 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:19,891 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:19,953 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:49:19,957 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:49:19,958 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:49:21,722 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:49:21,723 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:49:21,729 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:49:21,765 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:49:21,766 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:49:24,126 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:49:24,339 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:49:24,483 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:49:24,493 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:49:24,494 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:49:24,494 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:49:24,494 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:49:24,494 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:49:24,494 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:49:24,494 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:49:24,494 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:24,494 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:24,495 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:49:24,495 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:24,495 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:24,495 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:24,495 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:49:24,495 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:49:24,544 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:49:24,548 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$2222164f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:24,551 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:24,584 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:24,589 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:24,589 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:49:24,590 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:49:24,590 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:24,591 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:49:24,634 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:49:24,640 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:24,650 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:24,815 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:49:24,934 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:49:24,935 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:49:24,947 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:49:24,948 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:49:24,955 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:49:24,955 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:49:24,955 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:49:25,245 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2ef54675' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,257 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,294 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,300 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c1f688c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,308 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,321 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,321 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,324 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,428 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,544 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:49:25,876 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:49:25,913 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:49:25,914 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4086 ms
2020-09-10 21:49:26,249 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:49:26,249 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:49:28,937 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:49:33,576 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:49:33,867 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:49:34,034 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:49:34,034 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:49:34,037 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:49:34,740 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xea25f8a7, L:/192.168.72.1:54590 - R:/192.168.72.1:8091]
2020-09-10 21:49:34,746 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 84 ms, version:1.3.0,role:RMROLE,channel:[id: 0xea25f8a7, L:/192.168.72.1:54590 - R:/192.168.72.1:8091]
2020-09-10 21:49:34,746 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:49:34,747 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:49:34,747 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:49:35,753 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$712de24e] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:49:35,879 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:49:36,015 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:49:36,110 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:49:36,110 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:49:36,118 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:49:36,118 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:49:36,368 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:49:38,056 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:49:38,063 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:49:38,529 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 919882bf-3373-4d52-9020-2902831701f6

2020-09-10 21:49:39,184 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b61db35, org.springframework.security.web.context.SecurityContextPersistenceFilter@43a34a24, org.springframework.security.web.header.HeaderWriterFilter@5c04e2e0, org.springframework.security.web.authentication.logout.LogoutFilter@79c3a61f, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@5305c52f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6db8cde5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@791f8b68, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15744825, org.springframework.security.web.session.SessionManagementFilter@2cbcc1bc, org.springframework.security.web.access.ExceptionTranslationFilter@37d6d846, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1acf77f9]
2020-09-10 21:49:39,312 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:49:40,942 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:49:40,988 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:49:40,992 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:49:41,137 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:49:41,147 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:49:41,162 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:49:41,204 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:49:41,256 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:49:41,261 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:49:42,742 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:49:42,756 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 26.242 seconds (JVM running for 31.141)
2020-09-10 21:49:43,284 [RMI TCP Connection(4)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:49:43,285 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:49:43,298 [RMI TCP Connection(4)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:50:24,925 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:50:24,926 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:50:24,932 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x36729383, L:/192.168.72.1:54858 - R:/192.168.72.1:8091]
2020-09-10 21:50:24,932 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 3 ms, version:1.3.0,role:TMROLE,channel:[id: 0x36729383, L:/192.168.72.1:54858 - R:/192.168.72.1:8091]
2020-09-10 21:51:52,151 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:51:52,165 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:51:52,168 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:51:52,170 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:51:52,171 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:51:52,172 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:51:52,174 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:51:52,179 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:51:52,192 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:51:52,192 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:51:52,196 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x36729383, L:/192.168.72.1:54858 ! R:/192.168.72.1:8091]
2020-09-10 21:51:52,197 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x36729383, L:/192.168.72.1:54858 ! R:/192.168.72.1:8091]
2020-09-10 21:51:52,197 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x36729383, L:/192.168.72.1:54858 ! R:/192.168.72.1:8091]
2020-09-10 21:51:52,197 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x36729383, L:/192.168.72.1:54858 ! R:/192.168.72.1:8091]
2020-09-10 21:51:52,197 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x36729383, L:/192.168.72.1:54858 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:51:52,197 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x36729383, L:/192.168.72.1:54858 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:52:01,779 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:52:01,781 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:52:01,781 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:52:02,334 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:52:02,462 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:52:02,464 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:02,465 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:02,465 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:02,469 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:52:02,469 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:02,469 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:02,470 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:02,562 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:52:02,567 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:52:02,570 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:52:04,401 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:52:04,402 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:52:04,408 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:52:04,446 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:52:04,446 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:52:06,793 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:52:07,006 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:52:07,158 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:52:07,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:52:07,168 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:52:07,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:52:07,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:52:07,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:52:07,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:52:07,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:52:07,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:07,169 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:07,170 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:52:07,170 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:07,170 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:07,170 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:07,170 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:52:07,170 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:52:07,236 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:52:07,240 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$daef167e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,243 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,277 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,281 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,282 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:52:07,282 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:52:07,283 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,283 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:52:07,326 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:52:07,333 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,343 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,508 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:52:07,627 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:52:07,627 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:52:07,640 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:52:07,640 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:52:07,648 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:52:07,648 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:52:07,648 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:52:07,948 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7c106dc8' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,959 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:07,998 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:08,004 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7ac388f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:08,012 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:08,025 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:08,026 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:08,028 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:08,134 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:08,250 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:52:08,585 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:52:08,625 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:52:08,625 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4116 ms
2020-09-10 21:52:08,970 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:52:08,970 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:52:18,713 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:52:23,585 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:52:23,902 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:52:24,070 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:52:24,070 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:52:24,073 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:52:24,758 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x0573c881, L:/192.168.72.1:55393 - R:/192.168.72.1:8091]
2020-09-10 21:52:24,763 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 82 ms, version:1.3.0,role:RMROLE,channel:[id: 0x0573c881, L:/192.168.72.1:55393 - R:/192.168.72.1:8091]
2020-09-10 21:52:24,764 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:52:24,764 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:52:24,764 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:52:25,711 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$d28a13dc] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:52:25,830 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:52:25,963 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:52:26,058 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:52:26,059 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:52:26,067 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:52:26,067 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:52:26,306 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:52:28,091 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:52:28,098 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:52:28,564 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 036307b1-50c8-4e61-8163-969837de0d07

2020-09-10 21:52:29,274 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79165c07, org.springframework.security.web.context.SecurityContextPersistenceFilter@250419a6, org.springframework.security.web.header.HeaderWriterFilter@39f0c086, org.springframework.security.web.authentication.logout.LogoutFilter@7b666d2f, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@349b7610, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5044e707, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7591da06, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16390175, org.springframework.security.web.session.SessionManagementFilter@19042300, org.springframework.security.web.access.ExceptionTranslationFilter@51ab8c9e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74f05401]
2020-09-10 21:52:29,408 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:52:31,010 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:52:31,057 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:52:31,061 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:52:31,203 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:52:31,213 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:52:31,228 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:52:31,270 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:52:31,323 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:52:31,328 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:52:32,814 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:52:32,828 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 33.982 seconds (JVM running for 38.915)
2020-09-10 21:52:33,044 [RMI TCP Connection(1)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:52:33,045 [RMI TCP Connection(1)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:52:33,058 [RMI TCP Connection(1)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:53:07,618 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:53:07,619 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:53:07,625 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x98632239, L:/192.168.72.1:55637 - R:/192.168.72.1:8091]
2020-09-10 21:53:07,625 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 3 ms, version:1.3.0,role:TMROLE,channel:[id: 0x98632239, L:/192.168.72.1:55637 - R:/192.168.72.1:8091]
2020-09-10 21:53:16,235 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@579650a
2020-09-10 21:53:16,253 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47440917929398272]
2020-09-10 21:53:16,401 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:53:16,816 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:53:17,003 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:53:21,325 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:53:21,349 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:53:21,360 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:53:21,365 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@1b6742c
2020-09-10 21:53:21,489 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47440917929398272] rollback status: Rollbacked
2020-09-10 21:53:21,494 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:53:21,540 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:53:23,761 [Thread-653] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:53:23,765 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:53:23,772 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:53:23,774 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:53:23,776 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:53:23,777 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:53:23,778 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:53:23,779 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:53:23,782 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:53:23,789 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:53:23,790 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:53:23,798 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x98632239, L:/192.168.72.1:55637 ! R:/192.168.72.1:8091]
2020-09-10 21:53:23,798 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x98632239, L:/192.168.72.1:55637 ! R:/192.168.72.1:8091]
2020-09-10 21:53:23,798 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x98632239, L:/192.168.72.1:55637 ! R:/192.168.72.1:8091]
2020-09-10 21:53:23,798 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x98632239, L:/192.168.72.1:55637 ! R:/192.168.72.1:8091]
2020-09-10 21:53:23,798 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x98632239, L:/192.168.72.1:55637 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:53:23,799 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x98632239, L:/192.168.72.1:55637 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:53:33,237 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:53:33,238 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:53:33,239 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:53:33,701 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:53:33,806 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:53:33,808 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:33,808 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:33,809 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:33,810 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:53:33,810 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:33,810 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:33,810 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:33,872 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:53:33,876 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:53:33,877 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:53:35,632 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:53:35,633 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:53:35,639 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:53:35,676 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:53:35,677 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:53:38,017 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:53:38,229 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:53:38,397 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:53:38,407 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:53:38,407 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:53:38,407 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:53:38,407 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:53:38,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:53:38,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:53:38,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:53:38,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:38,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:38,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:53:38,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:38,408 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:38,409 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:38,409 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:53:38,409 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:53:38,464 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:53:38,468 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$8bac9428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:38,471 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:38,508 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:38,513 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:38,513 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:53:38,514 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:53:38,514 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:38,515 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:53:38,561 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:53:38,569 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:38,578 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:38,758 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:53:38,878 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:53:38,878 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:53:38,891 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:53:38,891 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:53:38,899 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:53:38,899 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:53:38,899 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:53:39,191 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@248ba482' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,203 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,241 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,248 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2b81069d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,256 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,268 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,269 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,271 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,379 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,499 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:53:39,832 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:53:39,870 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:53:39,870 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4131 ms
2020-09-10 21:53:40,206 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:53:40,206 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:53:46,249 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:53:51,297 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:53:51,588 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:53:51,755 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:53:51,755 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:53:51,758 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:53:52,438 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xce7d662e, L:/192.168.72.1:55890 - R:/192.168.72.1:8091]
2020-09-10 21:53:52,444 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 83 ms, version:1.3.0,role:RMROLE,channel:[id: 0xce7d662e, L:/192.168.72.1:55890 - R:/192.168.72.1:8091]
2020-09-10 21:53:52,445 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:53:52,445 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:53:52,445 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:53:53,446 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$edae2db7] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:53:53,567 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:53:53,699 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:53:53,793 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:53:53,794 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:53:53,802 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:53:53,802 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:53:54,037 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:53:55,768 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:53:55,776 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:53:56,242 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: db439de6-5dda-4a90-984d-fd53c08dd220

2020-09-10 21:53:56,895 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32402b55, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f88fda, org.springframework.security.web.header.HeaderWriterFilter@730e5a37, org.springframework.security.web.authentication.logout.LogoutFilter@490c1287, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@2f30899f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46eff5dd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@739f8a89, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43073cb6, org.springframework.security.web.session.SessionManagementFilter@73f85fd1, org.springframework.security.web.access.ExceptionTranslationFilter@4df9ceb2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3458d81d]
2020-09-10 21:53:57,020 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:53:58,616 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:53:58,665 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:53:58,668 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:53:58,816 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:53:58,829 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:53:58,844 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:53:58,887 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:53:58,939 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:53:58,944 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:54:00,428 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:54:00,442 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 30.343 seconds (JVM running for 34.926)
2020-09-10 21:54:00,761 [RMI TCP Connection(1)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:54:00,762 [RMI TCP Connection(1)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:54:00,776 [RMI TCP Connection(1)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 14 ms
2020-09-10 21:54:04,712 [Thread-3] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:54:04,724 [Thread-3] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:54:04,726 [Thread-3] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:54:04,728 [Thread-3] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:54:04,730 [Thread-3] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:54:04,731 [Thread-3] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:54:04,732 [Thread-3] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:54:04,738 [Thread-3] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:54:04,754 [Thread-3] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:54:04,754 [Thread-3] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:54:46,239 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:54:46,240 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:54:46,241 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:54:46,676 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:54:46,780 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:54:46,782 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:46,782 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:46,782 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:46,784 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:54:46,784 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:46,784 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:46,784 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:46,846 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:54:46,850 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:54:46,851 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:54:48,632 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:54:48,633 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:54:48,639 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:54:48,677 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:54:48,677 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:54:51,075 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:54:51,293 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:54:51,441 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:54:51,462 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:54:51,462 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:54:51,462 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:54:51,462 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:54:51,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:54:51,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:54:51,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:54:51,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:51,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:51,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:54:51,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:51,463 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:51,464 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:51,464 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:54:51,464 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:54:51,515 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:54:51,519 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$d4e21bd9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:51,522 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:51,556 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:51,560 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:51,561 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:54:51,561 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:54:51,562 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:51,562 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:54:51,606 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:54:51,612 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:51,622 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:51,789 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:54:51,908 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:54:51,908 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:54:51,921 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:54:51,922 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:54:51,929 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:54:51,930 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:54:51,930 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:54:52,222 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3683dc64' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,235 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,274 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,280 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$74b68e4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,288 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,301 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,301 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,304 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,412 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,529 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:54:52,871 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:54:52,908 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:54:52,908 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4159 ms
2020-09-10 21:54:53,253 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:54:53,254 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:54:57,231 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:55:00,833 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:55:01,125 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:55:01,294 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:55:01,295 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:55:01,298 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:55:02,078 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x8f6cc771, L:/192.168.72.1:56285 - R:/192.168.72.1:8091]
2020-09-10 21:55:02,084 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 84 ms, version:1.3.0,role:RMROLE,channel:[id: 0x8f6cc771, L:/192.168.72.1:56285 - R:/192.168.72.1:8091]
2020-09-10 21:55:02,085 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:55:02,085 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:55:02,085 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:55:03,049 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$cafe6a99] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:55:03,166 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:55:03,304 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:55:03,402 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:55:03,403 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:55:03,411 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:55:03,411 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:55:03,671 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:55:05,387 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:55:05,394 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:55:05,869 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: c144b2a1-b371-463f-93e0-573ea56be738

2020-09-10 21:55:06,574 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@170423de, org.springframework.security.web.context.SecurityContextPersistenceFilter@792e1895, org.springframework.security.web.header.HeaderWriterFilter@78a666cd, org.springframework.security.web.authentication.logout.LogoutFilter@b558b28, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@514dc42a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3702741e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@420262bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@52bd539a, org.springframework.security.web.session.SessionManagementFilter@28fb68b9, org.springframework.security.web.access.ExceptionTranslationFilter@48cece08, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42838bbd]
2020-09-10 21:55:06,710 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:55:08,565 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:55:08,614 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:55:08,618 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:55:08,759 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:55:08,770 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:55:08,785 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:55:08,828 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:55:08,881 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:55:08,887 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:55:10,396 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:55:10,409 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 27.182 seconds (JVM running for 31.483)
2020-09-10 21:55:11,346 [RMI TCP Connection(9)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:55:11,346 [RMI TCP Connection(9)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:55:11,360 [RMI TCP Connection(9)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 21:55:13,356 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:55:13,370 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:55:13,372 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:55:13,374 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:55:13,375 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:55:13,376 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:55:13,378 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:55:13,382 [RMI TCP Connection(8)-192.168.72.1] ERROR [o.s.c.c.d.health.DiscoveryClientHealthIndicator] DiscoveryClientHealthIndicator.java:76 - Error
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'compositeDiscoveryClient': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:212)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1304)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfAvailable(DefaultListableBeanFactory.java:1939)
	at org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator.health(DiscoveryClientHealthIndicator.java:68)
	at org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor.lambda$asHealthIndicator$0(DiscoveryCompositeHealthContributor.java:77)
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:71)
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:39)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:99)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:96)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateHealth(HealthEndpointSupport.java:110)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:96)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:74)
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:61)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:65)
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:77)
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:121)
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:96)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at sun.reflect.GeneratedMethodAccessor107.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:361)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-09-10 21:55:13,383 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:55:13,398 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:55:13,398 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:55:24,344 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:55:24,346 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:55:24,346 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:55:24,905 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:55:25,025 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:55:25,028 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:25,028 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:25,028 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:25,030 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:55:25,030 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:25,030 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:25,030 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:25,099 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:55:25,103 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:55:25,104 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:55:27,036 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:55:27,038 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:55:27,043 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:55:27,086 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:55:27,086 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:55:29,808 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:55:30,009 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:55:30,207 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:55:30,221 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:55:30,221 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:55:30,221 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:55:30,221 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:55:30,221 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:55:30,221 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:55:30,222 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:55:30,222 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:30,222 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:30,222 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:55:30,222 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:30,222 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:30,222 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:30,223 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:55:30,223 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:55:30,289 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:55:30,295 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$ed1614fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:30,298 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:30,337 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:30,342 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:30,343 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:55:30,343 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:55:30,344 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:30,344 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:55:30,395 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:55:30,403 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:30,415 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:30,602 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:55:30,732 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:55:30,732 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:55:30,760 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:55:30,761 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:55:30,769 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:55:30,769 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:55:30,769 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:55:31,057 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@17c56a66' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,070 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,108 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,115 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8cea876f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,122 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,134 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,135 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,138 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,245 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,360 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:55:31,696 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:55:31,734 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:55:31,734 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4575 ms
2020-09-10 21:55:32,068 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:55:32,068 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:55:34,686 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:55:53,106 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:55:53,441 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:55:53,637 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:55:53,637 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:55:53,641 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:55:54,445 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x4825467d, L:/192.168.72.1:56629 - R:/192.168.72.1:8091]
2020-09-10 21:55:54,451 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 95 ms, version:1.3.0,role:RMROLE,channel:[id: 0x4825467d, L:/192.168.72.1:56629 - R:/192.168.72.1:8091]
2020-09-10 21:55:54,452 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:55:54,452 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:55:54,453 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:55:55,710 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$56a447ee] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:55:55,918 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:55:56,110 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:55:56,250 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:55:56,251 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:55:56,263 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:55:56,263 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:55:56,569 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:55:58,388 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:55:58,399 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:55:59,013 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: a6770cf4-216e-46e8-bb0d-6c32ec795a0d

2020-09-10 21:55:59,884 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28e64fbc, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b3dad1f, org.springframework.security.web.header.HeaderWriterFilter@98b8e51, org.springframework.security.web.authentication.logout.LogoutFilter@61054959, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@72c0289, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53ff3ffb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@31928b53, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f032403, org.springframework.security.web.session.SessionManagementFilter@12586dd6, org.springframework.security.web.access.ExceptionTranslationFilter@5630c902, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@636129b3]
2020-09-10 21:56:00,046 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:56:01,815 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:56:01,864 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:56:01,868 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:56:02,009 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:56:02,021 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:56:02,037 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:56:02,081 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:56:02,134 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:56:02,140 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:56:03,628 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:56:03,642 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 42.474 seconds (JVM running for 47.502)
2020-09-10 21:56:04,635 [RMI TCP Connection(7)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:56:04,636 [RMI TCP Connection(7)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:56:04,653 [RMI TCP Connection(7)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 17 ms
2020-09-10 21:56:29,609 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:56:29,656 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:56:29,682 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:56:29,687 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:56:29,687 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:56:29,688 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource refreshArgs [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:56:29,688 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:56:29,688 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:56:29,688 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:56:29,688 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:56:29,688 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:56:29,688 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:56:29,691 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:56:29,692 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:56:29,692 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:56:30,722 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:56:30,723 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:56:30,729 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xf7c5c91a, L:/192.168.72.1:56870 - R:/192.168.72.1:8091]
2020-09-10 21:56:30,729 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 4 ms, version:1.3.0,role:TMROLE,channel:[id: 0xf7c5c91a, L:/192.168.72.1:56870 - R:/192.168.72.1:8091]
2020-09-10 21:56:31,271 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:56:31,308 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:56:31,314 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:56:31,316 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:56:31,318 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:56:31,333 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:56:31,333 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.boot.SpringApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:56:31,368 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [org.springframework.boot.SpringApplication] StartupInfoLogger.java:61 - Started application in 3.256 seconds (JVM running for 75.228)
2020-09-10 21:56:31,780 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.caching.RefreshScopeRefreshedEventListener] RefreshScopeRefreshedEventListener.java:35 - Refreshing cached encryptable property sources
2020-09-10 21:56:31,783 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [c.u.j.caching.RefreshScopeRefreshedEventListener] RefreshScopeRefreshedEventListener.java:35 - Refreshing cached encryptable property sources
2020-09-10 21:56:31,784 [com.alibaba.nacos.client.Worker.longPolling.fixed-whalex-nacos_8848] INFO  [o.s.cloud.endpoint.event.RefreshEventListener] RefreshEventListener.java:73 - Refresh keys changed: []
2020-09-10 21:56:55,482 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:56:55,495 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:56:55,498 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:56:55,499 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:56:55,500 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:56:55,501 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:56:55,502 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:56:55,507 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:56:55,521 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:56:55,521 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:56:55,525 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0xf7c5c91a, L:/192.168.72.1:56870 ! R:/192.168.72.1:8091]
2020-09-10 21:56:55,525 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0xf7c5c91a, L:/192.168.72.1:56870 ! R:/192.168.72.1:8091]
2020-09-10 21:56:55,525 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0xf7c5c91a, L:/192.168.72.1:56870 ! R:/192.168.72.1:8091]
2020-09-10 21:56:55,525 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0xf7c5c91a, L:/192.168.72.1:56870 ! R:/192.168.72.1:8091]
2020-09-10 21:56:55,525 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf7c5c91a, L:/192.168.72.1:56870 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:56:55,525 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0xf7c5c91a, L:/192.168.72.1:56870 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:57:05,921 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 21:57:05,922 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 21:57:05,922 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 21:57:06,345 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:57:06,449 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:57:06,451 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:06,451 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:06,451 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:06,453 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:57:06,453 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:06,453 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:06,453 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:06,516 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:57:06,522 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:57:06,524 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:57:08,280 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 21:57:08,281 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 21:57:08,286 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 21:57:08,323 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 21:57:08,323 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 21:57:10,642 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 21:57:10,851 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=9efe64e8-545c-3257-bff1-fdf5da552b69
2020-09-10 21:57:11,028 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 21:57:11,039 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:57:11,039 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:57:11,039 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:57:11,039 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 21:57:11,040 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 21:57:11,040 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:57:11,040 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:57:11,040 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:11,040 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:11,040 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:57:11,040 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:11,041 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:11,041 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:11,041 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 21:57:11,041 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 21:57:11,097 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 21:57:11,101 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$62a096a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,104 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,141 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,145 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,146 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 21:57:11,146 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 21:57:11,147 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,148 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 21:57:11,195 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 21:57:11,202 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,212 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,389 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 21:57:11,523 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:57:11,524 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:57:11,537 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 21:57:11,537 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 21:57:11,545 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 21:57:11,545 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 21:57:11,545 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 21:57:11,849 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@41c7745a' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,860 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,897 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,903 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2750918] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,912 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,924 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,925 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:11,927 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:12,033 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:12,148 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 21:57:12,481 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 21:57:12,518 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 21:57:12,518 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4133 ms
2020-09-10 21:57:12,847 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 21:57:12,847 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 21:57:14,854 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 21:57:19,555 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 21:57:19,862 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 21:57:20,030 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:57:20,031 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 21:57:20,034 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:57:20,804 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x7ffc8296, L:/192.168.72.1:57131 - R:/192.168.72.1:8091]
2020-09-10 21:57:20,810 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 86 ms, version:1.3.0,role:RMROLE,channel:[id: 0x7ffc8296, L:/192.168.72.1:57131 - R:/192.168.72.1:8091]
2020-09-10 21:57:20,811 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 21:57:20,811 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 21:57:20,811 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 21:57:21,740 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$41de4b8e] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 21:57:21,857 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 21:57:21,998 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 21:57:22,099 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:57:22,099 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:57:22,108 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 21:57:22,108 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 21:57:22,421 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 21:57:24,548 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:57:24,556 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:57:25,141 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: a54dcf85-5581-4fcd-a0d1-454fbd279bc4

2020-09-10 21:57:26,013 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33c8b7d6, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c09f84b, org.springframework.security.web.header.HeaderWriterFilter@15c70ed8, org.springframework.security.web.authentication.logout.LogoutFilter@3df234c6, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@6ed1f54e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ca99439, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67acaef3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@518a859c, org.springframework.security.web.session.SessionManagementFilter@1f0d4e1, org.springframework.security.web.access.ExceptionTranslationFilter@2df89b19, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f8a6849]
2020-09-10 21:57:26,167 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 21:57:28,121 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:57:28,177 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 21:57:28,182 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 21:57:28,353 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 21:57:28,365 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 21:57:28,388 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 21:57:28,441 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 21:57:28,501 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 21:57:28,506 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 21:57:30,255 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 21:57:30,269 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 27.175 seconds (JVM running for 31.648)
2020-09-10 21:57:31,500 [RMI TCP Connection(5)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 21:57:31,501 [RMI TCP Connection(5)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 21:57:31,515 [RMI TCP Connection(5)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 14 ms
2020-09-10 21:58:11,514 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 21:58:11,515 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 21:58:11,521 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x0af7e8d5, L:/192.168.72.1:57510 - R:/192.168.72.1:8091]
2020-09-10 21:58:11,521 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 3 ms, version:1.3.0,role:TMROLE,channel:[id: 0x0af7e8d5, L:/192.168.72.1:57510 - R:/192.168.72.1:8091]
2020-09-10 21:58:44,287 [XNIO-1 task-1] INFO  [io.seata.tm.TransactionManagerHolder] TransactionManagerHolder.java:40 - TransactionManager Singleton io.seata.tm.DefaultTransactionManager@39dda37e
2020-09-10 21:58:44,302 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:108 - Begin new global transaction [192.168.72.1:8091:47442293879214080]
2020-09-10 21:58:44,420 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id=?, status=?, create_time=?, update_time=? WHERE id=? AND is_delete=0 
2020-09-10 21:58:44,906 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, null, 1(Long)
2020-09-10 21:58:45,129 [XNIO-1 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 21:58:48,622 [XNIO-1 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 21:58:48,643 [XNIO-1 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 21:58:48,652 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 21:58:48,657 [XNIO-1 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@436a93e7
2020-09-10 21:58:48,768 [XNIO-1 task-1] INFO  [io.seata.tm.api.DefaultGlobalTransaction] DefaultGlobalTransaction.java:179 - [192.168.72.1:8091:47442293879214080] rollback status: Rollbacked
2020-09-10 21:58:48,773 [XNIO-1 task-1] ERROR [com.whalex.common.mvc.aspect.AdviceController] AdviceController.java:35 - 运行时异常 com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre
2020-09-10 21:58:48,812 [XNIO-1 task-1] WARN  [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] AbstractHandlerExceptionResolver.java:199 - Resolved [java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: whale-order-centre]
2020-09-10 21:59:45,193 [Thread-658] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 21:59:45,198 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 21:59:45,206 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 21:59:45,208 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 21:59:45,210 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 21:59:45,212 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 21:59:45,213 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 21:59:45,214 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 21:59:45,217 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 21:59:45,225 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 21:59:45,225 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 21:59:45,234 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x0af7e8d5, L:/192.168.72.1:57510 ! R:/192.168.72.1:8091]
2020-09-10 21:59:45,234 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x0af7e8d5, L:/192.168.72.1:57510 ! R:/192.168.72.1:8091]
2020-09-10 21:59:45,234 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x0af7e8d5, L:/192.168.72.1:57510 ! R:/192.168.72.1:8091]
2020-09-10 21:59:45,234 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x0af7e8d5, L:/192.168.72.1:57510 ! R:/192.168.72.1:8091]
2020-09-10 21:59:45,235 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0af7e8d5, L:/192.168.72.1:57510 ! R:/192.168.72.1:8091]) will closed
2020-09-10 21:59:45,235 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x0af7e8d5, L:/192.168.72.1:57510 ! R:/192.168.72.1:8091]) will closed
2020-09-10 22:07:36,569 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:07:36,570 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:07:36,570 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:07:37,001 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:07:37,106 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:07:37,109 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:37,109 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:37,109 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:37,110 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:07:37,111 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:37,111 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:37,111 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:37,174 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:07:37,178 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:07:37,180 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:07:38,959 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:07:38,961 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:07:38,966 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:07:39,002 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:07:39,002 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:07:41,383 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 22:07:41,590 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=e531e741-fb21-3d31-890c-5339f32bca4d
2020-09-10 22:07:41,753 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:07:41,765 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:07:41,766 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:07:41,766 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:07:41,766 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:07:41,766 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:07:41,766 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:07:41,766 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:07:41,767 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:41,767 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:41,767 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:07:41,767 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:41,767 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:41,767 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:41,767 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:07:41,767 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:07:41,825 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:07:41,829 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$c12422f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:41,832 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:41,869 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:41,874 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:41,875 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:07:41,875 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:07:41,876 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:41,877 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:07:41,924 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 22:07:41,932 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:41,942 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,121 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:07:42,265 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:07:42,265 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:07:42,278 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 22:07:42,278 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 22:07:42,287 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:07:42,287 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:07:42,287 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:07:42,577 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@48fdb11c' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,588 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,629 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,635 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$abe6b4a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,643 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,655 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,656 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,659 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,766 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:42,884 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:07:43,230 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:07:43,270 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:07:43,270 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4206 ms
2020-09-10 22:07:43,613 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 22:07:43,613 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 22:08:37,318 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 22:08:43,336 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:08:43,630 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 22:17:01,081 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:17:01,082 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:17:01,082 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:17:01,515 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:17:01,623 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:17:01,626 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:01,626 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:01,626 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:01,627 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:17:01,627 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:01,628 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:01,628 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:01,695 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:17:01,698 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:17:01,700 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:17:03,583 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:17:03,584 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:17:03,590 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:17:03,626 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:17:03,626 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:17:05,997 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 22:17:06,211 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=e531e741-fb21-3d31-890c-5339f32bca4d
2020-09-10 22:17:06,367 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:17:06,379 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:17:06,379 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:17:06,379 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:17:06,379 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:17:06,380 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:17:06,380 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:17:06,380 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:17:06,380 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:06,380 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:06,380 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:17:06,380 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:06,380 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:06,381 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:06,381 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:17:06,381 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:17:06,439 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:17:06,444 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$4a009e35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:06,447 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:06,484 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:06,488 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:06,489 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:17:06,490 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:17:06,490 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:06,491 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:17:06,550 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 22:17:06,557 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:06,566 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:06,675 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:17:06,797 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:17:06,797 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:17:06,810 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 22:17:06,810 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 22:17:06,820 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:17:06,820 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:17:06,820 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:17:07,113 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@71f4508a' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,126 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,166 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,172 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e9d510aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,180 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,193 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,193 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,196 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,304 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,423 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:17:07,767 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:17:07,806 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:17:07,806 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4118 ms
2020-09-10 22:17:08,142 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 22:17:08,142 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 22:17:11,112 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 22:17:16,201 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:17:16,499 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 22:17:16,669 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:17:16,670 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 22:17:16,673 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:17:17,374 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x475fa6aa, L:/192.168.72.1:63094 - R:/192.168.72.1:8091]
2020-09-10 22:17:17,380 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 85 ms, version:1.3.0,role:RMROLE,channel:[id: 0x475fa6aa, L:/192.168.72.1:63094 - R:/192.168.72.1:8091]
2020-09-10 22:17:17,381 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 22:17:17,381 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 22:17:17,381 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 22:17:18,330 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$47e7bad2] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 22:17:18,446 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 22:17:18,580 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 22:17:18,752 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:17:18,752 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:17:18,764 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:17:18,764 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:17:19,013 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 22:17:20,744 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:17:20,752 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:17:21,309 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 20f5fe1b-1332-4099-9073-e3199dd4a7b7

2020-09-10 22:17:21,976 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c895d3, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c901f5b, org.springframework.security.web.header.HeaderWriterFilter@2d571d7f, org.springframework.security.web.authentication.logout.LogoutFilter@1fb8ebf1, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@5f4515ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@578f754a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@473f50e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3b30fc42, org.springframework.security.web.session.SessionManagementFilter@443ab5b1, org.springframework.security.web.access.ExceptionTranslationFilter@56d7a85d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63936c51]
2020-09-10 22:17:22,106 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 22:17:23,695 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:17:23,743 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 22:17:23,747 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 22:17:23,894 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 22:17:23,905 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 22:17:23,920 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 22:17:23,963 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 22:17:24,016 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 22:17:24,022 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 22:17:25,592 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:17:25,606 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 27.606 seconds (JVM running for 32.116)
2020-09-10 22:17:26,119 [RMI TCP Connection(1)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 22:17:26,120 [RMI TCP Connection(1)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 22:17:26,134 [RMI TCP Connection(1)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 14 ms
2020-09-10 22:18:06,787 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:18:06,788 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:18:06,794 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x758430c2, L:/192.168.72.1:63386 - R:/192.168.72.1:8091]
2020-09-10 22:18:06,794 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 4 ms, version:1.3.0,role:TMROLE,channel:[id: 0x758430c2, L:/192.168.72.1:63386 - R:/192.168.72.1:8091]
2020-09-10 22:18:14,514 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 22:18:14,529 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 22:18:14,531 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:18:14,533 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 22:18:14,535 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 22:18:14,536 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 22:18:14,537 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 22:18:14,541 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 22:18:14,557 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 22:18:14,557 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 22:18:14,561 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x758430c2, L:/192.168.72.1:63386 ! R:/192.168.72.1:8091]
2020-09-10 22:18:14,562 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x758430c2, L:/192.168.72.1:63386 ! R:/192.168.72.1:8091]
2020-09-10 22:18:14,562 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x758430c2, L:/192.168.72.1:63386 ! R:/192.168.72.1:8091]
2020-09-10 22:18:14,562 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x758430c2, L:/192.168.72.1:63386 ! R:/192.168.72.1:8091]
2020-09-10 22:18:14,563 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x758430c2, L:/192.168.72.1:63386 ! R:/192.168.72.1:8091]) will closed
2020-09-10 22:18:14,563 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x758430c2, L:/192.168.72.1:63386 ! R:/192.168.72.1:8091]) will closed
2020-09-10 22:20:46,083 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:20:46,084 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:20:46,085 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:20:46,505 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:20:46,607 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:20:46,609 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:46,609 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:46,609 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:46,611 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:20:46,611 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:46,611 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:46,611 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:46,674 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:20:46,677 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:20:46,679 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:20:48,563 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:20:48,565 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:20:48,570 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:20:48,607 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:20:48,607 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:20:50,972 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 22:20:51,184 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=eea6c41d-4c04-343a-8670-1d16a1ad5605
2020-09-10 22:20:51,329 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:20:51,340 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:20:51,340 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:20:51,340 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:20:51,340 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:20:51,340 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:20:51,340 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:20:51,340 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:20:51,341 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:51,341 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:51,341 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:20:51,341 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:51,341 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:51,341 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:51,341 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:20:51,341 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:20:51,395 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:20:51,400 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$c450b4f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:51,403 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:51,440 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:51,445 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:51,446 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:20:51,446 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:20:51,447 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:51,448 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:20:51,495 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 22:20:51,503 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:51,519 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:51,643 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:20:51,762 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:20:51,762 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:20:51,775 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 22:20:51,775 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 22:20:51,783 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:20:51,783 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:20:51,783 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:20:52,069 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@f196d6' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,081 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,120 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,126 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$64252768] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,134 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,146 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,146 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,149 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,254 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,364 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:20:52,698 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:20:52,735 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:20:52,736 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4066 ms
2020-09-10 22:20:53,063 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 22:20:53,063 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 22:20:56,422 [restartedMain] INFO  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:58 - LiveReload server is running on port 35729
2020-09-10 22:21:04,225 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:21:04,521 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 22:21:04,688 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:21:04,689 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 22:21:04,692 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:21:05,410 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xf3a57b9a, L:/192.168.72.1:64089 - R:/192.168.72.1:8091]
2020-09-10 22:21:05,416 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 81 ms, version:1.3.0,role:RMROLE,channel:[id: 0xf3a57b9a, L:/192.168.72.1:64089 - R:/192.168.72.1:8091]
2020-09-10 22:21:05,417 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 22:21:05,417 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 22:21:05,417 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 22:21:06,397 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$be8a15a6] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 22:21:06,512 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 22:21:06,648 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 22:21:06,819 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:21:06,819 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:21:06,827 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:21:06,828 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:21:07,065 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 22:21:08,831 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:21:08,838 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:21:09,365 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 90f79c55-bdcf-4ae8-8b04-f6dee443a067

2020-09-10 22:21:10,081 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36a32f9e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c9fbecd, org.springframework.security.web.header.HeaderWriterFilter@7bcbfe17, org.springframework.security.web.authentication.logout.LogoutFilter@2e8019b9, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@47eaec9c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79127a61, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@682dcd5a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@477967f9, org.springframework.security.web.session.SessionManagementFilter@1176985a, org.springframework.security.web.access.ExceptionTranslationFilter@6aabf60c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@201e261d]
2020-09-10 22:21:10,208 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 22:21:11,804 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:21:11,855 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 22:21:11,858 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 22:21:12,007 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 22:21:12,018 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 22:21:12,033 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 22:21:12,077 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 22:21:12,127 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 22:21:12,132 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 22:21:13,631 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:21:13,647 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 30.345 seconds (JVM running for 34.655)
2020-09-10 22:21:14,401 [RMI TCP Connection(6)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 22:21:14,402 [RMI TCP Connection(6)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 22:21:14,421 [RMI TCP Connection(6)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 19 ms
2020-09-10 22:21:51,752 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:21:51,753 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:21:51,759 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x15300419, L:/192.168.72.1:64293 - R:/192.168.72.1:8091]
2020-09-10 22:21:51,759 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 3 ms, version:1.3.0,role:TMROLE,channel:[id: 0x15300419, L:/192.168.72.1:64293 - R:/192.168.72.1:8091]
2020-09-10 22:28:12,445 [Thread-592] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 22:28:12,459 [Thread-592] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 22:28:12,461 [Thread-592] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:28:12,463 [Thread-592] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 22:28:12,465 [Thread-592] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 22:28:12,467 [Thread-592] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 22:28:12,468 [Thread-592] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 22:28:12,472 [Thread-592] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 22:28:12,488 [Thread-592] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 22:28:12,488 [Thread-592] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 22:28:14,827 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:28:14,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:28:14,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:14,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:14,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:14,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:28:14,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:14,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:14,831 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:14,835 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:28:14,836 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:28:14,836 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:28:16,458 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:28:16,460 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:28:16,463 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:28:16,474 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:28:16,474 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:28:17,555 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=eea6c41d-4c04-343a-8670-1d16a1ad5605
2020-09-10 22:28:17,571 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:28:17,579 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:28:17,579 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:28:17,579 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:28:17,579 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:28:17,580 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:28:17,592 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:28:17,594 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$c450b4f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,594 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,594 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,598 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,598 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:28:17,598 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:28:17,599 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,600 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:28:17,600 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:28:17,601 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:28:17,601 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:28:17,601 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:28:17,601 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:28:17,623 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3fa720b9' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,630 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,659 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,662 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$64252768] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,664 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,665 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,665 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,668 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,697 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,737 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:28:17,895 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:28:17,896 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:28:17,896 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1403 ms
2020-09-10 22:28:22,763 [restartedMain] INFO  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:58 - LiveReload server is running on port 35729
2020-09-10 22:28:26,093 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:28:26,109 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-2,master} inited
2020-09-10 22:28:26,109 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:189 - will register resourceId:jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 22:28:26,110 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 22:28:26,110 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 22:28:26,110 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 22:28:26,111 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.rm.AbstractRMHandler] AbstractRMHandler.java:155 - the rm client received response msg [version=1.3.0,extraData=null,identified=true,resultCode=null,msg=null] from tc server.
2020-09-10 22:28:26,576 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 22:28:26,631 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 22:28:26,712 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:28:26,712 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:28:26,816 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 22:28:28,431 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:28:28,437 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:28:28,626 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 05cb8e48-6901-49b1-91cc-f96c4fac578c

2020-09-10 22:28:28,684 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5bb64b69, org.springframework.security.web.context.SecurityContextPersistenceFilter@5db50869, org.springframework.security.web.header.HeaderWriterFilter@3b149f2c, org.springframework.security.web.authentication.logout.LogoutFilter@4489bb21, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@65452cd7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b56c26c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@424d3d5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@683177bb, org.springframework.security.web.session.SessionManagementFilter@25c20b2b, org.springframework.security.web.access.ExceptionTranslationFilter@7847cc47, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ba54e9a]
2020-09-10 22:28:28,704 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 22:28:30,246 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:28:30,274 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 22:28:30,277 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 22:28:30,320 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 22:28:30,328 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 22:28:30,330 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 22:28:31,819 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:28:31,831 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 18.796 seconds (JVM running for 472.839)
2020-09-10 22:28:31,833 [restartedMain] INFO  [o.s.b.d.a.ConditionEvaluationDeltaLoggingListener] ConditionEvaluationDeltaLoggingListener.java:63 - Condition evaluation unchanged
2020-09-10 22:28:56,465 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 22:28:56,468 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:28:56,469 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 22:28:56,471 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 22:28:56,471 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 22:28:56,472 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 22:28:56,472 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-2} closing ...
2020-09-10 22:28:56,473 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-2} closed
2020-09-10 22:28:56,473 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 22:29:06,797 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:29:06,799 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:29:06,799 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:29:07,252 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:29:07,377 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:29:07,381 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:07,381 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:07,381 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:07,383 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:29:07,383 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:07,383 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:07,384 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:07,471 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:29:07,475 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:29:07,478 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:29:10,250 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:29:10,252 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:29:10,258 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:29:10,300 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:29:10,301 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:29:13,732 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 22:29:14,030 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=eea6c41d-4c04-343a-8670-1d16a1ad5605
2020-09-10 22:29:14,320 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:29:14,334 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:29:14,334 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:29:14,334 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:29:14,334 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:29:14,334 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:29:14,335 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:29:14,335 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:29:14,335 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:14,335 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:14,335 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:29:14,335 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:14,335 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:14,336 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:14,336 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:29:14,336 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:29:14,403 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:29:14,408 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$75def3bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:14,412 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:14,455 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:14,460 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:14,462 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:29:14,462 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:29:14,463 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:14,463 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:29:14,516 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 22:29:14,524 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:14,536 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:14,659 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:29:14,814 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:29:14,815 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:29:14,830 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 22:29:14,830 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 22:29:14,839 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:29:14,839 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:29:14,839 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:29:15,148 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49d146e2' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,159 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,199 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,205 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$15b36632] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,214 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,227 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,227 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,230 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,336 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,446 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:29:15,812 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:29:15,851 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:29:15,851 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 5486 ms
2020-09-10 22:29:16,242 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 22:29:16,242 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 22:29:18,207 [restartedMain] INFO  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:58 - LiveReload server is running on port 35729
2020-09-10 22:29:22,407 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:29:22,780 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 22:29:22,968 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:29:22,968 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 22:29:22,972 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:29:23,752 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x5dd84f19, L:/192.168.72.1:50036 - R:/192.168.72.1:8091]
2020-09-10 22:29:23,758 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 99 ms, version:1.3.0,role:RMROLE,channel:[id: 0x5dd84f19, L:/192.168.72.1:50036 - R:/192.168.72.1:8091]
2020-09-10 22:29:23,759 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 22:29:23,759 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 22:29:23,760 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 22:29:24,794 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$a1e07e0c] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 22:29:24,924 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 22:29:25,062 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 22:29:25,247 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:29:25,247 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:29:25,256 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:29:25,257 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:29:25,501 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 22:29:27,255 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:29:27,264 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:29:27,843 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 4871e6da-9286-475c-b5d6-ce02ff5325f1

2020-09-10 22:29:28,645 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a4acc39, org.springframework.security.web.context.SecurityContextPersistenceFilter@13315b9f, org.springframework.security.web.header.HeaderWriterFilter@6e4554f8, org.springframework.security.web.authentication.logout.LogoutFilter@42534bde, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@10b50c58, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@b55ec88, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d9c7e30, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@11955a3b, org.springframework.security.web.session.SessionManagementFilter@4f1f7602, org.springframework.security.web.access.ExceptionTranslationFilter@46a4c9dc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d25c819]
2020-09-10 22:29:28,790 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 22:29:30,579 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:29:30,631 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 22:29:30,635 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 22:29:30,780 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 22:29:30,791 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 22:29:30,806 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 22:29:30,849 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 22:29:30,901 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 22:29:30,907 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 22:29:32,394 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:29:32,410 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 28.449 seconds (JVM running for 33.062)
2020-09-10 22:29:33,338 [RMI TCP Connection(10)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 22:29:33,339 [RMI TCP Connection(10)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 22:29:33,353 [RMI TCP Connection(10)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 14 ms
2020-09-10 22:30:14,804 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:30:14,806 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:30:14,811 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0x22868092, L:/192.168.72.1:50365 - R:/192.168.72.1:8091]
2020-09-10 22:30:14,812 [timeoutChecker_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 4 ms, version:1.3.0,role:TMROLE,channel:[id: 0x22868092, L:/192.168.72.1:50365 - R:/192.168.72.1:8091]
2020-09-10 22:31:20,286 [Thread-595] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 22:31:20,308 [Thread-595] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 22:31:20,314 [Thread-595] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:31:20,317 [Thread-595] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 22:31:20,331 [Thread-595] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 22:31:20,333 [Thread-595] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 22:31:20,335 [Thread-595] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 22:31:20,340 [Thread-595] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 22:31:20,357 [Thread-595] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 22:31:20,357 [Thread-595] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 22:31:20,362 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:384 - channel inactive: [id: 0x22868092, L:/192.168.72.1:50365 ! R:/192.168.72.1:8091]
2020-09-10 22:31:20,363 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:124 - return to pool, rm channel:[id: 0x22868092, L:/192.168.72.1:50365 ! R:/192.168.72.1:8091]
2020-09-10 22:31:20,363 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:133 - channel valid false,channel:[id: 0x22868092, L:/192.168.72.1:50365 ! R:/192.168.72.1:8091]
2020-09-10 22:31:20,364 [NettyClientSelector_TMROLE_1_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:120 - will destroy channel:[id: 0x22868092, L:/192.168.72.1:50365 ! R:/192.168.72.1:8091]
2020-09-10 22:31:20,364 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x22868092, L:/192.168.72.1:50365 ! R:/192.168.72.1:8091]) will closed
2020-09-10 22:31:20,614 [NettyClientSelector_TMROLE_1_1] INFO  [i.seata.core.rpc.netty.AbstractNettyRemotingClient] AbstractNettyRemotingClient.java:434 - ChannelHandlerContext(AbstractNettyRemotingClient$ClientHandler#0, [id: 0x22868092, L:/192.168.72.1:50365 ! R:/192.168.72.1:8091]) will closed
2020-09-10 22:31:22,290 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:31:22,293 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:31:22,293 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:22,293 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:22,293 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:22,294 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:31:22,294 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:22,294 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:22,294 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:22,296 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:31:22,297 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:31:22,297 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:31:23,875 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:31:23,877 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:31:23,881 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:31:23,892 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:31:23,893 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:31:25,105 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=eea6c41d-4c04-343a-8670-1d16a1ad5605
2020-09-10 22:31:25,126 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:31:25,143 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:31:25,143 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:31:25,143 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:31:25,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:31:25,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:31:25,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:31:25,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:31:25,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:25,144 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:25,145 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:31:25,145 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:25,145 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:25,145 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:25,145 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:31:25,145 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:31:25,161 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:31:25,163 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$75def3bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,163 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,164 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,169 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,170 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:31:25,171 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:31:25,171 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,172 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:31:25,172 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:31:25,173 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:31:25,173 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:31:25,173 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:31:25,173 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:31:25,203 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7d44089' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,207 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,235 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,240 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$15b36632] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,244 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,246 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,246 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,252 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,292 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,328 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:31:25,485 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:31:25,486 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:31:25,486 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1576 ms
2020-09-10 22:31:25,883 [restartedMain] INFO  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:58 - LiveReload server is running on port 35729
2020-09-10 22:31:33,351 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:31:33,368 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-2,master} inited
2020-09-10 22:31:33,369 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:189 - will register resourceId:jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 22:31:33,369 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 22:31:33,369 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 22:31:33,369 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 22:31:33,370 [NettyClientSelector_RMROLE_1_1] INFO  [io.seata.rm.AbstractRMHandler] AbstractRMHandler.java:155 - the rm client received response msg [version=1.3.0,extraData=null,identified=true,resultCode=null,msg=null] from tc server.
2020-09-10 22:31:33,861 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 22:31:33,933 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 22:31:34,018 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:31:34,018 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:31:34,122 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 22:31:35,891 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:31:35,899 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:31:36,090 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: f2abd49a-2a5c-4a04-a61c-ae82899cd6d0

2020-09-10 22:31:36,147 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5806de2d, org.springframework.security.web.context.SecurityContextPersistenceFilter@203c996f, org.springframework.security.web.header.HeaderWriterFilter@5cb72951, org.springframework.security.web.authentication.logout.LogoutFilter@78dc9389, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@2479cd0b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2be6e04c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4efea9c0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5bc9edb6, org.springframework.security.web.session.SessionManagementFilter@19ed71c4, org.springframework.security.web.access.ExceptionTranslationFilter@20357c98, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d0bef6c]
2020-09-10 22:31:36,169 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 22:31:37,734 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:31:37,770 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 22:31:37,775 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 22:31:37,831 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 22:31:37,840 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 22:31:37,843 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 22:31:39,408 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:31:39,422 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 18.772 seconds (JVM running for 160.074)
2020-09-10 22:31:39,424 [restartedMain] INFO  [o.s.b.d.a.ConditionEvaluationDeltaLoggingListener] ConditionEvaluationDeltaLoggingListener.java:63 - Condition evaluation unchanged
2020-09-10 22:31:56,900 [XNIO-2 task-1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 22:31:56,900 [XNIO-2 task-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 22:31:56,907 [XNIO-2 task-1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 7 ms
2020-09-10 22:31:57,455 [XNIO-2 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==>  Preparing: UPDATE pay_trade_order SET order_id = ?, status = ?, create_time = ?, update_time = ? WHERE tenant_code = 0 AND id = ? AND is_delete = 0 
2020-09-10 22:31:57,848 [XNIO-2 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - ==> Parameters: 1(Long), 1(Integer), null, 2020-09-10T22:31:57.288(LocalDateTime), 1(Long)
2020-09-10 22:31:57,859 [XNIO-2 task-1] DEBUG [c.w.p.order.mapper.PayTradeOrderMapper.updateById] BaseJdbcLogger.java:143 - <==    Updates: 1
2020-09-10 22:32:02,294 [XNIO-2 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 22:32:02,316 [XNIO-2 task-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:197 - Client: whale-order-centre instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-09-10 22:32:02,324 [XNIO-2 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-09-10 22:32:02,341 [XNIO-2 task-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 22:32:02,342 [XNIO-2 task-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client whale-order-centre initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=whale-order-centre,current list of Servers=[192.168.72.1:10010],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.72.1:10010;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@199069ea
2020-09-10 22:32:03,329 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: whale-order-centre.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-09-10 22:32:25,173 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:32:25,173 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:TMROLE,address:192.168.72.1:8091,msg:< RegisterTMRequest{applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:32:25,176 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.TmNettyRemotingClient] TmNettyRemotingClient.java:138 - register TM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xcdcc976c, L:/192.168.72.1:51122 - R:/192.168.72.1:8091]
2020-09-10 22:32:25,177 [timeoutChecker_3_1] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 2 ms, version:1.3.0,role:TMROLE,channel:[id: 0xcdcc976c, L:/192.168.72.1:51122 - R:/192.168.72.1:8091]
2020-09-10 22:32:29,317 [Thread-1232] INFO  [com.netflix.loadbalancer.PollingServerListUpdater] PollingServerListUpdater.java:53 - Shutting down the Executor Pool for PollingServerListUpdater
2020-09-10 22:32:29,319 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 22:32:29,323 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 22:32:29,324 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:32:29,325 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 22:32:29,326 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 22:32:29,327 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 22:32:29,327 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 22:32:29,327 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-2} closing ...
2020-09-10 22:32:29,329 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-2} closed
2020-09-10 22:32:29,329 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 22:33:13,629 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:33:13,630 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:33:13,630 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:33:14,210 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:33:14,324 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:33:14,328 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:14,328 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:14,329 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:14,331 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:33:14,332 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:14,332 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:14,332 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:14,400 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:33:14,404 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:33:14,405 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:33:16,702 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:33:16,704 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:33:16,712 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:33:16,754 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:33:16,754 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:33:19,663 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 22:33:19,932 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=eea6c41d-4c04-343a-8670-1d16a1ad5605
2020-09-10 22:33:20,062 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:33:20,075 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:33:20,075 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:33:20,075 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:33:20,075 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:33:20,075 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:33:20,075 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:33:20,076 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:33:20,076 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:20,076 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:20,076 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:33:20,076 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:20,076 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:20,076 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:20,077 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:33:20,077 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:33:20,139 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:33:20,146 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$f7378a5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,151 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,195 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,202 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,203 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:33:20,203 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:33:20,204 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,205 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:33:20,255 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 22:33:20,263 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,274 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,393 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:33:20,537 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:33:20,538 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:33:20,567 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 22:33:20,567 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 22:33:20,576 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:33:20,576 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:33:20,576 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:33:20,884 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5fdab043' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,897 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,937 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,944 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$970bfccf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,953 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,966 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,967 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:20,970 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:21,095 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:21,236 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:33:21,695 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:33:21,739 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:33:21,739 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4918 ms
2020-09-10 22:33:22,156 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 22:33:22,156 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 22:33:22,572 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 22:33:32,842 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:33:33,486 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 22:33:33,682 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:33:33,683 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 22:33:33,686 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:33:34,872 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xd5a9332a, L:/192.168.72.1:51533 - R:/192.168.72.1:8091]
2020-09-10 22:33:34,878 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 100 ms, version:1.3.0,role:RMROLE,channel:[id: 0xd5a9332a, L:/192.168.72.1:51533 - R:/192.168.72.1:8091]
2020-09-10 22:33:34,879 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 22:33:34,879 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 22:33:34,879 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 22:33:35,979 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$b787e219] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 22:33:36,114 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 22:33:36,261 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 22:33:36,483 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:33:36,483 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:33:36,494 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:33:36,495 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:33:36,825 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 22:33:38,792 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:33:38,806 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:33:39,616 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 380a9d53-6daf-4175-97b2-07eb83557297

2020-09-10 22:33:40,438 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f88c733, org.springframework.security.web.context.SecurityContextPersistenceFilter@493f2481, org.springframework.security.web.header.HeaderWriterFilter@6315f8e0, org.springframework.security.web.authentication.logout.LogoutFilter@607da424, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@13ff78aa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@281d30ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e532fca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e536e99, org.springframework.security.web.session.SessionManagementFilter@6f1adc32, org.springframework.security.web.access.ExceptionTranslationFilter@588365ed, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4912fc5f]
2020-09-10 22:33:40,581 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 22:33:42,443 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:33:42,516 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 22:33:42,521 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 22:33:42,690 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 22:33:42,702 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 22:33:42,719 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 22:33:42,776 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 22:33:42,839 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 22:33:42,845 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 22:33:44,539 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:33:44,555 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 34.939 seconds (JVM running for 42.39)
2020-09-10 22:33:44,837 [RMI TCP Connection(2)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 22:33:44,838 [RMI TCP Connection(2)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 22:33:44,852 [RMI TCP Connection(2)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 14 ms
2020-09-10 22:33:59,291 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 22:33:59,304 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 22:33:59,306 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:33:59,308 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 22:33:59,309 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 22:33:59,310 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 22:33:59,312 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 22:33:59,315 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 22:33:59,329 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 22:33:59,329 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 22:34:09,835 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:34:09,836 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:34:09,837 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:34:10,272 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:34:10,379 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:34:10,381 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:10,382 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:10,382 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:10,383 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:34:10,383 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:10,383 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:10,384 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:10,449 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:34:10,453 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:34:10,454 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:34:12,370 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:34:12,372 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:34:12,378 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:34:12,415 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:34:12,415 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:34:14,260 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'feignSentinelBuilder' defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.whalex.common.sentinel.configuration.SentinelAutoConfiguration; factoryMethodName=feignSentinelBuilder; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class]] for bean 'feignSentinelBuilder': There is already [Root bean: class [null]; scope=prototype; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration; factoryMethodName=feignSentinelBuilder; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/cloud/seata/feign/SeataFeignClientAutoConfiguration.class]] bound.
2020-09-10 22:34:14,270 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 22:34:14,285 [restartedMain] ERROR [o.s.b.diagnostics.LoggingFailureAnalysisReporter] LoggingFailureAnalysisReporter.java:40 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'feignSentinelBuilder', defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [com/alibaba/cloud/seata/feign/SeataFeignClientAutoConfiguration.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2020-09-10 22:34:41,899 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:34:41,900 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:34:41,900 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:34:42,357 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:34:42,471 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:34:42,475 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:42,475 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:42,475 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:42,477 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:34:42,477 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:42,477 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:42,477 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:42,560 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:34:42,565 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:34:42,567 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:34:44,631 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:34:44,632 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:34:44,639 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:34:44,675 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:34:44,675 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:34:47,203 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 22:34:47,431 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=eea6c41d-4c04-343a-8670-1d16a1ad5605
2020-09-10 22:34:47,620 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:34:47,633 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:34:47,633 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:34:47,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:34:47,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:34:47,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:34:47,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:34:47,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:34:47,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:47,634 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:47,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:34:47,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:47,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:47,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:47,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:34:47,635 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:34:47,701 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:34:47,707 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$9cd1e3e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:47,710 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:47,753 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:47,758 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:47,760 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:34:47,760 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:34:47,761 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:47,761 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:34:47,814 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 22:34:47,822 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:47,833 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:47,948 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:34:48,075 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:34:48,076 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:34:48,089 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 22:34:48,090 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 22:34:48,098 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:34:48,098 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:34:48,098 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:34:48,414 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7067ea69' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,425 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,465 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,472 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3ca6565d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,479 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,492 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,493 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,496 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,609 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:48,724 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:34:49,074 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:34:49,112 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:34:49,112 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4375 ms
2020-09-10 22:34:49,461 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 22:34:49,461 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 22:34:52,995 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 22:34:55,241 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:34:55,549 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 22:34:55,718 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:34:55,719 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 22:34:55,721 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:34:56,488 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xaa57e939, L:/192.168.72.1:52013 - R:/192.168.72.1:8091]
2020-09-10 22:34:56,493 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 84 ms, version:1.3.0,role:RMROLE,channel:[id: 0xaa57e939, L:/192.168.72.1:52013 - R:/192.168.72.1:8091]
2020-09-10 22:34:56,494 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 22:34:56,494 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 22:34:56,494 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 22:34:57,468 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$660d13c2] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 22:34:57,584 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 22:34:57,712 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 22:34:57,879 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:34:57,879 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:34:57,888 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:34:57,888 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:34:58,135 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 22:34:59,870 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:34:59,878 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:35:00,456 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: de8b106f-3800-4500-9067-36f9fc0eee48

2020-09-10 22:35:01,115 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2db75492, org.springframework.security.web.context.SecurityContextPersistenceFilter@7618be78, org.springframework.security.web.header.HeaderWriterFilter@7fecd381, org.springframework.security.web.authentication.logout.LogoutFilter@5acd0012, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@6a85a4fc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71a55434, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25b19bdf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bf13606, org.springframework.security.web.session.SessionManagementFilter@4b8e3c0d, org.springframework.security.web.access.ExceptionTranslationFilter@213da3c0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d915ec5]
2020-09-10 22:35:01,250 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 22:35:02,861 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:35:02,909 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 22:35:02,913 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 20 endpoint(s) beneath base path '/actuator'
2020-09-10 22:35:03,061 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 22:35:03,071 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 22:35:03,087 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 22:35:03,131 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 22:35:03,187 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 22:35:03,193 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 22:35:04,792 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:35:04,808 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 25.704 seconds (JVM running for 30.302)
2020-09-10 22:35:05,354 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 22:35:05,369 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:35:05,371 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 22:35:05,372 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 22:35:05,373 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 22:35:05,375 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 22:35:05,379 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 22:35:05,400 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 22:35:05,400 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 22:35:14,104 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:35:14,106 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:35:14,106 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:35:14,541 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:35:14,644 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:35:14,646 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:14,646 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:14,646 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:14,648 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:35:14,648 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:14,648 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:14,648 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:14,711 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:35:14,714 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:35:14,716 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:35:16,709 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:35:16,711 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:35:16,718 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:35:16,764 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:35:16,765 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:35:19,671 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 22:35:20,017 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=eea6c41d-4c04-343a-8670-1d16a1ad5605
2020-09-10 22:35:20,186 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:35:20,201 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:35:20,201 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:35:20,202 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:35:20,202 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:35:20,202 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:35:20,202 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:35:20,202 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:35:20,202 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:20,203 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:20,203 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:35:20,203 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:20,203 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:20,203 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:20,203 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:35:20,204 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:35:20,275 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:35:20,282 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$23fe1bfe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:20,287 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:20,332 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:20,337 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:20,338 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:35:20,339 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:35:20,340 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:20,340 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:35:20,403 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 22:35:20,410 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:20,421 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:20,534 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:35:20,656 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:35:20,656 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:35:20,669 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 22:35:20,669 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 22:35:20,677 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:35:20,677 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:35:20,677 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:35:20,964 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@55aa5b85' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:20,977 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,015 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,021 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c3d28e73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,029 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,041 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,042 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,045 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,151 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,264 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:35:21,633 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:35:21,688 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:35:21,688 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4846 ms
2020-09-10 22:35:22,190 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 22:35:22,190 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 22:35:51,230 [restartedMain] WARN  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:61 - Unable to start LiveReload server
2020-09-10 22:37:10,721 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:37:11,014 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 22:48:10,494 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:48:10,495 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:48:10,495 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:48:10,956 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:48:11,084 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:48:11,086 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:11,086 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:11,087 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:11,088 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:48:11,088 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:11,088 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:11,089 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:11,161 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:48:11,165 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:48:11,167 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:48:13,270 [restartedMain] ERROR [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:105 - parse data from Nacos error,dataId:application-dev.yml,data:spring:
  redis:1
    host: whalex-redis
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  cloud:
    sentinel:
      eager: true
      filter:
        url-patterns: /** 
      transport:
        # port: 8722
        dashboard: whalex-sentinel:10088
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

feign:
#开启feign sentinel功能
  sentinel:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 10000
  compression:
    request:
      enabled: true
    response:
      enabled: true
mybatis-plus:
  tenant-enable: ture
  mapper-locations: classpath:/mapper/*Mapper.xml
  global-config:
    banner: false
    db-config:
      id-type: auto
      field-strategy: NOT_EMPTY
#  type-handlers-package:  com.pig4cloud.pigx.common.data.handler
whalex:
  tenant:
    tables:
      - sys_role_menu
      - sys_customer_role,
org.yaml.snakeyaml.scanner.ScannerException: mapping values are not allowed here
 in 'reader', line 3, column 9:
        host: whalex-redis
            ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchValue(ScannerImpl.java:870)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:358)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:558)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:235)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:162)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:95)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:134)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:494)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:200)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:164)
	at org.springframework.beans.factory.config.YamlMapFactoryBean.createMap(YamlMapFactoryBean.java:124)
	at org.springframework.beans.factory.config.YamlMapFactoryBean.getObject(YamlMapFactoryBean.java:104)
	at com.alibaba.cloud.nacos.parser.NacosDataYamlParser.doParse(NacosDataYamlParser.java:40)
	at com.alibaba.cloud.nacos.parser.AbstractNacosDataParser.parseNacosData(AbstractNacosDataParser.java:80)
	at com.alibaba.cloud.nacos.parser.AbstractNacosDataParser.parseNacosData(AbstractNacosDataParser.java:85)
	at com.alibaba.cloud.nacos.parser.NacosDataParserHandler.parseNacosData(NacosDataParserHandler.java:45)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:98)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:74)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosPropertySource(NacosPropertySourceLocator.java:204)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:191)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosConfiguration(NacosPropertySourceLocator.java:161)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadSharedConfiguration(NacosPropertySourceLocator.java:117)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:101)
	at org.springframework.cloud.bootstrap.config.PropertySourceLocator.locateCollection(PropertySourceLocator.java:52)
	at org.springframework.cloud.bootstrap.config.PropertySourceLocator.locateCollection(PropertySourceLocator.java:47)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:98)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:626)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.whalex.pay.order.WhalePayApplication.main(WhalePayApplication.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2020-09-10 22:48:13,273 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:48:13,275 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:48:13,281 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:48:13,320 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:48:13,321 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:48:16,039 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-09-10 22:48:16,294 [restartedMain] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:295 - BeanFactory id=c40b4ea0-bbe7-36d8-9278-8eb9103321bc
2020-09-10 22:48:16,490 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:48:16,505 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:48:16,505 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:48:16,505 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-whale-pay-order,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:48:16,505 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper
2020-09-10 22:48:16,506 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:48:16,506 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:48:16,506 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:48:16,506 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:16,506 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:16,506 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:48:16,506 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:16,506 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:16,507 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:16,507 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:48:16,507 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:48:16,574 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:48:16,579 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$d80fe581] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:16,583 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'springApplicationContextProvider' of type [io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:16,623 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'failureHandler' of type [io.seata.tm.api.DefaultFailureHandlerImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:16,628 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:16,629 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:48:16,629 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:48:16,630 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seata-io.seata.spring.boot.autoconfigure.properties.SeataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:16,631 [restartedMain] INFO  [i.s.s.boot.autoconfigure.SeataAutoConfiguration] SeataAutoConfiguration.java:65 - Automatically configure Seata
2020-09-10 22:48:16,682 [restartedMain] INFO  [io.seata.config.ConfigurationFactory] ConfigurationFactory.java:65 - load Configuration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
2020-09-10 22:48:16,690 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:16,702 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'configNacosProperties' of type [io.seata.spring.boot.autoconfigure.properties.config.ConfigNacosProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:16,835 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:164 - Initializing Global Transaction Clients ... 
2020-09-10 22:48:17,027 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:48:17,028 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:172 - Transaction Manager Client is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:48:17,045 [restartedMain] INFO  [io.seata.rm.datasource.AsyncWorker] AsyncWorker.java:125 - Async Commit Buffer Limit: 10000
2020-09-10 22:48:17,046 [restartedMain] INFO  [io.seata.rm.datasource.xa.ResourceManagerXA] ResourceManagerXA.java:40 - ResourceManagerXA init ...
2020-09-10 22:48:17,056 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientBootstrap] NettyClientBootstrap.java:147 - NettyClientBootstrap has started
2020-09-10 22:48:17,056 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:177 - Resource Manager is initialized. applicationId[seata-server] txServiceGroup[tx_group]
2020-09-10 22:48:17,056 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:181 - Global Transaction Clients are initialized. 
2020-09-10 22:48:17,463 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7fdd76d5' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,480 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,528 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,536 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$77e457f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,546 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,565 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,565 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,570 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,647 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:17,703 [restartedMain] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:335 - Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-10 22:48:18,113 [restartedMain] WARN  [io.undertow.websockets.jsr] Bootstrap.java:68 - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2020-09-10 22:48:18,153 [restartedMain] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring embedded WebApplicationContext
2020-09-10 22:48:18,153 [restartedMain] INFO  [o.s.b.w.s.c.ServletWebServerApplicationContext] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 4762 ms
2020-09-10 22:48:18,396 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
2020-09-10 22:48:18,396 [restartedMain] WARN  [o.springframework.boot.actuate.endpoint.EndpointId] EndpointId.java:155 - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2020-09-10 22:48:20,662 [restartedMain] INFO  [o.s.b.d.autoconfigure.OptionalLiveReloadServer] OptionalLiveReloadServer.java:58 - LiveReload server is running on port 35729
2020-09-10 22:48:21,084 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:191 - dynamic-datasource detect ALIBABA SEATA and enabled it
2020-09-10 22:48:21,502 [restartedMain] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:1010 - {dataSource-1,master} inited
2020-09-10 22:48:21,699 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyClientChannelManager] NettyClientChannelManager.java:99 - will connect to 192.168.72.1:8091
2020-09-10 22:48:21,699 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:244 - RM will register :jdbc:mysql://whalex-mysql:3306/whalex-pay
2020-09-10 22:48:21,703 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:56 - NettyPool create channel to transactionRole:RMROLE,address:192.168.72.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql://whalex-mysql:3306/whalex-pay', applicationId='seata-server', transactionServiceGroup='tx_group'} >
2020-09-10 22:48:22,728 [restartedMain] INFO  [io.seata.core.rpc.netty.RmNettyRemotingClient] RmNettyRemotingClient.java:151 - register RM success. client version:1.3.0, server version:1.3.0,channel:[id: 0xbf0601a1, L:/192.168.72.1:56963 - R:/192.168.72.1:8091]
2020-09-10 22:48:22,736 [restartedMain] INFO  [io.seata.core.rpc.netty.NettyPoolableFactory] NettyPoolableFactory.java:81 - register success, cost 115 ms, version:1.3.0,role:RMROLE,channel:[id: 0xbf0601a1, L:/192.168.72.1:56963 - R:/192.168.72.1:8091]
2020-09-10 22:48:22,738 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:130 - dynamic-datasource [master] wrap seata plugin
2020-09-10 22:48:22,738 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:148 - dynamic-datasource - load a datasource named [master] success
2020-09-10 22:48:22,738 [restartedMain] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:235 - dynamic-datasource initial loaded [1] datasource,primary datasource named [master]
2020-09-10 22:48:23,894 [restartedMain] INFO  [i.seata.spring.annotation.GlobalTransactionScanner] GlobalTransactionScanner.java:231 - Bean[com.whalex.pay.order.service.impl.PayTradeOrderServiceImpl$$EnhancerBySpringCGLIB$$c09688f9] with name [payTradeOrderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
2020-09-10 22:48:24,024 [restartedMain] INFO  [c.a.cloud.sentinel.SentinelWebAutoConfiguration] SentinelWebAutoConfiguration.java:80 - [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**].
2020-09-10 22:48:24,163 [restartedMain] WARN  [o.s.s.o.p.token.store.JwtAccessTokenConverter] JwtAccessTokenConverter.java:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-09-10 22:48:24,326 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:48:24,326 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:48:24,334 [restartedMain] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-09-10 22:48:24,334 [restartedMain] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-09-10 22:48:24,572 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-09-10 22:48:26,391 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:48:26,400 [restartedMain] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:181 - Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:48:27,015 [restartedMain] INFO  [o.s.b.a.s.s.UserDetailsServiceAutoConfiguration] UserDetailsServiceAutoConfiguration.java:86 - 

Using generated security password: 18808533-b091-4bcc-9c84-cd438774ba71

2020-09-10 22:48:27,680 [restartedMain] INFO  [o.s.security.web.DefaultSecurityFilterChain] DefaultSecurityFilterChain.java:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20972b0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@25de046a, org.springframework.security.web.header.HeaderWriterFilter@b0a8446, org.springframework.security.web.authentication.logout.LogoutFilter@110e9208, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@2aa796a3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d9f30dc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30880c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61f7213e, org.springframework.security.web.session.SessionManagementFilter@72b46581, org.springframework.security.web.access.ExceptionTranslationFilter@6fcfaf6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@25e1fedd]
2020-09-10 22:48:27,806 [restartedMain] WARN  [o.s.b.a.freemarker.FreeMarkerAutoConfiguration] FreeMarkerAutoConfiguration.java:67 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-09-10 22:48:29,401 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:48:29,614 [restartedMain] WARN  [o.s.c.s.o.SpringCloudSecurityAutoConfiguration] SpringCloudSecurityAutoConfiguration.java:38 - All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release.
2020-09-10 22:48:29,618 [restartedMain] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:58 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-09-10 22:48:29,760 [restartedMain] INFO  [io.undertow] Undertow.java:117 - starting server: Undertow - 2.1.3.Final
2020-09-10 22:48:29,771 [restartedMain] INFO  [org.xnio] Xnio.java:95 - XNIO version 3.8.0.Final
2020-09-10 22:48:29,786 [restartedMain] INFO  [org.xnio.nio] NioXnio.java:59 - XNIO NIO Implementation Version 3.8.0.Final
2020-09-10 22:48:29,830 [restartedMain] INFO  [org.jboss.threads] Version.java:52 - JBoss Threads version 3.1.0.Final
2020-09-10 22:48:29,883 [restartedMain] INFO  [o.s.boot.web.embedded.undertow.UndertowWebServer] UndertowWebServer.java:133 - Undertow started on port(s) 10009 (http)
2020-09-10 22:48:29,889 [restartedMain] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:65 - nacos registry, DEFAULT_GROUP whale-pay-order 192.168.72.1:10009 register finished
2020-09-10 22:48:31,386 [restartedMain] INFO  [org.springframework.cloud.commons.util.InetUtils] InetUtils.java:170 - Cannot determine local hostname
2020-09-10 22:48:31,402 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] StartupInfoLogger.java:61 - Started WhalePayApplication in 23.89 seconds (JVM running for 28.449)
2020-09-10 22:48:32,099 [RMI TCP Connection(8)-192.168.72.1] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-10 22:48:32,100 [RMI TCP Connection(8)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:525 - Initializing Servlet 'dispatcherServlet'
2020-09-10 22:48:32,113 [RMI TCP Connection(8)-192.168.72.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:547 - Completed initialization in 13 ms
2020-09-10 22:48:44,528 [SpringContextShutdownHook] INFO  [io.undertow] Undertow.java:252 - stopping server: Undertow - 2.1.3.Final
2020-09-10 22:48:44,542 [SpringContextShutdownHook] INFO  [io.undertow.servlet] ServletContextImpl.java:364 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-09-10 22:48:44,545 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskScheduler] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'Nacso-Watch-Task-Scheduler'
2020-09-10 22:48:44,547 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:80 - De-registering from Nacos Server now...
2020-09-10 22:48:44,548 [SpringContextShutdownHook] INFO  [c.a.cloud.nacos.registry.NacosServiceRegistry] NacosServiceRegistry.java:100 - De-registration finished.
2020-09-10 22:48:44,549 [SpringContextShutdownHook] INFO  [o.s.scheduling.concurrent.ThreadPoolTaskExecutor] ExecutorConfigurationSupport.java:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-10 22:48:44,551 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:201 - dynamic-datasource start closing ....
2020-09-10 22:48:44,554 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2003 - {dataSource-1} closing ...
2020-09-10 22:48:44,569 [SpringContextShutdownHook] INFO  [com.alibaba.druid.pool.DruidDataSource] DruidDataSource.java:2075 - {dataSource-1} closed
2020-09-10 22:48:44,569 [SpringContextShutdownHook] INFO  [c.b.dynamic.datasource.DynamicRoutingDataSource] DynamicRoutingDataSource.java:221 - dynamic-datasource all closed success,bye
2020-09-10 22:55:21,480 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-core\2.3.0.1\jaxb-core-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-core/2.3.0.1/jaxb-api.jar
2020-09-10 22:55:21,481 [restartedMain] INFO  [o.s.boot.devtools.restart.ChangeableUrls] DeferredLog.java:225 - The Class-Path manifest attribute in E:\maven\repository\com\sun\xml\bind\jaxb-impl\2.3.0.1\jaxb-impl-2.3.0.1.jar referenced one or more files that do not exist: file:/E:/maven/repository/com/sun/xml/bind/jaxb-impl/2.3.0.1/jaxb-core.jar
2020-09-10 22:55:21,481 [restartedMain] INFO  [o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor] DeferredLog.java:225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-09-10 22:55:22,003 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] EnableEncryptablePropertiesBeanFactoryPostProcessor.java:50 - Post-processing PropertySource instances
2020-09-10 22:55:22,134 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2020-09-10 22:55:22,136 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:55:22,136 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:55:22,137 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:55:22,138 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-09-10 22:55:22,139 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:55:22,139 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:55:22,139 [restartedMain] INFO  [c.u.j.EncryptablePropertySourceConverter] EncryptablePropertySourceConverter.java:39 - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-09-10 22:55:22,227 [restartedMain] INFO  [c.u.j.filter.DefaultLazyPropertyFilter] DefaultLazyPropertyFilter.java:31 - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2020-09-10 22:55:22,234 [restartedMain] INFO  [c.u.j.resolver.DefaultLazyPropertyResolver] DefaultLazyPropertyResolver.java:31 - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-09-10 22:55:22,236 [restartedMain] INFO  [c.u.j.detector.DefaultLazyPropertyDetector] DefaultLazyPropertyDetector.java:30 - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-09-10 22:55:24,533 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order] & group[DEFAULT_GROUP]
2020-09-10 22:55:24,534 [restartedMain] WARN  [c.a.cloud.nacos.client.NacosPropertySourceBuilder] NacosPropertySourceBuilder.java:87 - Ignore the empty nacos configuration and get it based on dataId[whale-pay-order.yml] & group[DEFAULT_GROUP]
2020-09-10 22:55:24,540 [restartedMain] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:112 - Located property source: [BootstrapPropertySource {name='bootstrapProperties-whale-pay-order-dev.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order.yml,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-whale-pay-order,DEFAULT_GROUP'}, BootstrapPropertySource {name='bootstrapProperties-application-dev.yml,DEFAULT_GROUP'}]
2020-09-10 22:55:24,578 [restartedMain] INFO  [c.u.j.c.EnableEncryptablePropertiesConfiguration] EnableEncryptablePropertiesConfiguration.java:72 - Bootstraping jasypt-string-boot auto configuration in context: whale-pay-order-1
2020-09-10 22:55:24,578 [restartedMain] INFO  [com.whalex.pay.order.WhalePayApplication] SpringApplication.java:655 - The following profiles are active: dev
2020-09-10 22:55:26,379 [restartedMain] WARN  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'feignSentinelBuilder' defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.whalex.common.sentinel.configuration.SentinelAutoConfiguration; factoryMethodName=feignSentinelBuilder; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class]] for bean 'feignSentinelBuilder': There is already [Root bean: class [null]; scope=prototype; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration; factoryMethodName=feignSentinelBuilder; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/cloud/seata/feign/SeataFeignClientAutoConfiguration.class]] bound.
2020-09-10 22:55:26,388 [restartedMain] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-10 22:55:26,403 [restartedMain] ERROR [o.s.b.diagnostics.LoggingFailureAnalysisReporter] LoggingFailureAnalysisReporter.java:40 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'feignSentinelBuilder', defined in class path resource [com/whalex/common/sentinel/configuration/SentinelAutoConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [com/alibaba/cloud/seata/feign/SeataFeignClientAutoConfiguration.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

